// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_rows_V_read,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state15 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [10:0] p_src_rows_V_read;
input  [11:0] p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1469;
reg   [0:0] exitcond460_i_reg_1469_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_1501;
reg   [0:0] icmp_reg_1356;
reg   [0:0] tmp_2_reg_1351;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] or_cond_i_reg_1497;
reg   [0:0] or_cond_i_reg_1497_pp0_iter8_reg;
reg   [31:0] t_V_1_reg_266;
reg   [7:0] reg_277;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
reg    ap_predicate_op159_read_state7;
reg    ap_predicate_op160_read_state7;
reg    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state10_pp0_stage0_iter5;
wire    ap_block_state11_pp0_stage0_iter6;
wire    ap_block_state12_pp0_stage0_iter7;
wire    ap_block_state13_pp0_stage0_iter8;
reg    ap_block_state14_pp0_stage0_iter9;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] reg_277_pp0_iter3_reg;
wire  signed [31:0] p_src_cols_V_read_cas_fu_284_p1;
reg  signed [31:0] p_src_cols_V_read_cas_reg_1291;
wire  signed [31:0] p_src_rows_V_read_cas_fu_288_p1;
reg  signed [31:0] p_src_rows_V_read_cas_reg_1297;
wire  signed [31:0] tmp_cast_fu_302_p1;
reg  signed [31:0] tmp_cast_reg_1309;
wire  signed [31:0] tmp_1_cast_fu_316_p1;
reg  signed [31:0] tmp_1_cast_reg_1314;
wire   [1:0] tmp_6_fu_328_p2;
reg   [1:0] tmp_6_reg_1319;
wire   [1:0] tmp_9_fu_346_p2;
reg   [1:0] tmp_9_reg_1326;
wire  signed [31:0] tmp_13_cast_fu_370_p1;
reg  signed [31:0] tmp_13_cast_reg_1333;
wire   [1:0] tmp_14_fu_374_p2;
reg   [1:0] tmp_14_reg_1338;
wire   [31:0] i_V_fu_385_p2;
reg   [31:0] i_V_reg_1346;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_2_fu_391_p2;
wire   [0:0] exitcond461_i_fu_380_p2;
wire   [0:0] icmp_fu_406_p2;
wire   [0:0] tmp_16_fu_412_p2;
reg   [0:0] tmp_16_reg_1361;
wire   [0:0] tmp_109_1_fu_418_p2;
reg   [0:0] tmp_109_1_reg_1365;
wire   [0:0] tmp_17_fu_424_p2;
reg   [0:0] tmp_17_reg_1369;
wire   [1:0] tmp_18_fu_429_p1;
reg   [1:0] tmp_18_reg_1376;
wire   [31:0] tmp_19_fu_433_p2;
reg   [31:0] tmp_19_reg_1383;
reg   [0:0] tmp_22_reg_1390;
wire   [31:0] p_assign_7_fu_447_p2;
reg   [31:0] p_assign_7_reg_1395;
wire   [31:0] p_assign_6_1_fu_453_p2;
reg   [31:0] p_assign_6_1_reg_1400;
reg   [0:0] tmp_26_reg_1407;
wire   [31:0] p_assign_7_1_fu_467_p2;
reg   [31:0] p_assign_7_1_reg_1412;
wire   [31:0] p_assign_6_2_fu_473_p2;
reg   [31:0] p_assign_6_2_reg_1417;
reg   [0:0] tmp_29_reg_1424;
wire   [31:0] p_assign_7_2_fu_487_p2;
reg   [31:0] p_assign_7_2_reg_1429;
wire   [1:0] tmp_34_fu_622_p3;
reg   [1:0] tmp_34_reg_1434;
wire    ap_CS_fsm_state3;
wire   [1:0] tmp_42_fu_648_p3;
reg   [1:0] tmp_42_reg_1439;
wire   [1:0] tmp_46_fu_674_p3;
reg   [1:0] tmp_46_reg_1444;
wire   [0:0] tmp_65_0_not_fu_682_p2;
reg   [0:0] tmp_65_0_not_reg_1449;
wire    ap_CS_fsm_state4;
wire   [1:0] row_assign_9_0_t_fu_687_p2;
reg   [1:0] row_assign_9_0_t_reg_1454;
wire   [1:0] row_assign_9_1_t_fu_691_p2;
reg   [1:0] row_assign_9_1_t_reg_1459;
wire   [1:0] row_assign_9_2_t_fu_695_p2;
reg   [1:0] row_assign_9_2_t_reg_1464;
wire   [0:0] exitcond460_i_fu_699_p2;
wire    ap_CS_fsm_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1469_pp0_iter2_reg;
reg   [0:0] exitcond460_i_reg_1469_pp0_iter3_reg;
reg   [0:0] exitcond460_i_reg_1469_pp0_iter4_reg;
reg   [0:0] exitcond460_i_reg_1469_pp0_iter5_reg;
wire   [31:0] j_V_fu_704_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] ImagLoc_x_fu_726_p2;
reg   [31:0] ImagLoc_x_reg_1478;
reg   [0:0] tmp_49_reg_1484;
wire   [31:0] p_p2_i_i_fu_754_p3;
reg   [31:0] p_p2_i_i_reg_1490;
wire   [0:0] or_cond_i_fu_762_p2;
reg   [0:0] or_cond_i_reg_1497_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_1497_pp0_iter2_reg;
reg   [0:0] or_cond_i_reg_1497_pp0_iter3_reg;
reg   [0:0] or_cond_i_reg_1497_pp0_iter4_reg;
reg   [0:0] or_cond_i_reg_1497_pp0_iter5_reg;
reg   [0:0] or_cond_i_reg_1497_pp0_iter6_reg;
reg   [0:0] or_cond_i_reg_1497_pp0_iter7_reg;
wire   [0:0] or_cond_i_i_fu_776_p2;
reg   [0:0] or_cond_i_i_reg_1501_pp0_iter2_reg;
reg   [0:0] or_cond_i_i_reg_1501_pp0_iter3_reg;
wire   [31:0] x_fu_814_p3;
reg   [31:0] x_reg_1505;
wire   [1:0] tmp_53_fu_821_p1;
reg   [1:0] tmp_53_reg_1510;
wire   [0:0] brmerge_fu_825_p2;
reg   [0:0] brmerge_reg_1515;
reg   [0:0] brmerge_reg_1515_pp0_iter2_reg;
reg   [0:0] brmerge_reg_1515_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_3_addr_reg_1522;
wire   [1:0] col_assign_2_t_fu_836_p2;
reg   [1:0] col_assign_2_t_reg_1528;
reg   [1:0] col_assign_2_t_reg_1528_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_4_addr_reg_1535;
reg   [10:0] k_buf_0_val_4_addr_reg_1535_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_5_addr_reg_1541;
reg   [10:0] k_buf_0_val_5_addr_reg_1541_pp0_iter3_reg;
wire   [7:0] k_buf_0_val_3_q0;
reg   [7:0] k_buf_0_val_3_load_reg_1547;
reg    ap_enable_reg_pp0_iter3;
wire   [7:0] k_buf_0_val_4_q0;
reg   [7:0] k_buf_0_val_4_load_reg_1553;
wire   [7:0] k_buf_0_val_5_q0;
reg   [7:0] k_buf_0_val_5_load_reg_1559;
wire   [7:0] col_buf_0_val_0_0_fu_869_p3;
reg   [7:0] col_buf_0_val_0_0_reg_1564;
wire   [7:0] col_buf_0_val_1_0_fu_886_p3;
reg   [7:0] col_buf_0_val_1_0_reg_1572;
wire   [7:0] col_buf_0_val_2_0_fu_903_p3;
reg   [7:0] col_buf_0_val_2_0_reg_1580;
wire   [7:0] src_kernel_win_0_va_6_fu_953_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1588;
wire   [7:0] src_kernel_win_0_va_7_fu_967_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1595;
reg   [7:0] src_kernel_win_0_va_7_reg_1595_pp0_iter6_reg;
wire   [7:0] src_kernel_win_0_va_8_fu_981_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1602;
wire   [10:0] tmp25_fu_1064_p2;
reg   [10:0] tmp25_reg_1608;
wire   [9:0] tmp27_fu_1070_p2;
reg   [9:0] tmp27_reg_1613;
wire   [7:0] tmp28_fu_1076_p2;
reg   [7:0] tmp28_reg_1618;
wire   [7:0] tmp30_fu_1082_p2;
reg   [7:0] tmp30_reg_1623;
reg   [0:0] p_Result_s_reg_1628;
wire   [7:0] p_Val2_1_fu_1166_p2;
reg   [7:0] p_Val2_1_reg_1634;
reg   [2:0] tmp_54_reg_1639;
wire   [7:0] p_Val2_3_fu_1210_p3;
reg   [7:0] p_Val2_3_reg_1644;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_condition_pp0_exit_iter4_state9;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [31:0] t_V_reg_255;
wire    ap_CS_fsm_state15;
wire   [63:0] tmp_35_fu_830_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_122;
reg   [7:0] src_kernel_win_0_va_1_fu_126;
reg   [7:0] src_kernel_win_0_va_2_fu_130;
reg   [7:0] src_kernel_win_0_va_3_fu_134;
reg   [7:0] src_kernel_win_0_va_4_fu_138;
reg   [7:0] src_kernel_win_0_va_5_fu_142;
reg   [7:0] right_border_buf_0_s_fu_146;
reg   [7:0] right_border_buf_0_1_fu_150;
reg   [7:0] right_border_buf_0_2_fu_154;
reg   [7:0] right_border_buf_0_3_fu_158;
reg   [7:0] right_border_buf_0_4_fu_162;
reg   [7:0] right_border_buf_0_5_fu_166;
wire  signed [11:0] p_src_cols_V_read_cas_fu_284_p0;
wire  signed [10:0] p_src_rows_V_read_cas_fu_288_p0;
wire  signed [11:0] p_src_cols_V_read_cas_1_fu_292_p0;
wire  signed [12:0] p_src_cols_V_read_cas_1_fu_292_p1;
wire   [12:0] tmp_s_fu_296_p2;
wire  signed [10:0] p_src_rows_V_read_cas_1_fu_306_p0;
wire  signed [11:0] p_src_rows_V_read_cas_1_fu_306_p1;
wire   [11:0] tmp_1_fu_310_p2;
wire  signed [10:0] tmp_3_fu_320_p0;
wire  signed [11:0] tmp_4_fu_324_p0;
wire   [1:0] tmp_3_fu_320_p1;
wire  signed [10:0] tmp_7_fu_334_p0;
wire   [0:0] tmp_7_fu_334_p1;
wire   [1:0] tmp_8_fu_338_p3;
wire  signed [11:0] tmp_12_fu_352_p1;
wire   [12:0] tmp_12_fu_352_p3;
wire  signed [13:0] tmp_12_cast_fu_360_p1;
wire   [13:0] tmp_13_fu_364_p2;
wire   [1:0] tmp_4_fu_324_p1;
wire   [30:0] tmp_15_fu_396_p4;
wire   [0:0] tmp_20_fu_493_p3;
wire   [0:0] tmp_21_fu_506_p2;
wire   [0:0] rev_fu_500_p2;
wire   [31:0] p_p2_i497_i_fu_516_p3;
wire   [0:0] tmp_25_fu_530_p3;
wire   [0:0] tmp_135_1_fu_543_p2;
wire   [0:0] rev1_fu_537_p2;
wire   [31:0] p_p2_i497_i_1_fu_553_p3;
wire   [0:0] tmp_28_fu_567_p3;
wire   [0:0] tmp_135_2_fu_580_p2;
wire   [0:0] rev2_fu_574_p2;
wire   [31:0] p_p2_i497_i_2_fu_590_p3;
wire   [1:0] tmp_24_fu_526_p1;
wire   [0:0] tmp_23_fu_521_p2;
wire   [1:0] tmp_31_fu_604_p2;
wire   [0:0] or_cond_i496_i_fu_510_p2;
wire   [1:0] tmp_33_fu_617_p2;
wire   [1:0] tmp_32_fu_609_p3;
wire   [1:0] tmp_27_fu_563_p1;
wire   [0:0] tmp_144_1_fu_558_p2;
wire   [1:0] tmp_36_fu_630_p2;
wire   [0:0] or_cond_i496_i_1_fu_547_p2;
wire   [1:0] tmp_38_fu_643_p2;
wire   [1:0] tmp_37_fu_635_p3;
wire   [1:0] tmp_30_fu_600_p1;
wire   [0:0] tmp_144_2_fu_595_p2;
wire   [1:0] tmp_43_fu_656_p2;
wire   [0:0] or_cond_i496_i_2_fu_584_p2;
wire   [1:0] tmp_45_fu_669_p2;
wire   [1:0] tmp_44_fu_661_p3;
wire   [30:0] tmp_48_fu_710_p4;
wire   [0:0] tmp_50_fu_740_p3;
wire   [31:0] p_assign_1_fu_748_p2;
wire   [0:0] icmp1_fu_720_p2;
wire   [0:0] tmp_5_fu_772_p2;
wire   [0:0] rev3_fu_767_p2;
wire   [31:0] p_assign_2_fu_786_p2;
wire   [0:0] tmp_5_not_fu_797_p2;
wire   [0:0] tmp_11_fu_782_p2;
wire   [0:0] sel_tmp7_fu_803_p2;
wire   [0:0] sel_tmp8_fu_808_p2;
wire   [31:0] p_assign_3_fu_790_p3;
wire   [7:0] tmp_39_fu_858_p5;
wire   [7:0] tmp_40_fu_875_p5;
wire   [7:0] tmp_41_fu_892_p5;
wire   [7:0] tmp_47_fu_945_p5;
wire   [7:0] tmp_51_fu_959_p5;
wire   [7:0] tmp_52_fu_973_p5;
wire   [8:0] tmp_151_0_2_cast_fu_1000_p1;
wire   [8:0] r_V_0_cast_fu_996_p1;
wire  signed [8:0] sum_V_0_2_fu_1003_p2;
wire   [8:0] p_shl_fu_1013_p3;
wire   [9:0] p_shl_cast_fu_1021_p1;
wire  signed [9:0] r_V_2_1_fu_1025_p2;
wire   [8:0] r_V_214_cast_fu_1043_p1;
wire  signed [8:0] r_V_2_2_fu_1047_p2;
wire  signed [10:0] tmp_151_2_cast_fu_1053_p1;
wire  signed [10:0] tmp_151_1_cast_fu_1031_p1;
wire   [9:0] tmp_151_2_2_cast_cas_fu_1061_p1;
wire  signed [9:0] sum_V_0_2_cast_cast_fu_1009_p1;
wire   [7:0] tmp_57_fu_1039_p1;
wire   [7:0] tmp_56_fu_1035_p1;
wire   [7:0] tmp_60_fu_1057_p1;
wire   [8:0] r_V_2_1_2_fu_1123_p3;
wire   [10:0] tmp_151_1_cast_45_fu_1130_p1;
wire  signed [10:0] tmp27_cast_fu_1139_p1;
wire   [10:0] tmp26_fu_1142_p2;
wire   [10:0] p_Val2_s_fu_1148_p2;
wire   [7:0] tmp_59_fu_1134_p2;
wire   [7:0] tmp29_fu_1161_p2;
wire   [0:0] not_i_i_fu_1186_p2;
wire   [0:0] tmp_i_i_fu_1181_p2;
wire   [0:0] overflow_fu_1191_p2;
wire   [0:0] tmp_9_i_i_fu_1205_p2;
wire   [7:0] p_mux_i_i_cast_fu_1197_p3;
reg   [5:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_153;
reg    ap_enable_state7_pp0_iter2_stage0;
reg    ap_enable_operation_161;
reg    ap_enable_state8_pp0_iter3_stage0;
reg    ap_predicate_op164_store_state8;
reg    ap_enable_operation_164;
reg    ap_predicate_op166_store_state8;
reg    ap_enable_operation_166;
reg    ap_enable_operation_156;
reg    ap_enable_operation_162;
reg    ap_predicate_op186_store_state9;
reg    ap_enable_operation_186;
reg    ap_enable_state9_pp0_iter4_stage0;
reg    ap_predicate_op191_store_state9;
reg    ap_enable_operation_191;
reg    ap_predicate_op158_load_state7;
reg    ap_enable_operation_158;
reg    ap_predicate_op163_load_state8;
reg    ap_enable_operation_163;
reg    ap_predicate_op184_store_state9;
reg    ap_enable_operation_184;
reg    ap_predicate_op190_store_state9;
reg    ap_enable_operation_190;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1129;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
end

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(reg_277)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

SobelX_accel_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
SobelX_accel_mux_eOg_U15(
    .din0(right_border_buf_0_s_fu_146),
    .din1(right_border_buf_0_1_fu_150),
    .din2(8'd0),
    .din3(col_assign_2_t_reg_1528_pp0_iter3_reg),
    .dout(tmp_39_fu_858_p5)
);

SobelX_accel_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
SobelX_accel_mux_eOg_U16(
    .din0(right_border_buf_0_3_fu_158),
    .din1(right_border_buf_0_4_fu_162),
    .din2(8'd0),
    .din3(col_assign_2_t_reg_1528_pp0_iter3_reg),
    .dout(tmp_40_fu_875_p5)
);

SobelX_accel_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
SobelX_accel_mux_eOg_U17(
    .din0(right_border_buf_0_5_fu_166),
    .din1(right_border_buf_0_2_fu_154),
    .din2(8'd0),
    .din3(col_assign_2_t_reg_1528_pp0_iter3_reg),
    .dout(tmp_41_fu_892_p5)
);

SobelX_accel_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
SobelX_accel_mux_eOg_U18(
    .din0(col_buf_0_val_0_0_reg_1564),
    .din1(col_buf_0_val_1_0_reg_1572),
    .din2(col_buf_0_val_2_0_reg_1580),
    .din3(row_assign_9_0_t_reg_1454),
    .dout(tmp_47_fu_945_p5)
);

SobelX_accel_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
SobelX_accel_mux_eOg_U19(
    .din0(col_buf_0_val_0_0_reg_1564),
    .din1(col_buf_0_val_1_0_reg_1572),
    .din2(col_buf_0_val_2_0_reg_1580),
    .din3(row_assign_9_1_t_reg_1459),
    .dout(tmp_51_fu_959_p5)
);

SobelX_accel_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
SobelX_accel_mux_eOg_U20(
    .din0(col_buf_0_val_0_0_reg_1564),
    .din1(col_buf_0_val_1_0_reg_1572),
    .din2(col_buf_0_val_2_0_reg_1580),
    .din3(row_assign_9_2_t_reg_1464),
    .dout(tmp_52_fu_973_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond460_i_fu_699_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter4_state9)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_fu_699_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_V_1_reg_266 <= j_V_fu_704_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_V_1_reg_266 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        t_V_reg_255 <= i_V_reg_1346;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_reg_255 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_fu_699_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ImagLoc_x_reg_1478 <= ImagLoc_x_fu_726_p2;
        or_cond_i_reg_1497 <= or_cond_i_fu_762_p2;
        p_p2_i_i_reg_1490 <= p_p2_i_i_fu_754_p3;
        tmp_49_reg_1484 <= ImagLoc_x_fu_726_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_reg_1469 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        brmerge_reg_1515 <= brmerge_fu_825_p2;
        or_cond_i_i_reg_1501 <= or_cond_i_i_fu_776_p2;
        tmp_53_reg_1510 <= tmp_53_fu_821_p1;
        x_reg_1505 <= x_fu_814_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        brmerge_reg_1515_pp0_iter2_reg <= brmerge_reg_1515;
        brmerge_reg_1515_pp0_iter3_reg <= brmerge_reg_1515_pp0_iter2_reg;
        col_assign_2_t_reg_1528_pp0_iter3_reg <= col_assign_2_t_reg_1528;
        exitcond460_i_reg_1469_pp0_iter2_reg <= exitcond460_i_reg_1469_pp0_iter1_reg;
        exitcond460_i_reg_1469_pp0_iter3_reg <= exitcond460_i_reg_1469_pp0_iter2_reg;
        exitcond460_i_reg_1469_pp0_iter4_reg <= exitcond460_i_reg_1469_pp0_iter3_reg;
        exitcond460_i_reg_1469_pp0_iter5_reg <= exitcond460_i_reg_1469_pp0_iter4_reg;
        k_buf_0_val_4_addr_reg_1535_pp0_iter3_reg <= k_buf_0_val_4_addr_reg_1535;
        k_buf_0_val_5_addr_reg_1541_pp0_iter3_reg <= k_buf_0_val_5_addr_reg_1541;
        or_cond_i_i_reg_1501_pp0_iter2_reg <= or_cond_i_i_reg_1501;
        or_cond_i_i_reg_1501_pp0_iter3_reg <= or_cond_i_i_reg_1501_pp0_iter2_reg;
        or_cond_i_reg_1497_pp0_iter2_reg <= or_cond_i_reg_1497_pp0_iter1_reg;
        or_cond_i_reg_1497_pp0_iter3_reg <= or_cond_i_reg_1497_pp0_iter2_reg;
        or_cond_i_reg_1497_pp0_iter4_reg <= or_cond_i_reg_1497_pp0_iter3_reg;
        or_cond_i_reg_1497_pp0_iter5_reg <= or_cond_i_reg_1497_pp0_iter4_reg;
        or_cond_i_reg_1497_pp0_iter6_reg <= or_cond_i_reg_1497_pp0_iter5_reg;
        or_cond_i_reg_1497_pp0_iter7_reg <= or_cond_i_reg_1497_pp0_iter6_reg;
        or_cond_i_reg_1497_pp0_iter8_reg <= or_cond_i_reg_1497_pp0_iter7_reg;
        reg_277_pp0_iter3_reg <= reg_277;
        src_kernel_win_0_va_6_reg_1588 <= src_kernel_win_0_va_6_fu_953_p3;
        src_kernel_win_0_va_7_reg_1595 <= src_kernel_win_0_va_7_fu_967_p3;
        src_kernel_win_0_va_7_reg_1595_pp0_iter6_reg <= src_kernel_win_0_va_7_reg_1595;
        src_kernel_win_0_va_8_reg_1602 <= src_kernel_win_0_va_8_fu_981_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_reg_1469_pp0_iter1_reg == 1'd0))) begin
        col_assign_2_t_reg_1528 <= col_assign_2_t_fu_836_p2;
        k_buf_0_val_3_addr_reg_1522 <= tmp_35_fu_830_p1;
        k_buf_0_val_4_addr_reg_1535 <= tmp_35_fu_830_p1;
        k_buf_0_val_5_addr_reg_1541 <= tmp_35_fu_830_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0))) begin
        col_buf_0_val_0_0_reg_1564 <= col_buf_0_val_0_0_fu_869_p3;
        col_buf_0_val_1_0_reg_1572 <= col_buf_0_val_1_0_fu_886_p3;
        col_buf_0_val_2_0_reg_1580 <= col_buf_0_val_2_0_fu_903_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond460_i_reg_1469 <= exitcond460_i_fu_699_p2;
        exitcond460_i_reg_1469_pp0_iter1_reg <= exitcond460_i_reg_1469;
        or_cond_i_reg_1497_pp0_iter1_reg <= or_cond_i_reg_1497;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1346 <= i_V_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_fu_380_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1356 <= icmp_fu_406_p2;
        p_assign_6_1_reg_1400 <= p_assign_6_1_fu_453_p2;
        p_assign_6_2_reg_1417 <= p_assign_6_2_fu_473_p2;
        p_assign_7_1_reg_1412 <= p_assign_7_1_fu_467_p2;
        p_assign_7_2_reg_1429 <= p_assign_7_2_fu_487_p2;
        p_assign_7_reg_1395 <= p_assign_7_fu_447_p2;
        tmp_109_1_reg_1365 <= tmp_109_1_fu_418_p2;
        tmp_16_reg_1361 <= tmp_16_fu_412_p2;
        tmp_17_reg_1369 <= tmp_17_fu_424_p2;
        tmp_18_reg_1376 <= tmp_18_fu_429_p1;
        tmp_19_reg_1383 <= tmp_19_fu_433_p2;
        tmp_22_reg_1390 <= tmp_19_fu_433_p2[32'd31];
        tmp_26_reg_1407 <= p_assign_6_1_fu_453_p2[32'd31];
        tmp_29_reg_1424 <= p_assign_6_2_fu_473_p2[32'd31];
        tmp_2_reg_1351 <= tmp_2_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_reg_1469_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        k_buf_0_val_3_load_reg_1547 <= k_buf_0_val_3_q0;
        k_buf_0_val_4_load_reg_1553 <= k_buf_0_val_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (brmerge_reg_1515_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        k_buf_0_val_5_load_reg_1559 <= k_buf_0_val_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_reg_1497_pp0_iter6_reg == 1'd1))) begin
        p_Result_s_reg_1628 <= p_Val2_s_fu_1148_p2[32'd10];
        p_Val2_1_reg_1634 <= p_Val2_1_fu_1166_p2;
        tmp_54_reg_1639 <= {{p_Val2_s_fu_1148_p2[10:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_reg_1497_pp0_iter7_reg == 1'd1))) begin
        p_Val2_3_reg_1644 <= p_Val2_3_fu_1210_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_src_cols_V_read_cas_reg_1291 <= p_src_cols_V_read_cas_fu_284_p1;
        p_src_rows_V_read_cas_reg_1297 <= p_src_rows_V_read_cas_fu_288_p1;
        tmp_13_cast_reg_1333[31 : 1] <= tmp_13_cast_fu_370_p1[31 : 1];
        tmp_14_reg_1338 <= tmp_14_fu_374_p2;
        tmp_1_cast_reg_1314 <= tmp_1_cast_fu_316_p1;
        tmp_6_reg_1319 <= tmp_6_fu_328_p2;
        tmp_9_reg_1326 <= tmp_9_fu_346_p2;
        tmp_cast_reg_1309 <= tmp_cast_fu_302_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op160_read_state7 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op159_read_state7 == 1'b1)))) begin
        reg_277 <= p_src_data_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1) & (or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        right_border_buf_0_1_fu_150 <= right_border_buf_0_s_fu_146;
        right_border_buf_0_2_fu_154 <= right_border_buf_0_5_fu_166;
        right_border_buf_0_3_fu_158 <= col_buf_0_val_1_0_fu_886_p3;
        right_border_buf_0_4_fu_162 <= right_border_buf_0_3_fu_158;
        right_border_buf_0_5_fu_166 <= col_buf_0_val_2_0_fu_903_p3;
        right_border_buf_0_s_fu_146 <= col_buf_0_val_0_0_fu_869_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_reg_1369 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        row_assign_9_0_t_reg_1454 <= row_assign_9_0_t_fu_687_p2;
        row_assign_9_1_t_reg_1459 <= row_assign_9_1_t_fu_691_p2;
        row_assign_9_2_t_reg_1464 <= row_assign_9_2_t_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_reg_1469_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        src_kernel_win_0_va_1_fu_126 <= src_kernel_win_0_va_fu_122;
        src_kernel_win_0_va_2_fu_130 <= src_kernel_win_0_va_7_reg_1595;
        src_kernel_win_0_va_3_fu_134 <= src_kernel_win_0_va_2_fu_130;
        src_kernel_win_0_va_4_fu_138 <= src_kernel_win_0_va_8_reg_1602;
        src_kernel_win_0_va_5_fu_142 <= src_kernel_win_0_va_4_fu_138;
        src_kernel_win_0_va_fu_122 <= src_kernel_win_0_va_6_reg_1588;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_reg_1497_pp0_iter5_reg == 1'd1))) begin
        tmp25_reg_1608 <= tmp25_fu_1064_p2;
        tmp27_reg_1613 <= tmp27_fu_1070_p2;
        tmp28_reg_1618 <= tmp28_fu_1076_p2;
        tmp30_reg_1623 <= tmp30_fu_1082_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_reg_1369 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_34_reg_1434 <= tmp_34_fu_622_p3;
        tmp_42_reg_1439 <= tmp_42_fu_648_p3;
        tmp_46_reg_1444 <= tmp_46_fu_674_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_65_0_not_reg_1449 <= tmp_65_0_not_fu_682_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_condition_pp0_exit_iter4_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter4_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond461_i_fu_380_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_fu_380_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1) & (or_cond_i_i_reg_1501_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_i_reg_1501_pp0_iter2_reg == 1'd1) & (tmp_16_reg_1361 == 1'd1) & (icmp_reg_1356 == 1'd0) & (exitcond460_i_reg_1469_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1) & (or_cond_i_i_reg_1501_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_i_reg_1501_pp0_iter2_reg == 1'd1) & (tmp_16_reg_1361 == 1'd1) & (icmp_reg_1356 == 1'd0) & (exitcond460_i_reg_1469_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1) & (or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (tmp_109_1_reg_1365 == 1'd1) & (icmp_reg_1356 == 1'd0) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1129)) begin
        if (((tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_load_reg_1547;
        end else if (((tmp_109_1_reg_1365 == 1'd1) & (icmp_reg_1356 == 1'd0))) begin
            k_buf_0_val_4_d1 = reg_277_pp0_iter3_reg;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1) & (or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (tmp_109_1_reg_1365 == 1'd1) & (icmp_reg_1356 == 1'd0) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1) & (or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (tmp_16_reg_1361 == 1'd1) & (icmp_reg_1356 == 1'd0) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1129)) begin
        if (((tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_load_reg_1553;
        end else if (((tmp_16_reg_1361 == 1'd1) & (icmp_reg_1356 == 1'd0))) begin
            k_buf_0_val_5_d1 = reg_277_pp0_iter3_reg;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1) & (or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (tmp_16_reg_1361 == 1'd1) & (icmp_reg_1356 == 1'd0) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1497_pp0_iter8_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_reg_1497_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1) & (or_cond_i_i_reg_1501 == 1'd1) & (exitcond460_i_reg_1469_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_reg_1501 == 1'd1) & (icmp_reg_1356 == 1'd0) & (exitcond460_i_reg_1469_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op160_read_state7 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op159_read_state7 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_fu_380_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) & ~((ap_enable_reg_pp0_iter8 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter8 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_726_p2 = ($signed(32'd4294967295) + $signed(t_V_1_reg_266));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1497_pp0_iter8_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op160_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state7 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1497_pp0_iter8_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op160_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state7 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1497_pp0_iter8_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op160_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state7 == 1'b1)))));
end

assign ap_block_state10_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter9 = ((or_cond_i_reg_1497_pp0_iter8_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op160_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state7 == 1'b1)));
end

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1129 = ((or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_enable_operation_153 = (exitcond460_i_reg_1469_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_156 = (exitcond460_i_reg_1469_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_158 = (ap_predicate_op158_load_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_161 = (exitcond460_i_reg_1469_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_162 = (exitcond460_i_reg_1469_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_163 = (ap_predicate_op163_load_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_164 = (ap_predicate_op164_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_166 = (ap_predicate_op166_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_184 = (ap_predicate_op184_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_186 = (ap_predicate_op186_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_190 = (ap_predicate_op190_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_191 = (ap_predicate_op191_store_state9 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state7_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state8_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state9_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op158_load_state7 = ((brmerge_reg_1515 == 1'd1) & (exitcond460_i_reg_1469_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op159_read_state7 = ((or_cond_i_i_reg_1501 == 1'd1) & (icmp_reg_1356 == 1'd0) & (exitcond460_i_reg_1469_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op160_read_state7 = ((tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1) & (or_cond_i_i_reg_1501 == 1'd1) & (exitcond460_i_reg_1469_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op163_load_state8 = ((brmerge_reg_1515_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op164_store_state8 = ((or_cond_i_i_reg_1501_pp0_iter2_reg == 1'd1) & (tmp_16_reg_1361 == 1'd1) & (icmp_reg_1356 == 1'd0) & (exitcond460_i_reg_1469_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op166_store_state8 = ((tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1) & (or_cond_i_i_reg_1501_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op184_store_state9 = ((or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (tmp_16_reg_1361 == 1'd1) & (icmp_reg_1356 == 1'd0) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op186_store_state9 = ((or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (tmp_109_1_reg_1365 == 1'd1) & (icmp_reg_1356 == 1'd0) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op190_store_state9 = ((tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1) & (or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op191_store_state9 = ((tmp_2_reg_1351 == 1'd1) & (icmp_reg_1356 == 1'd1) & (or_cond_i_i_reg_1501_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1469_pp0_iter3_reg == 1'd0));
end

assign brmerge_fu_825_p2 = (tmp_65_0_not_reg_1449 | tmp_5_fu_772_p2);

assign col_assign_2_t_fu_836_p2 = (tmp_14_reg_1338 - tmp_53_reg_1510);

assign col_buf_0_val_0_0_fu_869_p3 = ((brmerge_reg_1515_pp0_iter3_reg[0:0] === 1'b1) ? k_buf_0_val_3_load_reg_1547 : tmp_39_fu_858_p5);

assign col_buf_0_val_1_0_fu_886_p3 = ((brmerge_reg_1515_pp0_iter3_reg[0:0] === 1'b1) ? k_buf_0_val_4_load_reg_1553 : tmp_40_fu_875_p5);

assign col_buf_0_val_2_0_fu_903_p3 = ((brmerge_reg_1515_pp0_iter3_reg[0:0] === 1'b1) ? k_buf_0_val_5_load_reg_1559 : tmp_41_fu_892_p5);

assign exitcond460_i_fu_699_p2 = ((t_V_1_reg_266 == tmp_cast_reg_1309) ? 1'b1 : 1'b0);

assign exitcond461_i_fu_380_p2 = ((t_V_reg_255 == tmp_1_cast_reg_1314) ? 1'b1 : 1'b0);

assign i_V_fu_385_p2 = (t_V_reg_255 + 32'd1);

assign icmp1_fu_720_p2 = ((tmp_48_fu_710_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_fu_406_p2 = ((tmp_15_fu_396_p4 != 31'd0) ? 1'b1 : 1'b0);

assign j_V_fu_704_p2 = (t_V_1_reg_266 + 32'd1);

assign k_buf_0_val_3_address0 = tmp_35_fu_830_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1522;

assign k_buf_0_val_4_address0 = tmp_35_fu_830_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1535_pp0_iter3_reg;

assign k_buf_0_val_5_address0 = tmp_35_fu_830_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1541_pp0_iter3_reg;

assign not_i_i_fu_1186_p2 = ((tmp_54_reg_1639 != 3'd0) ? 1'b1 : 1'b0);

assign or_cond_i496_i_1_fu_547_p2 = (tmp_135_1_fu_543_p2 & rev1_fu_537_p2);

assign or_cond_i496_i_2_fu_584_p2 = (tmp_135_2_fu_580_p2 & rev2_fu_574_p2);

assign or_cond_i496_i_fu_510_p2 = (tmp_21_fu_506_p2 & rev_fu_500_p2);

assign or_cond_i_fu_762_p2 = (icmp_reg_1356 & icmp1_fu_720_p2);

assign or_cond_i_i_fu_776_p2 = (tmp_5_fu_772_p2 & rev3_fu_767_p2);

assign overflow_fu_1191_p2 = (tmp_i_i_fu_1181_p2 & not_i_i_fu_1186_p2);

assign p_Val2_1_fu_1166_p2 = (tmp28_reg_1618 + tmp29_fu_1161_p2);

assign p_Val2_3_fu_1210_p3 = ((tmp_9_i_i_fu_1205_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_1197_p3 : p_Val2_1_reg_1634);

assign p_Val2_s_fu_1148_p2 = (tmp25_reg_1608 + tmp26_fu_1142_p2);

assign p_assign_1_fu_748_p2 = (32'd1 - t_V_1_reg_266);

assign p_assign_2_fu_786_p2 = ($signed(tmp_13_cast_reg_1333) - $signed(p_p2_i_i_reg_1490));

assign p_assign_3_fu_790_p3 = ((or_cond_i_i_fu_776_p2[0:0] === 1'b1) ? ImagLoc_x_reg_1478 : p_assign_2_fu_786_p2);

assign p_assign_6_1_fu_453_p2 = ($signed(32'd4294967294) + $signed(t_V_reg_255));

assign p_assign_6_2_fu_473_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_255));

assign p_assign_7_1_fu_467_p2 = (32'd2 - t_V_reg_255);

assign p_assign_7_2_fu_487_p2 = (32'd3 - t_V_reg_255);

assign p_assign_7_fu_447_p2 = (32'd1 - t_V_reg_255);

assign p_dst_data_stream_V_din = p_Val2_3_reg_1644;

assign p_mux_i_i_cast_fu_1197_p3 = ((tmp_i_i_fu_1181_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i497_i_1_fu_553_p3 = ((tmp_26_reg_1407[0:0] === 1'b1) ? p_assign_7_1_reg_1412 : p_assign_6_1_reg_1400);

assign p_p2_i497_i_2_fu_590_p3 = ((tmp_29_reg_1424[0:0] === 1'b1) ? p_assign_7_2_reg_1429 : p_assign_6_2_reg_1417);

assign p_p2_i497_i_fu_516_p3 = ((tmp_22_reg_1390[0:0] === 1'b1) ? p_assign_7_reg_1395 : tmp_19_reg_1383);

assign p_p2_i_i_fu_754_p3 = ((tmp_50_fu_740_p3[0:0] === 1'b1) ? p_assign_1_fu_748_p2 : ImagLoc_x_fu_726_p2);

assign p_shl_cast_fu_1021_p1 = p_shl_fu_1013_p3;

assign p_shl_fu_1013_p3 = {{src_kernel_win_0_va_3_fu_134}, {1'd0}};

assign p_src_cols_V_read_cas_1_fu_292_p0 = p_src_cols_V_read;

assign p_src_cols_V_read_cas_1_fu_292_p1 = p_src_cols_V_read_cas_1_fu_292_p0;

assign p_src_cols_V_read_cas_fu_284_p0 = p_src_cols_V_read;

assign p_src_cols_V_read_cas_fu_284_p1 = p_src_cols_V_read_cas_fu_284_p0;

assign p_src_rows_V_read_cas_1_fu_306_p0 = p_src_rows_V_read;

assign p_src_rows_V_read_cas_1_fu_306_p1 = p_src_rows_V_read_cas_1_fu_306_p0;

assign p_src_rows_V_read_cas_fu_288_p0 = p_src_rows_V_read;

assign p_src_rows_V_read_cas_fu_288_p1 = p_src_rows_V_read_cas_fu_288_p0;

assign r_V_0_cast_fu_996_p1 = src_kernel_win_0_va_5_fu_142;

assign r_V_214_cast_fu_1043_p1 = src_kernel_win_0_va_1_fu_126;

assign r_V_2_1_2_fu_1123_p3 = {{src_kernel_win_0_va_7_reg_1595_pp0_iter6_reg}, {1'd0}};

assign r_V_2_1_fu_1025_p2 = (10'd0 - p_shl_cast_fu_1021_p1);

assign r_V_2_2_fu_1047_p2 = (9'd0 - r_V_214_cast_fu_1043_p1);

assign rev1_fu_537_p2 = (tmp_25_fu_530_p3 ^ 1'd1);

assign rev2_fu_574_p2 = (tmp_28_fu_567_p3 ^ 1'd1);

assign rev3_fu_767_p2 = (tmp_49_reg_1484 ^ 1'd1);

assign rev_fu_500_p2 = (tmp_20_fu_493_p3 ^ 1'd1);

assign row_assign_9_0_t_fu_687_p2 = (tmp_6_reg_1319 - tmp_34_reg_1434);

assign row_assign_9_1_t_fu_691_p2 = (tmp_6_reg_1319 - tmp_42_reg_1439);

assign row_assign_9_2_t_fu_695_p2 = (tmp_6_reg_1319 - tmp_46_reg_1444);

assign sel_tmp7_fu_803_p2 = (tmp_5_not_fu_797_p2 | tmp_49_reg_1484);

assign sel_tmp8_fu_808_p2 = (tmp_11_fu_782_p2 & sel_tmp7_fu_803_p2);

assign src_kernel_win_0_va_6_fu_953_p3 = ((tmp_17_reg_1369[0:0] === 1'b1) ? tmp_47_fu_945_p5 : col_buf_0_val_0_0_reg_1564);

assign src_kernel_win_0_va_7_fu_967_p3 = ((tmp_17_reg_1369[0:0] === 1'b1) ? tmp_51_fu_959_p5 : col_buf_0_val_1_0_reg_1572);

assign src_kernel_win_0_va_8_fu_981_p3 = ((tmp_17_reg_1369[0:0] === 1'b1) ? tmp_52_fu_973_p5 : col_buf_0_val_2_0_reg_1580);

assign sum_V_0_2_cast_cast_fu_1009_p1 = sum_V_0_2_fu_1003_p2;

assign sum_V_0_2_fu_1003_p2 = (tmp_151_0_2_cast_fu_1000_p1 - r_V_0_cast_fu_996_p1);

assign tmp25_fu_1064_p2 = ($signed(tmp_151_2_cast_fu_1053_p1) + $signed(tmp_151_1_cast_fu_1031_p1));

assign tmp26_fu_1142_p2 = ($signed(tmp_151_1_cast_45_fu_1130_p1) + $signed(tmp27_cast_fu_1139_p1));

assign tmp27_cast_fu_1139_p1 = $signed(tmp27_reg_1613);

assign tmp27_fu_1070_p2 = ($signed(tmp_151_2_2_cast_cas_fu_1061_p1) + $signed(sum_V_0_2_cast_cast_fu_1009_p1));

assign tmp28_fu_1076_p2 = (tmp_57_fu_1039_p1 + tmp_56_fu_1035_p1);

assign tmp29_fu_1161_p2 = (tmp_59_fu_1134_p2 + tmp30_reg_1623);

assign tmp30_fu_1082_p2 = (src_kernel_win_0_va_6_reg_1588 + tmp_60_fu_1057_p1);

assign tmp_109_1_fu_418_p2 = ((t_V_reg_255 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_11_fu_782_p2 = (($signed(p_p2_i_i_reg_1490) < $signed(p_src_cols_V_read_cas_reg_1291)) ? 1'b1 : 1'b0);

assign tmp_12_cast_fu_360_p1 = $signed(tmp_12_fu_352_p3);

assign tmp_12_fu_352_p1 = p_src_cols_V_read;

assign tmp_12_fu_352_p3 = {{tmp_12_fu_352_p1}, {1'd0}};

assign tmp_135_1_fu_543_p2 = (($signed(p_assign_6_1_reg_1400) < $signed(p_src_rows_V_read_cas_reg_1297)) ? 1'b1 : 1'b0);

assign tmp_135_2_fu_580_p2 = (($signed(p_assign_6_2_reg_1417) < $signed(p_src_rows_V_read_cas_reg_1297)) ? 1'b1 : 1'b0);

assign tmp_13_cast_fu_370_p1 = $signed(tmp_13_fu_364_p2);

assign tmp_13_fu_364_p2 = ($signed(14'd16382) + $signed(tmp_12_cast_fu_360_p1));

assign tmp_144_1_fu_558_p2 = (($signed(p_p2_i497_i_1_fu_553_p3) < $signed(p_src_rows_V_read_cas_reg_1297)) ? 1'b1 : 1'b0);

assign tmp_144_2_fu_595_p2 = (($signed(p_p2_i497_i_2_fu_590_p3) < $signed(p_src_rows_V_read_cas_reg_1297)) ? 1'b1 : 1'b0);

assign tmp_14_fu_374_p2 = ($signed(2'd3) + $signed(tmp_4_fu_324_p1));

assign tmp_151_0_2_cast_fu_1000_p1 = src_kernel_win_0_va_8_reg_1602;

assign tmp_151_1_cast_45_fu_1130_p1 = r_V_2_1_2_fu_1123_p3;

assign tmp_151_1_cast_fu_1031_p1 = r_V_2_1_fu_1025_p2;

assign tmp_151_2_2_cast_cas_fu_1061_p1 = src_kernel_win_0_va_6_reg_1588;

assign tmp_151_2_cast_fu_1053_p1 = r_V_2_2_fu_1047_p2;

assign tmp_15_fu_396_p4 = {{t_V_reg_255[31:1]}};

assign tmp_16_fu_412_p2 = ((t_V_reg_255 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_17_fu_424_p2 = ((t_V_reg_255 > p_src_rows_V_read_cas_reg_1297) ? 1'b1 : 1'b0);

assign tmp_18_fu_429_p1 = t_V_reg_255[1:0];

assign tmp_19_fu_433_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_255));

assign tmp_1_cast_fu_316_p1 = $signed(tmp_1_fu_310_p2);

assign tmp_1_fu_310_p2 = ($signed(12'd2) + $signed(p_src_rows_V_read_cas_1_fu_306_p1));

assign tmp_20_fu_493_p3 = tmp_19_reg_1383[32'd31];

assign tmp_21_fu_506_p2 = (($signed(tmp_19_reg_1383) < $signed(p_src_rows_V_read_cas_reg_1297)) ? 1'b1 : 1'b0);

assign tmp_23_fu_521_p2 = (($signed(p_p2_i497_i_fu_516_p3) < $signed(p_src_rows_V_read_cas_reg_1297)) ? 1'b1 : 1'b0);

assign tmp_24_fu_526_p1 = p_p2_i497_i_fu_516_p3[1:0];

assign tmp_25_fu_530_p3 = p_assign_6_1_reg_1400[32'd31];

assign tmp_27_fu_563_p1 = p_p2_i497_i_1_fu_553_p3[1:0];

assign tmp_28_fu_567_p3 = p_assign_6_2_reg_1417[32'd31];

assign tmp_2_fu_391_p2 = ((t_V_reg_255 < p_src_rows_V_read_cas_reg_1297) ? 1'b1 : 1'b0);

assign tmp_30_fu_600_p1 = p_p2_i497_i_2_fu_590_p3[1:0];

assign tmp_31_fu_604_p2 = (tmp_9_reg_1326 - tmp_24_fu_526_p1);

assign tmp_32_fu_609_p3 = ((tmp_23_fu_521_p2[0:0] === 1'b1) ? tmp_24_fu_526_p1 : tmp_31_fu_604_p2);

assign tmp_33_fu_617_p2 = ($signed(2'd3) + $signed(tmp_18_reg_1376));

assign tmp_34_fu_622_p3 = ((or_cond_i496_i_fu_510_p2[0:0] === 1'b1) ? tmp_33_fu_617_p2 : tmp_32_fu_609_p3);

assign tmp_35_fu_830_p1 = x_reg_1505;

assign tmp_36_fu_630_p2 = (tmp_9_reg_1326 - tmp_27_fu_563_p1);

assign tmp_37_fu_635_p3 = ((tmp_144_1_fu_558_p2[0:0] === 1'b1) ? tmp_27_fu_563_p1 : tmp_36_fu_630_p2);

assign tmp_38_fu_643_p2 = (tmp_18_reg_1376 ^ 2'd2);

assign tmp_3_fu_320_p0 = p_src_rows_V_read;

assign tmp_3_fu_320_p1 = tmp_3_fu_320_p0[1:0];

assign tmp_42_fu_648_p3 = ((or_cond_i496_i_1_fu_547_p2[0:0] === 1'b1) ? tmp_38_fu_643_p2 : tmp_37_fu_635_p3);

assign tmp_43_fu_656_p2 = (tmp_9_reg_1326 - tmp_30_fu_600_p1);

assign tmp_44_fu_661_p3 = ((tmp_144_2_fu_595_p2[0:0] === 1'b1) ? tmp_30_fu_600_p1 : tmp_43_fu_656_p2);

assign tmp_45_fu_669_p2 = (2'd1 + tmp_18_reg_1376);

assign tmp_46_fu_674_p3 = ((or_cond_i496_i_2_fu_584_p2[0:0] === 1'b1) ? tmp_45_fu_669_p2 : tmp_44_fu_661_p3);

assign tmp_48_fu_710_p4 = {{t_V_1_reg_266[31:1]}};

assign tmp_4_fu_324_p0 = p_src_cols_V_read;

assign tmp_4_fu_324_p1 = tmp_4_fu_324_p0[1:0];

assign tmp_50_fu_740_p3 = ImagLoc_x_fu_726_p2[32'd31];

assign tmp_53_fu_821_p1 = x_fu_814_p3[1:0];

assign tmp_56_fu_1035_p1 = sum_V_0_2_fu_1003_p2[7:0];

assign tmp_57_fu_1039_p1 = r_V_2_1_fu_1025_p2[7:0];

assign tmp_59_fu_1134_p2 = src_kernel_win_0_va_7_reg_1595_pp0_iter6_reg << 8'd1;

assign tmp_5_fu_772_p2 = (($signed(ImagLoc_x_reg_1478) < $signed(p_src_cols_V_read_cas_reg_1291)) ? 1'b1 : 1'b0);

assign tmp_5_not_fu_797_p2 = (tmp_5_fu_772_p2 ^ 1'd1);

assign tmp_60_fu_1057_p1 = r_V_2_2_fu_1047_p2[7:0];

assign tmp_65_0_not_fu_682_p2 = (tmp_2_reg_1351 ^ 1'd1);

assign tmp_6_fu_328_p2 = ($signed(2'd3) + $signed(tmp_3_fu_320_p1));

assign tmp_7_fu_334_p0 = p_src_rows_V_read;

assign tmp_7_fu_334_p1 = tmp_7_fu_334_p0[0:0];

assign tmp_8_fu_338_p3 = {{tmp_7_fu_334_p1}, {1'd0}};

assign tmp_9_fu_346_p2 = (tmp_8_fu_338_p3 ^ 2'd2);

assign tmp_9_i_i_fu_1205_p2 = (p_Result_s_reg_1628 | overflow_fu_1191_p2);

assign tmp_cast_fu_302_p1 = $signed(tmp_s_fu_296_p2);

assign tmp_i_i_fu_1181_p2 = (p_Result_s_reg_1628 ^ 1'd1);

assign tmp_s_fu_296_p2 = ($signed(13'd2) + $signed(p_src_cols_V_read_cas_1_fu_292_p1));

assign x_fu_814_p3 = ((sel_tmp8_fu_808_p2[0:0] === 1'b1) ? p_p2_i_i_reg_1490 : p_assign_3_fu_790_p3);

always @ (posedge ap_clk) begin
    tmp_13_cast_reg_1333[0] <= 1'b0;
end

endmodule //Filter2D
