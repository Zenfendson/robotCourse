// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_rows_V_read,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state15 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [10:0] p_src_rows_V_read;
input  [11:0] p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1267;
reg   [0:0] exitcond460_i_reg_1267_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_1299;
reg   [0:0] icmp_reg_1183;
reg   [0:0] tmp_2_reg_1178;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] or_cond_i_reg_1295;
reg   [0:0] or_cond_i_reg_1295_pp0_iter8_reg;
reg   [31:0] t_V_1_reg_252;
reg   [7:0] reg_263;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
reg    ap_predicate_op142_read_state7;
reg    ap_predicate_op143_read_state7;
reg    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state10_pp0_stage0_iter5;
wire    ap_block_state11_pp0_stage0_iter6;
wire    ap_block_state12_pp0_stage0_iter7;
wire    ap_block_state13_pp0_stage0_iter8;
reg    ap_block_state14_pp0_stage0_iter9;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] reg_263_pp0_iter3_reg;
wire  signed [31:0] p_src_cols_V_read_cas_fu_270_p1;
reg  signed [31:0] p_src_cols_V_read_cas_reg_1122;
wire  signed [31:0] p_src_rows_V_read_cas_fu_274_p1;
reg  signed [31:0] p_src_rows_V_read_cas_reg_1128;
wire  signed [31:0] tmp_cast_fu_288_p1;
reg  signed [31:0] tmp_cast_reg_1138;
wire  signed [31:0] tmp_1_cast_fu_302_p1;
reg  signed [31:0] tmp_1_cast_reg_1143;
wire   [1:0] tmp_6_fu_314_p2;
reg   [1:0] tmp_6_reg_1148;
wire   [1:0] tmp_9_fu_332_p2;
reg   [1:0] tmp_9_reg_1154;
wire  signed [31:0] tmp_13_cast_fu_356_p1;
reg  signed [31:0] tmp_13_cast_reg_1160;
wire   [1:0] tmp_14_fu_360_p2;
reg   [1:0] tmp_14_reg_1165;
wire   [31:0] i_V_fu_371_p2;
reg   [31:0] i_V_reg_1173;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_2_fu_377_p2;
wire   [0:0] exitcond461_i_fu_366_p2;
wire   [0:0] icmp_fu_392_p2;
wire   [0:0] tmp_16_fu_398_p2;
reg   [0:0] tmp_16_reg_1188;
wire   [0:0] tmp_109_1_fu_404_p2;
reg   [0:0] tmp_109_1_reg_1192;
wire   [0:0] tmp_17_fu_410_p2;
reg   [0:0] tmp_17_reg_1196;
wire   [1:0] tmp_18_fu_415_p1;
reg   [1:0] tmp_18_reg_1202;
wire   [31:0] tmp_19_fu_419_p2;
reg   [31:0] tmp_19_reg_1208;
reg   [0:0] tmp_22_reg_1215;
wire   [31:0] p_assign_7_fu_433_p2;
reg   [31:0] p_assign_7_reg_1220;
wire   [31:0] p_assign_6_2_fu_439_p2;
reg   [31:0] p_assign_6_2_reg_1225;
reg   [0:0] tmp_26_reg_1232;
wire   [31:0] p_assign_7_2_fu_453_p2;
reg   [31:0] p_assign_7_2_reg_1237;
wire   [1:0] tmp_31_fu_551_p3;
reg   [1:0] tmp_31_reg_1242;
wire    ap_CS_fsm_state3;
wire   [1:0] tmp_39_fu_577_p3;
reg   [1:0] tmp_39_reg_1247;
wire   [0:0] tmp_65_0_not_fu_585_p2;
reg   [0:0] tmp_65_0_not_reg_1252;
wire    ap_CS_fsm_state4;
wire   [1:0] row_assign_9_0_t_fu_590_p2;
reg   [1:0] row_assign_9_0_t_reg_1257;
wire   [1:0] row_assign_9_2_t_fu_594_p2;
reg   [1:0] row_assign_9_2_t_reg_1262;
wire   [0:0] exitcond460_i_fu_598_p2;
wire    ap_CS_fsm_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1267_pp0_iter2_reg;
reg   [0:0] exitcond460_i_reg_1267_pp0_iter3_reg;
reg   [0:0] exitcond460_i_reg_1267_pp0_iter4_reg;
reg   [0:0] exitcond460_i_reg_1267_pp0_iter5_reg;
reg   [0:0] exitcond460_i_reg_1267_pp0_iter6_reg;
wire   [31:0] j_V_fu_603_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] ImagLoc_x_fu_625_p2;
reg   [31:0] ImagLoc_x_reg_1276;
reg   [0:0] tmp_41_reg_1282;
wire   [31:0] p_p2_i_i_fu_653_p3;
reg   [31:0] p_p2_i_i_reg_1288;
wire   [0:0] or_cond_i_fu_661_p2;
reg   [0:0] or_cond_i_reg_1295_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_1295_pp0_iter2_reg;
reg   [0:0] or_cond_i_reg_1295_pp0_iter3_reg;
reg   [0:0] or_cond_i_reg_1295_pp0_iter4_reg;
reg   [0:0] or_cond_i_reg_1295_pp0_iter5_reg;
reg   [0:0] or_cond_i_reg_1295_pp0_iter6_reg;
reg   [0:0] or_cond_i_reg_1295_pp0_iter7_reg;
wire   [0:0] or_cond_i_i_fu_675_p2;
reg   [0:0] or_cond_i_i_reg_1299_pp0_iter2_reg;
reg   [0:0] or_cond_i_i_reg_1299_pp0_iter3_reg;
wire   [31:0] x_fu_713_p3;
reg   [31:0] x_reg_1303;
wire   [1:0] tmp_43_fu_720_p1;
reg   [1:0] tmp_43_reg_1308;
wire   [0:0] brmerge_fu_724_p2;
reg   [0:0] brmerge_reg_1313;
reg   [0:0] brmerge_reg_1313_pp0_iter2_reg;
reg   [0:0] brmerge_reg_1313_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_3_addr_reg_1320;
wire   [1:0] col_assign_2_t_fu_735_p2;
reg   [1:0] col_assign_2_t_reg_1326;
reg   [1:0] col_assign_2_t_reg_1326_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_4_addr_reg_1333;
reg   [10:0] k_buf_0_val_4_addr_reg_1333_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_5_addr_reg_1339;
reg   [10:0] k_buf_0_val_5_addr_reg_1339_pp0_iter3_reg;
wire   [7:0] k_buf_0_val_3_q0;
reg   [7:0] k_buf_0_val_3_load_reg_1345;
reg    ap_enable_reg_pp0_iter3;
wire   [7:0] k_buf_0_val_4_q0;
reg   [7:0] k_buf_0_val_4_load_reg_1351;
wire   [7:0] k_buf_0_val_5_q0;
reg   [7:0] k_buf_0_val_5_load_reg_1357;
wire   [7:0] col_buf_0_val_0_0_fu_768_p3;
reg   [7:0] col_buf_0_val_0_0_reg_1362;
wire   [7:0] col_buf_0_val_1_0_fu_785_p3;
reg   [7:0] col_buf_0_val_1_0_reg_1369;
wire   [7:0] col_buf_0_val_2_0_fu_802_p3;
reg   [7:0] col_buf_0_val_2_0_reg_1375;
wire   [7:0] src_kernel_win_0_va_4_fu_852_p3;
reg   [7:0] src_kernel_win_0_va_4_reg_1382;
reg   [7:0] src_kernel_win_0_va_4_reg_1382_pp0_iter6_reg;
reg   [7:0] src_kernel_win_0_va_4_reg_1382_pp0_iter7_reg;
wire   [7:0] src_kernel_win_0_va_5_fu_866_p3;
reg   [7:0] src_kernel_win_0_va_5_reg_1389;
wire   [9:0] sum9_fu_907_p2;
reg   [9:0] sum9_reg_1395;
reg   [7:0] src_kernel_win_0_va_6_reg_1400;
wire   [7:0] tmp_48_fu_956_p1;
reg   [7:0] tmp_48_reg_1405;
reg   [0:0] p_Result_s_reg_1410;
reg   [0:0] p_Result_s_reg_1410_pp0_iter8_reg;
reg   [2:0] tmp_46_reg_1416;
wire   [7:0] p_Val2_1_fu_1019_p2;
reg   [7:0] p_Val2_1_reg_1421;
wire   [0:0] tmp_i_i_fu_1024_p2;
reg   [0:0] tmp_i_i_reg_1426;
wire   [0:0] not_i_i_fu_1029_p2;
reg   [0:0] not_i_i_reg_1432;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_condition_pp0_exit_iter4_state9;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [31:0] t_V_reg_241;
wire    ap_CS_fsm_state15;
wire   [63:0] tmp_33_fu_729_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_116;
reg   [7:0] src_kernel_win_0_va_1_fu_120;
reg   [7:0] src_kernel_win_0_va_2_fu_124;
reg   [7:0] src_kernel_win_0_va_3_fu_128;
reg   [7:0] right_border_buf_0_s_fu_132;
reg   [7:0] right_border_buf_0_1_fu_136;
reg   [7:0] right_border_buf_0_2_fu_140;
reg   [7:0] right_border_buf_0_3_fu_144;
reg   [7:0] right_border_buf_0_4_fu_148;
reg   [7:0] right_border_buf_0_5_fu_152;
wire  signed [11:0] p_src_cols_V_read_cas_fu_270_p0;
wire  signed [10:0] p_src_rows_V_read_cas_fu_274_p0;
wire  signed [11:0] p_src_cols_V_read_cas_1_fu_278_p0;
wire  signed [12:0] p_src_cols_V_read_cas_1_fu_278_p1;
wire   [12:0] tmp_s_fu_282_p2;
wire  signed [10:0] p_src_rows_V_read_cas_1_fu_292_p0;
wire  signed [11:0] p_src_rows_V_read_cas_1_fu_292_p1;
wire   [11:0] tmp_1_fu_296_p2;
wire  signed [10:0] tmp_3_fu_306_p0;
wire  signed [11:0] tmp_4_fu_310_p0;
wire   [1:0] tmp_3_fu_306_p1;
wire  signed [10:0] tmp_7_fu_320_p0;
wire   [0:0] tmp_7_fu_320_p1;
wire   [1:0] tmp_8_fu_324_p3;
wire  signed [11:0] tmp_12_fu_338_p1;
wire   [12:0] tmp_12_fu_338_p3;
wire  signed [13:0] tmp_12_cast_fu_346_p1;
wire   [13:0] tmp_13_fu_350_p2;
wire   [1:0] tmp_4_fu_310_p1;
wire   [30:0] tmp_15_fu_382_p4;
wire   [0:0] tmp_20_fu_459_p3;
wire   [0:0] tmp_21_fu_472_p2;
wire   [0:0] rev_fu_466_p2;
wire   [31:0] p_p2_i497_i_fu_482_p3;
wire   [0:0] tmp_25_fu_496_p3;
wire   [0:0] tmp_135_2_fu_509_p2;
wire   [0:0] rev1_fu_503_p2;
wire   [31:0] p_p2_i497_i_2_fu_519_p3;
wire   [1:0] tmp_24_fu_492_p1;
wire   [0:0] tmp_23_fu_487_p2;
wire   [1:0] tmp_28_fu_533_p2;
wire   [0:0] or_cond_i496_i_fu_476_p2;
wire   [1:0] tmp_30_fu_546_p2;
wire   [1:0] tmp_29_fu_538_p3;
wire   [1:0] tmp_27_fu_529_p1;
wire   [0:0] tmp_144_2_fu_524_p2;
wire   [1:0] tmp_32_fu_559_p2;
wire   [0:0] or_cond_i496_i_2_fu_513_p2;
wire   [1:0] tmp_35_fu_572_p2;
wire   [1:0] tmp_34_fu_564_p3;
wire   [30:0] tmp_40_fu_609_p4;
wire   [0:0] tmp_42_fu_639_p3;
wire   [31:0] p_assign_1_fu_647_p2;
wire   [0:0] icmp1_fu_619_p2;
wire   [0:0] tmp_5_fu_671_p2;
wire   [0:0] rev2_fu_666_p2;
wire   [31:0] p_assign_2_fu_685_p2;
wire   [0:0] tmp_5_not_fu_696_p2;
wire   [0:0] tmp_11_fu_681_p2;
wire   [0:0] sel_tmp7_fu_702_p2;
wire   [0:0] sel_tmp8_fu_707_p2;
wire   [31:0] p_assign_3_fu_689_p3;
wire   [7:0] tmp_36_fu_757_p5;
wire   [7:0] tmp_37_fu_774_p5;
wire   [7:0] tmp_38_fu_791_p5;
wire   [7:0] tmp_44_fu_844_p5;
wire   [7:0] tmp_45_fu_858_p5;
wire   [8:0] p_shl_fu_882_p3;
wire   [8:0] r_V_0_2_cast_cast_fu_894_p1;
wire   [8:0] r_V_0_cast_cast_fu_878_p1;
wire   [8:0] tmp20_fu_897_p2;
wire   [9:0] p_shl_cast_fu_890_p1;
wire   [9:0] tmp20_cast_fu_903_p1;
wire   [10:0] tmp_151_2_cast_fu_934_p1;
wire   [10:0] sum9_cast_fu_931_p1;
wire   [8:0] r_V_2_2_1_fu_944_p3;
wire   [10:0] sum_V_2_fu_938_p2;
wire   [9:0] tmp_151_2_2_cast_cas_fu_960_p1;
wire   [9:0] tmp_151_2_cast_cast_fu_952_p1;
wire   [9:0] tmp21_fu_963_p2;
wire   [10:0] tmp21_cast_fu_969_p1;
wire   [10:0] p_Val2_s_fu_973_p2;
wire   [7:0] tmp_49_fu_1009_p2;
wire   [7:0] tmp22_fu_1014_p2;
wire   [0:0] overflow_fu_1034_p2;
wire   [0:0] tmp_9_i_i_fu_1045_p2;
wire   [7:0] p_mux_i_i_cast_fu_1038_p3;
reg   [5:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_136;
reg    ap_enable_state7_pp0_iter2_stage0;
reg    ap_enable_operation_144;
reg    ap_enable_state8_pp0_iter3_stage0;
reg    ap_predicate_op147_store_state8;
reg    ap_enable_operation_147;
reg    ap_predicate_op149_store_state8;
reg    ap_enable_operation_149;
reg    ap_enable_operation_139;
reg    ap_enable_operation_145;
reg    ap_predicate_op169_store_state9;
reg    ap_enable_operation_169;
reg    ap_enable_state9_pp0_iter4_stage0;
reg    ap_predicate_op174_store_state9;
reg    ap_enable_operation_174;
reg    ap_predicate_op141_load_state7;
reg    ap_enable_operation_141;
reg    ap_predicate_op146_load_state8;
reg    ap_enable_operation_146;
reg    ap_predicate_op167_store_state9;
reg    ap_enable_operation_167;
reg    ap_predicate_op173_store_state9;
reg    ap_enable_operation_173;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1026;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
end

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(reg_263)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

SobelY_accel_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
SobelY_accel_mux_eOg_U15(
    .din0(right_border_buf_0_s_fu_132),
    .din1(right_border_buf_0_1_fu_136),
    .din2(8'd0),
    .din3(col_assign_2_t_reg_1326_pp0_iter3_reg),
    .dout(tmp_36_fu_757_p5)
);

SobelY_accel_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
SobelY_accel_mux_eOg_U16(
    .din0(right_border_buf_0_3_fu_144),
    .din1(right_border_buf_0_4_fu_148),
    .din2(8'd0),
    .din3(col_assign_2_t_reg_1326_pp0_iter3_reg),
    .dout(tmp_37_fu_774_p5)
);

SobelY_accel_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
SobelY_accel_mux_eOg_U17(
    .din0(right_border_buf_0_5_fu_152),
    .din1(right_border_buf_0_2_fu_140),
    .din2(8'd0),
    .din3(col_assign_2_t_reg_1326_pp0_iter3_reg),
    .dout(tmp_38_fu_791_p5)
);

SobelY_accel_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
SobelY_accel_mux_eOg_U18(
    .din0(col_buf_0_val_0_0_reg_1362),
    .din1(col_buf_0_val_1_0_reg_1369),
    .din2(col_buf_0_val_2_0_reg_1375),
    .din3(row_assign_9_0_t_reg_1257),
    .dout(tmp_44_fu_844_p5)
);

SobelY_accel_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
SobelY_accel_mux_eOg_U19(
    .din0(col_buf_0_val_0_0_reg_1362),
    .din1(col_buf_0_val_1_0_reg_1369),
    .din2(col_buf_0_val_2_0_reg_1375),
    .din3(row_assign_9_2_t_reg_1262),
    .dout(tmp_45_fu_858_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond460_i_fu_598_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter4_state9)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_fu_598_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_V_1_reg_252 <= j_V_fu_603_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_V_1_reg_252 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        t_V_reg_241 <= i_V_reg_1173;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_reg_241 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_fu_598_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ImagLoc_x_reg_1276 <= ImagLoc_x_fu_625_p2;
        or_cond_i_reg_1295 <= or_cond_i_fu_661_p2;
        p_p2_i_i_reg_1288 <= p_p2_i_i_fu_653_p3;
        tmp_41_reg_1282 <= ImagLoc_x_fu_625_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_reg_1267 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        brmerge_reg_1313 <= brmerge_fu_724_p2;
        or_cond_i_i_reg_1299 <= or_cond_i_i_fu_675_p2;
        tmp_43_reg_1308 <= tmp_43_fu_720_p1;
        x_reg_1303 <= x_fu_713_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        brmerge_reg_1313_pp0_iter2_reg <= brmerge_reg_1313;
        brmerge_reg_1313_pp0_iter3_reg <= brmerge_reg_1313_pp0_iter2_reg;
        col_assign_2_t_reg_1326_pp0_iter3_reg <= col_assign_2_t_reg_1326;
        exitcond460_i_reg_1267_pp0_iter2_reg <= exitcond460_i_reg_1267_pp0_iter1_reg;
        exitcond460_i_reg_1267_pp0_iter3_reg <= exitcond460_i_reg_1267_pp0_iter2_reg;
        exitcond460_i_reg_1267_pp0_iter4_reg <= exitcond460_i_reg_1267_pp0_iter3_reg;
        exitcond460_i_reg_1267_pp0_iter5_reg <= exitcond460_i_reg_1267_pp0_iter4_reg;
        exitcond460_i_reg_1267_pp0_iter6_reg <= exitcond460_i_reg_1267_pp0_iter5_reg;
        k_buf_0_val_4_addr_reg_1333_pp0_iter3_reg <= k_buf_0_val_4_addr_reg_1333;
        k_buf_0_val_5_addr_reg_1339_pp0_iter3_reg <= k_buf_0_val_5_addr_reg_1339;
        or_cond_i_i_reg_1299_pp0_iter2_reg <= or_cond_i_i_reg_1299;
        or_cond_i_i_reg_1299_pp0_iter3_reg <= or_cond_i_i_reg_1299_pp0_iter2_reg;
        or_cond_i_reg_1295_pp0_iter2_reg <= or_cond_i_reg_1295_pp0_iter1_reg;
        or_cond_i_reg_1295_pp0_iter3_reg <= or_cond_i_reg_1295_pp0_iter2_reg;
        or_cond_i_reg_1295_pp0_iter4_reg <= or_cond_i_reg_1295_pp0_iter3_reg;
        or_cond_i_reg_1295_pp0_iter5_reg <= or_cond_i_reg_1295_pp0_iter4_reg;
        or_cond_i_reg_1295_pp0_iter6_reg <= or_cond_i_reg_1295_pp0_iter5_reg;
        or_cond_i_reg_1295_pp0_iter7_reg <= or_cond_i_reg_1295_pp0_iter6_reg;
        or_cond_i_reg_1295_pp0_iter8_reg <= or_cond_i_reg_1295_pp0_iter7_reg;
        p_Result_s_reg_1410_pp0_iter8_reg <= p_Result_s_reg_1410;
        reg_263_pp0_iter3_reg <= reg_263;
        src_kernel_win_0_va_4_reg_1382 <= src_kernel_win_0_va_4_fu_852_p3;
        src_kernel_win_0_va_4_reg_1382_pp0_iter6_reg <= src_kernel_win_0_va_4_reg_1382;
        src_kernel_win_0_va_4_reg_1382_pp0_iter7_reg <= src_kernel_win_0_va_4_reg_1382_pp0_iter6_reg;
        src_kernel_win_0_va_5_reg_1389 <= src_kernel_win_0_va_5_fu_866_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_reg_1267_pp0_iter1_reg == 1'd0))) begin
        col_assign_2_t_reg_1326 <= col_assign_2_t_fu_735_p2;
        k_buf_0_val_3_addr_reg_1320 <= tmp_33_fu_729_p1;
        k_buf_0_val_4_addr_reg_1333 <= tmp_33_fu_729_p1;
        k_buf_0_val_5_addr_reg_1339 <= tmp_33_fu_729_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0))) begin
        col_buf_0_val_0_0_reg_1362 <= col_buf_0_val_0_0_fu_768_p3;
        col_buf_0_val_1_0_reg_1369 <= col_buf_0_val_1_0_fu_785_p3;
        col_buf_0_val_2_0_reg_1375 <= col_buf_0_val_2_0_fu_802_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond460_i_reg_1267 <= exitcond460_i_fu_598_p2;
        exitcond460_i_reg_1267_pp0_iter1_reg <= exitcond460_i_reg_1267;
        or_cond_i_reg_1295_pp0_iter1_reg <= or_cond_i_reg_1295;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1173 <= i_V_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_fu_366_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1183 <= icmp_fu_392_p2;
        p_assign_6_2_reg_1225 <= p_assign_6_2_fu_439_p2;
        p_assign_7_2_reg_1237 <= p_assign_7_2_fu_453_p2;
        p_assign_7_reg_1220 <= p_assign_7_fu_433_p2;
        tmp_109_1_reg_1192 <= tmp_109_1_fu_404_p2;
        tmp_16_reg_1188 <= tmp_16_fu_398_p2;
        tmp_17_reg_1196 <= tmp_17_fu_410_p2;
        tmp_18_reg_1202 <= tmp_18_fu_415_p1;
        tmp_19_reg_1208 <= tmp_19_fu_419_p2;
        tmp_22_reg_1215 <= tmp_19_fu_419_p2[32'd31];
        tmp_26_reg_1232 <= p_assign_6_2_fu_439_p2[32'd31];
        tmp_2_reg_1178 <= tmp_2_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_reg_1267_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        k_buf_0_val_3_load_reg_1345 <= k_buf_0_val_3_q0;
        k_buf_0_val_4_load_reg_1351 <= k_buf_0_val_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (brmerge_reg_1313_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        k_buf_0_val_5_load_reg_1357 <= k_buf_0_val_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_reg_1295_pp0_iter7_reg == 1'd1))) begin
        not_i_i_reg_1432 <= not_i_i_fu_1029_p2;
        p_Val2_1_reg_1421 <= p_Val2_1_fu_1019_p2;
        tmp_i_i_reg_1426 <= tmp_i_i_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_reg_1295_pp0_iter6_reg == 1'd1))) begin
        p_Result_s_reg_1410 <= p_Val2_s_fu_973_p2[32'd10];
        src_kernel_win_0_va_6_reg_1400 <= src_kernel_win_0_va_fu_116;
        tmp_46_reg_1416 <= {{p_Val2_s_fu_973_p2[10:8]}};
        tmp_48_reg_1405 <= tmp_48_fu_956_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_src_cols_V_read_cas_reg_1122 <= p_src_cols_V_read_cas_fu_270_p1;
        p_src_rows_V_read_cas_reg_1128 <= p_src_rows_V_read_cas_fu_274_p1;
        tmp_13_cast_reg_1160[31 : 1] <= tmp_13_cast_fu_356_p1[31 : 1];
        tmp_14_reg_1165 <= tmp_14_fu_360_p2;
        tmp_1_cast_reg_1143 <= tmp_1_cast_fu_302_p1;
        tmp_6_reg_1148 <= tmp_6_fu_314_p2;
        tmp_9_reg_1154 <= tmp_9_fu_332_p2;
        tmp_cast_reg_1138 <= tmp_cast_fu_288_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op143_read_state7 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op142_read_state7 == 1'b1)))) begin
        reg_263 <= p_src_data_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1) & (or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        right_border_buf_0_1_fu_136 <= right_border_buf_0_s_fu_132;
        right_border_buf_0_2_fu_140 <= right_border_buf_0_5_fu_152;
        right_border_buf_0_3_fu_144 <= col_buf_0_val_1_0_fu_785_p3;
        right_border_buf_0_4_fu_148 <= right_border_buf_0_3_fu_144;
        right_border_buf_0_5_fu_152 <= col_buf_0_val_2_0_fu_802_p3;
        right_border_buf_0_s_fu_132 <= col_buf_0_val_0_0_fu_768_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_reg_1196 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        row_assign_9_0_t_reg_1257 <= row_assign_9_0_t_fu_590_p2;
        row_assign_9_2_t_reg_1262 <= row_assign_9_2_t_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_reg_1267_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        src_kernel_win_0_va_1_fu_120 <= src_kernel_win_0_va_fu_116;
        src_kernel_win_0_va_fu_116 <= src_kernel_win_0_va_4_reg_1382_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond460_i_reg_1267_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        src_kernel_win_0_va_2_fu_124 <= src_kernel_win_0_va_5_reg_1389;
        src_kernel_win_0_va_3_fu_128 <= src_kernel_win_0_va_2_fu_124;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_reg_1295_pp0_iter5_reg == 1'd1))) begin
        sum9_reg_1395 <= sum9_fu_907_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_reg_1196 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_31_reg_1242 <= tmp_31_fu_551_p3;
        tmp_39_reg_1247 <= tmp_39_fu_577_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_65_0_not_reg_1252 <= tmp_65_0_not_fu_585_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_condition_pp0_exit_iter4_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter4_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond461_i_fu_366_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_fu_366_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1) & (or_cond_i_i_reg_1299_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_i_reg_1299_pp0_iter2_reg == 1'd1) & (tmp_16_reg_1188 == 1'd1) & (icmp_reg_1183 == 1'd0) & (exitcond460_i_reg_1267_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1) & (or_cond_i_i_reg_1299_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_i_reg_1299_pp0_iter2_reg == 1'd1) & (tmp_16_reg_1188 == 1'd1) & (icmp_reg_1183 == 1'd0) & (exitcond460_i_reg_1267_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1) & (or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (tmp_109_1_reg_1192 == 1'd1) & (icmp_reg_1183 == 1'd0) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1026)) begin
        if (((tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_load_reg_1345;
        end else if (((tmp_109_1_reg_1192 == 1'd1) & (icmp_reg_1183 == 1'd0))) begin
            k_buf_0_val_4_d1 = reg_263_pp0_iter3_reg;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1) & (or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (tmp_109_1_reg_1192 == 1'd1) & (icmp_reg_1183 == 1'd0) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1) & (or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (tmp_16_reg_1188 == 1'd1) & (icmp_reg_1183 == 1'd0) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1026)) begin
        if (((tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_load_reg_1351;
        end else if (((tmp_16_reg_1188 == 1'd1) & (icmp_reg_1183 == 1'd0))) begin
            k_buf_0_val_5_d1 = reg_263_pp0_iter3_reg;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1) & (or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (tmp_16_reg_1188 == 1'd1) & (icmp_reg_1183 == 1'd0) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1295_pp0_iter8_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond_i_reg_1295_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1) & (or_cond_i_i_reg_1299 == 1'd1) & (exitcond460_i_reg_1267_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_reg_1299 == 1'd1) & (icmp_reg_1183 == 1'd0) & (exitcond460_i_reg_1267_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op143_read_state7 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op142_read_state7 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_fu_366_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) & ~((ap_enable_reg_pp0_iter8 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter8 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_625_p2 = ($signed(32'd4294967295) + $signed(t_V_1_reg_252));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1295_pp0_iter8_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op143_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op142_read_state7 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1295_pp0_iter8_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op143_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op142_read_state7 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1295_pp0_iter8_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op143_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op142_read_state7 == 1'b1)))));
end

assign ap_block_state10_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter9 = ((or_cond_i_reg_1295_pp0_iter8_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op143_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op142_read_state7 == 1'b1)));
end

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1026 = ((or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_enable_operation_136 = (exitcond460_i_reg_1267_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_139 = (exitcond460_i_reg_1267_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_141 = (ap_predicate_op141_load_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_144 = (exitcond460_i_reg_1267_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_145 = (exitcond460_i_reg_1267_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_146 = (ap_predicate_op146_load_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_147 = (ap_predicate_op147_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_149 = (ap_predicate_op149_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_167 = (ap_predicate_op167_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_169 = (ap_predicate_op169_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_173 = (ap_predicate_op173_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_174 = (ap_predicate_op174_store_state9 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state7_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state8_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state9_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op141_load_state7 = ((brmerge_reg_1313 == 1'd1) & (exitcond460_i_reg_1267_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op142_read_state7 = ((or_cond_i_i_reg_1299 == 1'd1) & (icmp_reg_1183 == 1'd0) & (exitcond460_i_reg_1267_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op143_read_state7 = ((tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1) & (or_cond_i_i_reg_1299 == 1'd1) & (exitcond460_i_reg_1267_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op146_load_state8 = ((brmerge_reg_1313_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op147_store_state8 = ((or_cond_i_i_reg_1299_pp0_iter2_reg == 1'd1) & (tmp_16_reg_1188 == 1'd1) & (icmp_reg_1183 == 1'd0) & (exitcond460_i_reg_1267_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op149_store_state8 = ((tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1) & (or_cond_i_i_reg_1299_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op167_store_state9 = ((or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (tmp_16_reg_1188 == 1'd1) & (icmp_reg_1183 == 1'd0) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op169_store_state9 = ((or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (tmp_109_1_reg_1192 == 1'd1) & (icmp_reg_1183 == 1'd0) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op173_store_state9 = ((tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1) & (or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op174_store_state9 = ((tmp_2_reg_1178 == 1'd1) & (icmp_reg_1183 == 1'd1) & (or_cond_i_i_reg_1299_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1267_pp0_iter3_reg == 1'd0));
end

assign brmerge_fu_724_p2 = (tmp_65_0_not_reg_1252 | tmp_5_fu_671_p2);

assign col_assign_2_t_fu_735_p2 = (tmp_14_reg_1165 - tmp_43_reg_1308);

assign col_buf_0_val_0_0_fu_768_p3 = ((brmerge_reg_1313_pp0_iter3_reg[0:0] === 1'b1) ? k_buf_0_val_3_load_reg_1345 : tmp_36_fu_757_p5);

assign col_buf_0_val_1_0_fu_785_p3 = ((brmerge_reg_1313_pp0_iter3_reg[0:0] === 1'b1) ? k_buf_0_val_4_load_reg_1351 : tmp_37_fu_774_p5);

assign col_buf_0_val_2_0_fu_802_p3 = ((brmerge_reg_1313_pp0_iter3_reg[0:0] === 1'b1) ? k_buf_0_val_5_load_reg_1357 : tmp_38_fu_791_p5);

assign exitcond460_i_fu_598_p2 = ((t_V_1_reg_252 == tmp_cast_reg_1138) ? 1'b1 : 1'b0);

assign exitcond461_i_fu_366_p2 = ((t_V_reg_241 == tmp_1_cast_reg_1143) ? 1'b1 : 1'b0);

assign i_V_fu_371_p2 = (t_V_reg_241 + 32'd1);

assign icmp1_fu_619_p2 = ((tmp_40_fu_609_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_fu_392_p2 = ((tmp_15_fu_382_p4 != 31'd0) ? 1'b1 : 1'b0);

assign j_V_fu_603_p2 = (t_V_1_reg_252 + 32'd1);

assign k_buf_0_val_3_address0 = tmp_33_fu_729_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1320;

assign k_buf_0_val_4_address0 = tmp_33_fu_729_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1333_pp0_iter3_reg;

assign k_buf_0_val_5_address0 = tmp_33_fu_729_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1339_pp0_iter3_reg;

assign not_i_i_fu_1029_p2 = ((tmp_46_reg_1416 != 3'd0) ? 1'b1 : 1'b0);

assign or_cond_i496_i_2_fu_513_p2 = (tmp_135_2_fu_509_p2 & rev1_fu_503_p2);

assign or_cond_i496_i_fu_476_p2 = (tmp_21_fu_472_p2 & rev_fu_466_p2);

assign or_cond_i_fu_661_p2 = (icmp_reg_1183 & icmp1_fu_619_p2);

assign or_cond_i_i_fu_675_p2 = (tmp_5_fu_671_p2 & rev2_fu_666_p2);

assign overflow_fu_1034_p2 = (tmp_i_i_reg_1426 & not_i_i_reg_1432);

assign p_Val2_1_fu_1019_p2 = (tmp_48_reg_1405 + tmp22_fu_1014_p2);

assign p_Val2_s_fu_973_p2 = (sum_V_2_fu_938_p2 + tmp21_cast_fu_969_p1);

assign p_assign_1_fu_647_p2 = (32'd1 - t_V_1_reg_252);

assign p_assign_2_fu_685_p2 = ($signed(tmp_13_cast_reg_1160) - $signed(p_p2_i_i_reg_1288));

assign p_assign_3_fu_689_p3 = ((or_cond_i_i_fu_675_p2[0:0] === 1'b1) ? ImagLoc_x_reg_1276 : p_assign_2_fu_685_p2);

assign p_assign_6_2_fu_439_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_241));

assign p_assign_7_2_fu_453_p2 = (32'd3 - t_V_reg_241);

assign p_assign_7_fu_433_p2 = (32'd1 - t_V_reg_241);

assign p_dst_data_stream_V_din = ((tmp_9_i_i_fu_1045_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_1038_p3 : p_Val2_1_reg_1421);

assign p_mux_i_i_cast_fu_1038_p3 = ((tmp_i_i_reg_1426[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i497_i_2_fu_519_p3 = ((tmp_26_reg_1232[0:0] === 1'b1) ? p_assign_7_2_reg_1237 : p_assign_6_2_reg_1225);

assign p_p2_i497_i_fu_482_p3 = ((tmp_22_reg_1215[0:0] === 1'b1) ? p_assign_7_reg_1220 : tmp_19_reg_1208);

assign p_p2_i_i_fu_653_p3 = ((tmp_42_fu_639_p3[0:0] === 1'b1) ? p_assign_1_fu_647_p2 : ImagLoc_x_fu_625_p2);

assign p_shl_cast_fu_890_p1 = p_shl_fu_882_p3;

assign p_shl_fu_882_p3 = {{src_kernel_win_0_va_2_fu_124}, {1'd0}};

assign p_src_cols_V_read_cas_1_fu_278_p0 = p_src_cols_V_read;

assign p_src_cols_V_read_cas_1_fu_278_p1 = p_src_cols_V_read_cas_1_fu_278_p0;

assign p_src_cols_V_read_cas_fu_270_p0 = p_src_cols_V_read;

assign p_src_cols_V_read_cas_fu_270_p1 = p_src_cols_V_read_cas_fu_270_p0;

assign p_src_rows_V_read_cas_1_fu_292_p0 = p_src_rows_V_read;

assign p_src_rows_V_read_cas_1_fu_292_p1 = p_src_rows_V_read_cas_1_fu_292_p0;

assign p_src_rows_V_read_cas_fu_274_p0 = p_src_rows_V_read;

assign p_src_rows_V_read_cas_fu_274_p1 = p_src_rows_V_read_cas_fu_274_p0;

assign r_V_0_2_cast_cast_fu_894_p1 = src_kernel_win_0_va_5_reg_1389;

assign r_V_0_cast_cast_fu_878_p1 = src_kernel_win_0_va_3_fu_128;

assign r_V_2_2_1_fu_944_p3 = {{src_kernel_win_0_va_fu_116}, {1'd0}};

assign rev1_fu_503_p2 = (tmp_25_fu_496_p3 ^ 1'd1);

assign rev2_fu_666_p2 = (tmp_41_reg_1282 ^ 1'd1);

assign rev_fu_466_p2 = (tmp_20_fu_459_p3 ^ 1'd1);

assign row_assign_9_0_t_fu_590_p2 = (tmp_6_reg_1148 - tmp_31_reg_1242);

assign row_assign_9_2_t_fu_594_p2 = (tmp_6_reg_1148 - tmp_39_reg_1247);

assign sel_tmp7_fu_702_p2 = (tmp_5_not_fu_696_p2 | tmp_41_reg_1282);

assign sel_tmp8_fu_707_p2 = (tmp_11_fu_681_p2 & sel_tmp7_fu_702_p2);

assign src_kernel_win_0_va_4_fu_852_p3 = ((tmp_17_reg_1196[0:0] === 1'b1) ? tmp_44_fu_844_p5 : col_buf_0_val_0_0_reg_1362);

assign src_kernel_win_0_va_5_fu_866_p3 = ((tmp_17_reg_1196[0:0] === 1'b1) ? tmp_45_fu_858_p5 : col_buf_0_val_2_0_reg_1375);

assign sum9_cast_fu_931_p1 = sum9_reg_1395;

assign sum9_fu_907_p2 = (p_shl_cast_fu_890_p1 + tmp20_cast_fu_903_p1);

assign sum_V_2_fu_938_p2 = (tmp_151_2_cast_fu_934_p1 - sum9_cast_fu_931_p1);

assign tmp20_cast_fu_903_p1 = tmp20_fu_897_p2;

assign tmp20_fu_897_p2 = (r_V_0_2_cast_cast_fu_894_p1 + r_V_0_cast_cast_fu_878_p1);

assign tmp21_cast_fu_969_p1 = tmp21_fu_963_p2;

assign tmp21_fu_963_p2 = (tmp_151_2_2_cast_cas_fu_960_p1 + tmp_151_2_cast_cast_fu_952_p1);

assign tmp22_fu_1014_p2 = (src_kernel_win_0_va_4_reg_1382_pp0_iter7_reg + tmp_49_fu_1009_p2);

assign tmp_109_1_fu_404_p2 = ((t_V_reg_241 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_11_fu_681_p2 = (($signed(p_p2_i_i_reg_1288) < $signed(p_src_cols_V_read_cas_reg_1122)) ? 1'b1 : 1'b0);

assign tmp_12_cast_fu_346_p1 = $signed(tmp_12_fu_338_p3);

assign tmp_12_fu_338_p1 = p_src_cols_V_read;

assign tmp_12_fu_338_p3 = {{tmp_12_fu_338_p1}, {1'd0}};

assign tmp_135_2_fu_509_p2 = (($signed(p_assign_6_2_reg_1225) < $signed(p_src_rows_V_read_cas_reg_1128)) ? 1'b1 : 1'b0);

assign tmp_13_cast_fu_356_p1 = $signed(tmp_13_fu_350_p2);

assign tmp_13_fu_350_p2 = ($signed(14'd16382) + $signed(tmp_12_cast_fu_346_p1));

assign tmp_144_2_fu_524_p2 = (($signed(p_p2_i497_i_2_fu_519_p3) < $signed(p_src_rows_V_read_cas_reg_1128)) ? 1'b1 : 1'b0);

assign tmp_14_fu_360_p2 = ($signed(2'd3) + $signed(tmp_4_fu_310_p1));

assign tmp_151_2_2_cast_cas_fu_960_p1 = src_kernel_win_0_va_4_reg_1382_pp0_iter6_reg;

assign tmp_151_2_cast_cast_fu_952_p1 = r_V_2_2_1_fu_944_p3;

assign tmp_151_2_cast_fu_934_p1 = src_kernel_win_0_va_1_fu_120;

assign tmp_15_fu_382_p4 = {{t_V_reg_241[31:1]}};

assign tmp_16_fu_398_p2 = ((t_V_reg_241 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_17_fu_410_p2 = ((t_V_reg_241 > p_src_rows_V_read_cas_reg_1128) ? 1'b1 : 1'b0);

assign tmp_18_fu_415_p1 = t_V_reg_241[1:0];

assign tmp_19_fu_419_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_241));

assign tmp_1_cast_fu_302_p1 = $signed(tmp_1_fu_296_p2);

assign tmp_1_fu_296_p2 = ($signed(12'd2) + $signed(p_src_rows_V_read_cas_1_fu_292_p1));

assign tmp_20_fu_459_p3 = tmp_19_reg_1208[32'd31];

assign tmp_21_fu_472_p2 = (($signed(tmp_19_reg_1208) < $signed(p_src_rows_V_read_cas_reg_1128)) ? 1'b1 : 1'b0);

assign tmp_23_fu_487_p2 = (($signed(p_p2_i497_i_fu_482_p3) < $signed(p_src_rows_V_read_cas_reg_1128)) ? 1'b1 : 1'b0);

assign tmp_24_fu_492_p1 = p_p2_i497_i_fu_482_p3[1:0];

assign tmp_25_fu_496_p3 = p_assign_6_2_reg_1225[32'd31];

assign tmp_27_fu_529_p1 = p_p2_i497_i_2_fu_519_p3[1:0];

assign tmp_28_fu_533_p2 = (tmp_9_reg_1154 - tmp_24_fu_492_p1);

assign tmp_29_fu_538_p3 = ((tmp_23_fu_487_p2[0:0] === 1'b1) ? tmp_24_fu_492_p1 : tmp_28_fu_533_p2);

assign tmp_2_fu_377_p2 = ((t_V_reg_241 < p_src_rows_V_read_cas_reg_1128) ? 1'b1 : 1'b0);

assign tmp_30_fu_546_p2 = ($signed(2'd3) + $signed(tmp_18_reg_1202));

assign tmp_31_fu_551_p3 = ((or_cond_i496_i_fu_476_p2[0:0] === 1'b1) ? tmp_30_fu_546_p2 : tmp_29_fu_538_p3);

assign tmp_32_fu_559_p2 = (tmp_9_reg_1154 - tmp_27_fu_529_p1);

assign tmp_33_fu_729_p1 = x_reg_1303;

assign tmp_34_fu_564_p3 = ((tmp_144_2_fu_524_p2[0:0] === 1'b1) ? tmp_27_fu_529_p1 : tmp_32_fu_559_p2);

assign tmp_35_fu_572_p2 = (2'd1 + tmp_18_reg_1202);

assign tmp_39_fu_577_p3 = ((or_cond_i496_i_2_fu_513_p2[0:0] === 1'b1) ? tmp_35_fu_572_p2 : tmp_34_fu_564_p3);

assign tmp_3_fu_306_p0 = p_src_rows_V_read;

assign tmp_3_fu_306_p1 = tmp_3_fu_306_p0[1:0];

assign tmp_40_fu_609_p4 = {{t_V_1_reg_252[31:1]}};

assign tmp_42_fu_639_p3 = ImagLoc_x_fu_625_p2[32'd31];

assign tmp_43_fu_720_p1 = x_fu_713_p3[1:0];

assign tmp_48_fu_956_p1 = sum_V_2_fu_938_p2[7:0];

assign tmp_49_fu_1009_p2 = src_kernel_win_0_va_6_reg_1400 << 8'd1;

assign tmp_4_fu_310_p0 = p_src_cols_V_read;

assign tmp_4_fu_310_p1 = tmp_4_fu_310_p0[1:0];

assign tmp_5_fu_671_p2 = (($signed(ImagLoc_x_reg_1276) < $signed(p_src_cols_V_read_cas_reg_1122)) ? 1'b1 : 1'b0);

assign tmp_5_not_fu_696_p2 = (tmp_5_fu_671_p2 ^ 1'd1);

assign tmp_65_0_not_fu_585_p2 = (tmp_2_reg_1178 ^ 1'd1);

assign tmp_6_fu_314_p2 = ($signed(2'd3) + $signed(tmp_3_fu_306_p1));

assign tmp_7_fu_320_p0 = p_src_rows_V_read;

assign tmp_7_fu_320_p1 = tmp_7_fu_320_p0[0:0];

assign tmp_8_fu_324_p3 = {{tmp_7_fu_320_p1}, {1'd0}};

assign tmp_9_fu_332_p2 = (tmp_8_fu_324_p3 ^ 2'd2);

assign tmp_9_i_i_fu_1045_p2 = (p_Result_s_reg_1410_pp0_iter8_reg | overflow_fu_1034_p2);

assign tmp_cast_fu_288_p1 = $signed(tmp_s_fu_282_p2);

assign tmp_i_i_fu_1024_p2 = (p_Result_s_reg_1410 ^ 1'd1);

assign tmp_s_fu_282_p2 = ($signed(13'd2) + $signed(p_src_cols_V_read_cas_1_fu_278_p1));

assign x_fu_713_p3 = ((sel_tmp8_fu_707_p2[0:0] === 1'b1) ? p_p2_i_i_reg_1288 : p_assign_3_fu_689_p3);

always @ (posedge ap_clk) begin
    tmp_13_cast_reg_1160[0] <= 1'b0;
end

endmodule //Filter2D
