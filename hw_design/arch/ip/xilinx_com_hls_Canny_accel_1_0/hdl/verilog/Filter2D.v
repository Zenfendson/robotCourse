// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state17 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [15:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1352;
reg   [0:0] exitcond460_i_reg_1352_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_1384;
reg   [0:0] icmp_reg_1290;
reg   [0:0] tmp_s_reg_1285;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] or_cond_i_reg_1380;
reg   [0:0] or_cond_i_reg_1380_pp0_iter11_reg;
reg   [10:0] t_V_3_reg_322;
reg   [7:0] reg_333;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
reg    ap_predicate_op146_read_state6;
reg    ap_predicate_op147_read_state6;
reg    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_state10_pp0_stage0_iter6;
wire    ap_block_state11_pp0_stage0_iter7;
wire    ap_block_state12_pp0_stage0_iter8;
wire    ap_block_state13_pp0_stage0_iter9;
wire    ap_block_state14_pp0_stage0_iter10;
wire    ap_block_state15_pp0_stage0_iter11;
reg    ap_block_state16_pp0_stage0_iter12;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] reg_333_pp0_iter3_reg;
wire  signed [9:0] tmp_244_0_1_cast_fu_340_p1;
reg  signed [9:0] tmp_244_0_1_cast_reg_1247;
wire  signed [9:0] tmp_244_0_2_cast_fu_344_p1;
reg  signed [9:0] tmp_244_0_2_cast_reg_1252;
wire  signed [10:0] tmp_244_1_cast_fu_348_p1;
reg  signed [10:0] tmp_244_1_cast_reg_1257;
wire   [11:0] tmp_244_1_2_cast_fu_352_p1;
reg   [11:0] tmp_244_1_2_cast_reg_1262;
wire  signed [9:0] tmp_244_2_cast_fu_356_p1;
reg  signed [9:0] tmp_244_2_cast_reg_1267;
wire   [10:0] tmp_244_2_1_cast_fu_360_p1;
reg   [10:0] tmp_244_2_1_cast_reg_1272;
wire   [9:0] i_V_fu_374_p2;
reg   [9:0] i_V_reg_1280;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_s_fu_380_p2;
wire   [0:0] exitcond461_i_fu_368_p2;
wire   [0:0] icmp_fu_396_p2;
wire   [0:0] tmp_24_fu_402_p2;
reg   [0:0] tmp_24_reg_1295;
wire   [0:0] tmp_203_1_fu_408_p2;
reg   [0:0] tmp_203_1_reg_1299;
wire   [0:0] tmp_25_fu_414_p2;
reg   [0:0] tmp_25_reg_1303;
wire   [1:0] tmp_56_fu_420_p1;
reg   [1:0] tmp_56_reg_1310;
wire   [10:0] tmp_26_fu_424_p2;
reg   [10:0] tmp_26_reg_1315;
wire   [1:0] tmp_60_fu_452_p1;
reg   [1:0] tmp_60_reg_1321;
wire   [0:0] tmp_30_fu_456_p2;
reg   [0:0] tmp_30_reg_1327;
wire   [1:0] row_assign_10_1_t_fu_546_p2;
reg   [1:0] row_assign_10_1_t_reg_1332;
wire   [1:0] row_assign_10_2_t_fu_584_p2;
reg   [1:0] row_assign_10_2_t_reg_1337;
wire   [0:0] tmp_159_0_not_fu_590_p2;
reg   [0:0] tmp_159_0_not_reg_1342;
wire    ap_CS_fsm_state3;
wire   [1:0] row_assign_10_0_t_fu_643_p2;
reg   [1:0] row_assign_10_0_t_reg_1347;
wire   [0:0] exitcond460_i_fu_653_p2;
wire    ap_CS_fsm_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1352_pp0_iter2_reg;
reg   [0:0] exitcond460_i_reg_1352_pp0_iter3_reg;
reg   [0:0] exitcond460_i_reg_1352_pp0_iter4_reg;
reg   [0:0] exitcond460_i_reg_1352_pp0_iter5_reg;
reg   [0:0] exitcond460_i_reg_1352_pp0_iter6_reg;
wire   [10:0] j_V_fu_659_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [11:0] ImagLoc_x_fu_681_p2;
reg   [11:0] ImagLoc_x_reg_1361;
reg   [0:0] tmp_73_reg_1367;
wire  signed [11:0] p_p2_i_i_fu_709_p3;
reg  signed [11:0] p_p2_i_i_reg_1373;
wire   [0:0] or_cond_i_fu_717_p2;
reg   [0:0] or_cond_i_reg_1380_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_1380_pp0_iter2_reg;
reg   [0:0] or_cond_i_reg_1380_pp0_iter3_reg;
reg   [0:0] or_cond_i_reg_1380_pp0_iter4_reg;
reg   [0:0] or_cond_i_reg_1380_pp0_iter5_reg;
reg   [0:0] or_cond_i_reg_1380_pp0_iter6_reg;
reg   [0:0] or_cond_i_reg_1380_pp0_iter7_reg;
reg   [0:0] or_cond_i_reg_1380_pp0_iter8_reg;
reg   [0:0] or_cond_i_reg_1380_pp0_iter9_reg;
reg   [0:0] or_cond_i_reg_1380_pp0_iter10_reg;
wire   [0:0] or_cond_i_i_fu_732_p2;
reg   [0:0] or_cond_i_i_reg_1384_pp0_iter2_reg;
reg   [0:0] or_cond_i_i_reg_1384_pp0_iter3_reg;
wire  signed [12:0] x_fu_779_p3;
reg  signed [12:0] x_reg_1388;
wire   [1:0] tmp_75_fu_787_p1;
reg   [1:0] tmp_75_reg_1393;
reg   [1:0] tmp_75_reg_1393_pp0_iter2_reg;
reg   [1:0] tmp_75_reg_1393_pp0_iter3_reg;
wire   [0:0] brmerge_fu_791_p2;
reg   [0:0] brmerge_reg_1398;
reg   [0:0] brmerge_reg_1398_pp0_iter2_reg;
reg   [0:0] brmerge_reg_1398_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_3_addr_reg_1405;
reg   [10:0] k_buf_0_val_4_addr_reg_1411;
reg   [10:0] k_buf_0_val_4_addr_reg_1411_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_5_addr_reg_1417;
reg   [10:0] k_buf_0_val_5_addr_reg_1417_pp0_iter3_reg;
wire   [7:0] k_buf_0_val_3_q0;
reg   [7:0] k_buf_0_val_3_load_reg_1423;
reg    ap_enable_reg_pp0_iter3;
wire   [7:0] k_buf_0_val_4_q0;
reg   [7:0] k_buf_0_val_4_load_reg_1429;
wire   [7:0] k_buf_0_val_5_q0;
reg   [7:0] k_buf_0_val_5_load_reg_1435;
wire   [7:0] col_buf_0_val_0_0_fu_841_p3;
reg   [7:0] col_buf_0_val_0_0_reg_1440;
wire   [7:0] col_buf_0_val_1_0_fu_859_p3;
reg   [7:0] col_buf_0_val_1_0_reg_1448;
wire   [7:0] col_buf_0_val_2_0_fu_877_p3;
reg   [7:0] col_buf_0_val_2_0_reg_1456;
wire   [7:0] src_kernel_win_0_va_6_fu_927_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1464;
reg   [7:0] src_kernel_win_0_va_6_reg_1464_pp0_iter6_reg;
reg   [7:0] src_kernel_win_0_va_6_reg_1464_pp0_iter7_reg;
reg   [7:0] src_kernel_win_0_va_6_reg_1464_pp0_iter8_reg;
wire   [7:0] src_kernel_win_0_va_7_fu_941_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1470;
reg   [7:0] src_kernel_win_0_va_7_reg_1470_pp0_iter6_reg;
reg   [7:0] src_kernel_win_0_va_7_reg_1470_pp0_iter7_reg;
wire   [7:0] src_kernel_win_0_va_8_fu_955_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1476;
reg   [7:0] src_kernel_win_0_va_16_reg_1486;
wire   [8:0] r_V_s_fu_983_p2;
reg  signed [8:0] r_V_s_reg_1491;
reg   [7:0] src_kernel_win_0_va_9_reg_1501;
wire  signed [10:0] grp_fu_1131_p3;
reg  signed [10:0] sum_V_0_1_reg_1506;
reg    ap_enable_reg_pp0_iter7;
wire  signed [10:0] grp_fu_1138_p3;
reg  signed [10:0] sum_V_0_2_reg_1521;
reg    ap_enable_reg_pp0_iter8;
wire  signed [11:0] grp_fu_1144_p3;
reg  signed [11:0] sum_V_1_1_reg_1536;
reg    ap_enable_reg_pp0_iter9;
wire  signed [9:0] grp_fu_1151_p3;
reg  signed [9:0] tmp5_reg_1541;
wire  signed [11:0] grp_fu_1158_p3;
reg  signed [11:0] tmp3_reg_1546;
reg    ap_enable_reg_pp0_iter10;
wire  signed [10:0] grp_fu_1164_p3;
reg  signed [10:0] tmp4_reg_1551;
(* use_dsp48 = "no" *) wire  signed [11:0] p_Val2_s_fu_1058_p2;
reg  signed [11:0] p_Val2_s_reg_1556;
reg   [0:0] p_Result_s_reg_1561;
reg   [0:0] tmp_79_reg_1568;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_condition_pp0_exit_iter4_state8;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter11;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [9:0] t_V_reg_311;
wire    ap_CS_fsm_state17;
wire   [63:0] tmp_41_fu_799_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_154;
reg   [7:0] src_kernel_win_0_va_1_fu_158;
reg   [7:0] src_kernel_win_0_va_2_fu_162;
reg   [7:0] src_kernel_win_0_va_3_fu_166;
reg   [7:0] src_kernel_win_0_va_4_fu_170;
reg   [7:0] src_kernel_win_0_va_5_fu_174;
reg   [7:0] right_border_buf_0_s_fu_178;
reg   [7:0] right_border_buf_0_1_fu_182;
reg   [7:0] right_border_buf_0_2_fu_186;
reg   [7:0] right_border_buf_0_3_fu_190;
reg   [7:0] right_border_buf_0_4_fu_194;
reg   [7:0] right_border_buf_0_5_fu_198;
wire   [8:0] tmp_53_fu_386_p4;
wire   [10:0] t_V_cast_fu_364_p1;
wire   [0:0] tmp_59_fu_430_p3;
wire   [10:0] p_assign_7_fu_438_p2;
wire   [10:0] p_p2_i497_i_fu_444_p3;
wire   [10:0] p_assign_6_1_fu_462_p2;
wire   [10:0] p_assign_6_2_fu_488_p2;
wire   [1:0] tmp_64_fu_484_p1;
wire   [0:0] tmp_63_fu_476_p3;
wire   [1:0] tmp_68_fu_520_p2;
wire   [1:0] tmp_69_fu_526_p1;
wire   [0:0] tmp_62_fu_468_p3;
wire   [1:0] tmp_46_fu_530_p3;
wire   [1:0] tmp_45_fu_514_p2;
wire   [1:0] tmp_48_fu_538_p3;
wire   [1:0] tmp_67_fu_510_p1;
wire   [0:0] tmp_66_fu_502_p3;
wire   [1:0] tmp_70_fu_558_p2;
wire   [1:0] tmp_71_fu_564_p1;
wire   [0:0] tmp_65_fu_494_p3;
wire   [1:0] tmp_50_fu_568_p3;
wire   [1:0] tmp_49_fu_552_p2;
wire   [1:0] tmp_52_fu_576_p3;
wire   [0:0] tmp_57_fu_600_p3;
wire   [0:0] tmp_28_fu_613_p2;
wire   [0:0] rev_fu_607_p2;
wire   [1:0] p_assign_8_fu_624_p2;
wire   [0:0] or_cond_i496_i_fu_618_p2;
wire   [1:0] tmp_34_cast_fu_595_p2;
wire   [1:0] p_p2_i497_i_p_assign_8_fu_629_p3;
wire   [1:0] y_fu_635_p3;
wire   [9:0] tmp_72_fu_665_p4;
wire   [11:0] t_V_3_cast_fu_649_p1;
wire   [0:0] tmp_74_fu_695_p3;
wire   [11:0] p_assign_1_fu_703_p2;
wire   [0:0] icmp3_fu_675_p2;
wire   [0:0] tmp_37_fu_727_p2;
wire   [0:0] rev11_fu_722_p2;
wire   [11:0] p_assign_2_fu_746_p2;
wire   [11:0] p_assign_3_fu_751_p3;
wire   [0:0] tmp_37_not_fu_762_p2;
wire   [0:0] tmp_39_fu_741_p2;
wire   [0:0] sel_tmp7_fu_768_p2;
wire   [0:0] sel_tmp8_fu_773_p2;
wire  signed [12:0] p_p2_i_i_cast_fu_738_p1;
wire   [12:0] sel_tmp_cast_fu_758_p1;
wire  signed [31:0] col_assign_cast_fu_796_p1;
wire   [1:0] col_assign_3_t_fu_824_p2;
wire   [7:0] tmp_42_fu_829_p5;
wire   [7:0] tmp_43_fu_847_p5;
wire   [7:0] tmp_44_fu_865_p5;
wire   [7:0] tmp_47_fu_919_p5;
wire   [7:0] tmp_51_fu_933_p5;
wire   [7:0] tmp_54_fu_947_p5;
wire   [8:0] r_V_0_cast_fu_979_p1;
wire  signed [11:0] tmp4_cast_fu_1055_p1;
wire   [0:0] p_not1_i_i_fu_1082_p2;
wire   [0:0] p_Result_not_fu_1096_p2;
wire   [0:0] brmerge2_i_i_fu_1092_p2;
wire  signed [15:0] p_Val2_1_fu_1079_p1;
wire   [0:0] underflow_fu_1087_p2;
wire   [0:0] brmerge3_i_i_fu_1101_p2;
wire   [15:0] p_mux_i_i_fu_1106_p3;
wire   [15:0] p_i_i_fu_1114_p3;
wire  signed [1:0] grp_fu_1131_p0;
wire   [7:0] grp_fu_1131_p1;
wire  signed [1:0] grp_fu_1138_p0;
wire   [7:0] grp_fu_1138_p1;
wire  signed [2:0] grp_fu_1144_p0;
wire   [7:0] grp_fu_1144_p1;
wire  signed [1:0] grp_fu_1151_p0;
wire   [7:0] grp_fu_1151_p1;
wire   [7:0] grp_fu_1151_p2;
wire   [3:0] grp_fu_1158_p0;
wire   [7:0] grp_fu_1158_p1;
wire   [2:0] grp_fu_1164_p0;
wire   [7:0] grp_fu_1164_p1;
reg    grp_fu_1131_ce;
reg    grp_fu_1138_ce;
reg    grp_fu_1144_ce;
reg    grp_fu_1151_ce;
reg    grp_fu_1158_ce;
reg    grp_fu_1164_ce;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_141;
reg    ap_enable_state6_pp0_iter2_stage0;
reg    ap_enable_operation_148;
reg    ap_enable_state7_pp0_iter3_stage0;
reg    ap_predicate_op151_store_state7;
reg    ap_enable_operation_151;
reg    ap_predicate_op153_store_state7;
reg    ap_enable_operation_153;
reg    ap_enable_operation_143;
reg    ap_enable_operation_149;
reg    ap_predicate_op174_store_state8;
reg    ap_enable_operation_174;
reg    ap_enable_state8_pp0_iter4_stage0;
reg    ap_predicate_op179_store_state8;
reg    ap_enable_operation_179;
reg    ap_predicate_op145_load_state6;
reg    ap_enable_operation_145;
reg    ap_predicate_op150_load_state7;
reg    ap_enable_operation_150;
reg    ap_predicate_op172_store_state8;
reg    ap_enable_operation_172;
reg    ap_predicate_op178_store_state8;
reg    ap_enable_operation_178;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1131_p10;
wire   [9:0] grp_fu_1138_p10;
wire   [10:0] grp_fu_1144_p10;
wire   [9:0] grp_fu_1151_p10;
wire   [9:0] grp_fu_1151_p20;
wire   [11:0] grp_fu_1158_p10;
wire   [10:0] grp_fu_1164_p10;
reg    ap_condition_1151;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
end

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(reg_333)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

Canny_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Canny_accel_mux_3hbi_U36(
    .din0(right_border_buf_0_s_fu_178),
    .din1(right_border_buf_0_1_fu_182),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_824_p2),
    .dout(tmp_42_fu_829_p5)
);

Canny_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Canny_accel_mux_3hbi_U37(
    .din0(right_border_buf_0_3_fu_190),
    .din1(right_border_buf_0_4_fu_194),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_824_p2),
    .dout(tmp_43_fu_847_p5)
);

Canny_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Canny_accel_mux_3hbi_U38(
    .din0(right_border_buf_0_5_fu_198),
    .din1(right_border_buf_0_2_fu_186),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_824_p2),
    .dout(tmp_44_fu_865_p5)
);

Canny_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Canny_accel_mux_3hbi_U39(
    .din0(col_buf_0_val_0_0_reg_1440),
    .din1(col_buf_0_val_1_0_reg_1448),
    .din2(col_buf_0_val_2_0_reg_1456),
    .din3(row_assign_10_0_t_reg_1347),
    .dout(tmp_47_fu_919_p5)
);

Canny_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Canny_accel_mux_3hbi_U40(
    .din0(col_buf_0_val_0_0_reg_1440),
    .din1(col_buf_0_val_1_0_reg_1448),
    .din2(col_buf_0_val_2_0_reg_1456),
    .din3(row_assign_10_1_t_reg_1332),
    .dout(tmp_51_fu_933_p5)
);

Canny_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Canny_accel_mux_3hbi_U41(
    .din0(col_buf_0_val_0_0_reg_1440),
    .din1(col_buf_0_val_1_0_reg_1448),
    .din2(col_buf_0_val_2_0_reg_1456),
    .din3(row_assign_10_2_t_reg_1337),
    .dout(tmp_54_fu_947_p5)
);

Canny_accel_mac_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
Canny_accel_mac_mibs_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1131_p0),
    .din1(grp_fu_1131_p1),
    .din2(r_V_s_reg_1491),
    .ce(grp_fu_1131_ce),
    .dout(grp_fu_1131_p3)
);

Canny_accel_mac_mjbC #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
Canny_accel_mac_mjbC_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1138_p0),
    .din1(grp_fu_1138_p1),
    .din2(sum_V_0_1_reg_1506),
    .ce(grp_fu_1138_ce),
    .dout(grp_fu_1138_p3)
);

Canny_accel_mac_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 12 ))
Canny_accel_mac_mkbM_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1144_p0),
    .din1(grp_fu_1144_p1),
    .din2(sum_V_0_2_reg_1521),
    .ce(grp_fu_1144_ce),
    .dout(grp_fu_1144_p3)
);

Canny_accel_mac_mlbW #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
Canny_accel_mac_mlbW_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1151_p0),
    .din1(grp_fu_1151_p1),
    .din2(grp_fu_1151_p2),
    .ce(grp_fu_1151_ce),
    .dout(grp_fu_1151_p3)
);

Canny_accel_mac_mmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
Canny_accel_mac_mmb6_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1158_p0),
    .din1(grp_fu_1158_p1),
    .din2(sum_V_1_1_reg_1536),
    .ce(grp_fu_1158_ce),
    .dout(grp_fu_1158_p3)
);

Canny_accel_mac_mncg #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
Canny_accel_mac_mncg_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1164_p0),
    .din1(grp_fu_1164_p1),
    .din2(tmp5_reg_1541),
    .ce(grp_fu_1164_ce),
    .dout(grp_fu_1164_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond460_i_fu_653_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter4_state8)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_653_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_3_reg_322 <= j_V_fu_659_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_V_3_reg_322 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        t_V_reg_311 <= i_V_reg_1280;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_reg_311 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_653_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ImagLoc_x_reg_1361 <= ImagLoc_x_fu_681_p2;
        or_cond_i_reg_1380 <= or_cond_i_fu_717_p2;
        p_p2_i_i_reg_1373 <= p_p2_i_i_fu_709_p3;
        tmp_73_reg_1367 <= ImagLoc_x_fu_681_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1352 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1398 <= brmerge_fu_791_p2;
        or_cond_i_i_reg_1384 <= or_cond_i_i_fu_732_p2;
        tmp_75_reg_1393 <= tmp_75_fu_787_p1;
        x_reg_1388 <= x_fu_779_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        brmerge_reg_1398_pp0_iter2_reg <= brmerge_reg_1398;
        brmerge_reg_1398_pp0_iter3_reg <= brmerge_reg_1398_pp0_iter2_reg;
        exitcond460_i_reg_1352_pp0_iter2_reg <= exitcond460_i_reg_1352_pp0_iter1_reg;
        exitcond460_i_reg_1352_pp0_iter3_reg <= exitcond460_i_reg_1352_pp0_iter2_reg;
        exitcond460_i_reg_1352_pp0_iter4_reg <= exitcond460_i_reg_1352_pp0_iter3_reg;
        exitcond460_i_reg_1352_pp0_iter5_reg <= exitcond460_i_reg_1352_pp0_iter4_reg;
        exitcond460_i_reg_1352_pp0_iter6_reg <= exitcond460_i_reg_1352_pp0_iter5_reg;
        k_buf_0_val_4_addr_reg_1411_pp0_iter3_reg <= k_buf_0_val_4_addr_reg_1411;
        k_buf_0_val_5_addr_reg_1417_pp0_iter3_reg <= k_buf_0_val_5_addr_reg_1417;
        or_cond_i_i_reg_1384_pp0_iter2_reg <= or_cond_i_i_reg_1384;
        or_cond_i_i_reg_1384_pp0_iter3_reg <= or_cond_i_i_reg_1384_pp0_iter2_reg;
        or_cond_i_reg_1380_pp0_iter10_reg <= or_cond_i_reg_1380_pp0_iter9_reg;
        or_cond_i_reg_1380_pp0_iter11_reg <= or_cond_i_reg_1380_pp0_iter10_reg;
        or_cond_i_reg_1380_pp0_iter2_reg <= or_cond_i_reg_1380_pp0_iter1_reg;
        or_cond_i_reg_1380_pp0_iter3_reg <= or_cond_i_reg_1380_pp0_iter2_reg;
        or_cond_i_reg_1380_pp0_iter4_reg <= or_cond_i_reg_1380_pp0_iter3_reg;
        or_cond_i_reg_1380_pp0_iter5_reg <= or_cond_i_reg_1380_pp0_iter4_reg;
        or_cond_i_reg_1380_pp0_iter6_reg <= or_cond_i_reg_1380_pp0_iter5_reg;
        or_cond_i_reg_1380_pp0_iter7_reg <= or_cond_i_reg_1380_pp0_iter6_reg;
        or_cond_i_reg_1380_pp0_iter8_reg <= or_cond_i_reg_1380_pp0_iter7_reg;
        or_cond_i_reg_1380_pp0_iter9_reg <= or_cond_i_reg_1380_pp0_iter8_reg;
        reg_333_pp0_iter3_reg <= reg_333;
        src_kernel_win_0_va_6_reg_1464 <= src_kernel_win_0_va_6_fu_927_p3;
        src_kernel_win_0_va_6_reg_1464_pp0_iter6_reg <= src_kernel_win_0_va_6_reg_1464;
        src_kernel_win_0_va_6_reg_1464_pp0_iter7_reg <= src_kernel_win_0_va_6_reg_1464_pp0_iter6_reg;
        src_kernel_win_0_va_6_reg_1464_pp0_iter8_reg <= src_kernel_win_0_va_6_reg_1464_pp0_iter7_reg;
        src_kernel_win_0_va_7_reg_1470 <= src_kernel_win_0_va_7_fu_941_p3;
        src_kernel_win_0_va_7_reg_1470_pp0_iter6_reg <= src_kernel_win_0_va_7_reg_1470;
        src_kernel_win_0_va_7_reg_1470_pp0_iter7_reg <= src_kernel_win_0_va_7_reg_1470_pp0_iter6_reg;
        src_kernel_win_0_va_8_reg_1476 <= src_kernel_win_0_va_8_fu_955_p3;
        tmp_75_reg_1393_pp0_iter2_reg <= tmp_75_reg_1393;
        tmp_75_reg_1393_pp0_iter3_reg <= tmp_75_reg_1393_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_buf_0_val_0_0_reg_1440 <= col_buf_0_val_0_0_fu_841_p3;
        col_buf_0_val_1_0_reg_1448 <= col_buf_0_val_1_0_fu_859_p3;
        col_buf_0_val_2_0_reg_1456 <= col_buf_0_val_2_0_fu_877_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond460_i_reg_1352 <= exitcond460_i_fu_653_p2;
        exitcond460_i_reg_1352_pp0_iter1_reg <= exitcond460_i_reg_1352;
        or_cond_i_reg_1380_pp0_iter1_reg <= or_cond_i_reg_1380;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1280 <= i_V_fu_374_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1290 <= icmp_fu_396_p2;
        row_assign_10_1_t_reg_1332 <= row_assign_10_1_t_fu_546_p2;
        row_assign_10_2_t_reg_1337 <= row_assign_10_2_t_fu_584_p2;
        tmp_203_1_reg_1299 <= tmp_203_1_fu_408_p2;
        tmp_24_reg_1295 <= tmp_24_fu_402_p2;
        tmp_25_reg_1303 <= tmp_25_fu_414_p2;
        tmp_26_reg_1315 <= tmp_26_fu_424_p2;
        tmp_30_reg_1327 <= tmp_30_fu_456_p2;
        tmp_56_reg_1310 <= tmp_56_fu_420_p1;
        tmp_60_reg_1321 <= tmp_60_fu_452_p1;
        tmp_s_reg_1285 <= tmp_s_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_addr_reg_1405 <= tmp_41_fu_799_p1;
        k_buf_0_val_4_addr_reg_1411 <= tmp_41_fu_799_p1;
        k_buf_0_val_5_addr_reg_1417 <= tmp_41_fu_799_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1352_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_load_reg_1423 <= k_buf_0_val_3_q0;
        k_buf_0_val_4_load_reg_1429 <= k_buf_0_val_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_reg_1398_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_load_reg_1435 <= k_buf_0_val_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1380_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_s_reg_1561 <= p_Val2_s_fu_1058_p2[32'd11];
        p_Val2_s_reg_1556 <= p_Val2_s_fu_1058_p2;
        tmp_79_reg_1568 <= p_Val2_s_fu_1058_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1380_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_s_reg_1491 <= r_V_s_fu_983_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op147_read_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op146_read_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_333 <= p_src_data_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1) & (or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_182 <= right_border_buf_0_s_fu_178;
        right_border_buf_0_2_fu_186 <= right_border_buf_0_5_fu_198;
        right_border_buf_0_3_fu_190 <= col_buf_0_val_1_0_fu_859_p3;
        right_border_buf_0_4_fu_194 <= right_border_buf_0_3_fu_190;
        right_border_buf_0_5_fu_198 <= col_buf_0_val_2_0_fu_877_p3;
        right_border_buf_0_s_fu_178 <= col_buf_0_val_0_0_fu_841_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_25_reg_1303 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        row_assign_10_0_t_reg_1347 <= row_assign_10_0_t_fu_643_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1352_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_16_reg_1486 <= src_kernel_win_0_va_4_fu_170;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1352_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_158 <= src_kernel_win_0_va_fu_154;
        src_kernel_win_0_va_2_fu_162 <= src_kernel_win_0_va_7_reg_1470_pp0_iter6_reg;
        src_kernel_win_0_va_3_fu_166 <= src_kernel_win_0_va_2_fu_162;
        src_kernel_win_0_va_fu_154 <= src_kernel_win_0_va_6_reg_1464_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1352_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_4_fu_170 <= src_kernel_win_0_va_8_fu_955_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1352_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_5_fu_174 <= src_kernel_win_0_va_16_reg_1486;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1380_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_9_reg_1501 <= src_kernel_win_0_va_fu_154;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1380_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_V_0_1_reg_1506 <= grp_fu_1131_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1380_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_V_0_2_reg_1521 <= grp_fu_1138_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1380_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_V_1_1_reg_1536 <= grp_fu_1144_p3;
        tmp5_reg_1541 <= grp_fu_1151_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1380_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp3_reg_1546 <= grp_fu_1158_p3;
        tmp4_reg_1551 <= grp_fu_1164_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_159_0_not_reg_1342 <= tmp_159_0_not_fu_590_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_244_0_1_cast_reg_1247 <= tmp_244_0_1_cast_fu_340_p1;
        tmp_244_0_2_cast_reg_1252 <= tmp_244_0_2_cast_fu_344_p1;
        tmp_244_1_2_cast_reg_1262[3 : 0] <= tmp_244_1_2_cast_fu_352_p1[3 : 0];
        tmp_244_1_cast_reg_1257 <= tmp_244_1_cast_fu_348_p1;
        tmp_244_2_1_cast_reg_1272[2 : 0] <= tmp_244_2_1_cast_fu_360_p1[2 : 0];
        tmp_244_2_cast_reg_1267 <= tmp_244_2_cast_fu_356_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_condition_pp0_exit_iter4_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter4_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond461_i_fu_368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_fu_368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1131_ce = 1'b1;
    end else begin
        grp_fu_1131_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1138_ce = 1'b1;
    end else begin
        grp_fu_1138_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1144_ce = 1'b1;
    end else begin
        grp_fu_1144_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1151_ce = 1'b1;
    end else begin
        grp_fu_1151_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1158_ce = 1'b1;
    end else begin
        grp_fu_1158_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1164_ce = 1'b1;
    end else begin
        grp_fu_1164_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1) & (or_cond_i_i_reg_1384_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_i_i_reg_1384_pp0_iter2_reg == 1'd1) & (tmp_24_reg_1295 == 1'd1) & (icmp_reg_1290 == 1'd0) & (exitcond460_i_reg_1352_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1) & (or_cond_i_i_reg_1384_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_i_i_reg_1384_pp0_iter2_reg == 1'd1) & (tmp_24_reg_1295 == 1'd1) & (icmp_reg_1290 == 1'd0) & (exitcond460_i_reg_1352_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1) & (or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (tmp_203_1_reg_1299 == 1'd1) & (icmp_reg_1290 == 1'd0) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1151)) begin
        if (((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_load_reg_1423;
        end else if (((tmp_203_1_reg_1299 == 1'd1) & (icmp_reg_1290 == 1'd0))) begin
            k_buf_0_val_4_d1 = reg_333_pp0_iter3_reg;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1) & (or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (tmp_203_1_reg_1299 == 1'd1) & (icmp_reg_1290 == 1'd0) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1) & (or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (tmp_24_reg_1295 == 1'd1) & (icmp_reg_1290 == 1'd0) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1151)) begin
        if (((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_load_reg_1429;
        end else if (((tmp_24_reg_1295 == 1'd1) & (icmp_reg_1290 == 1'd0))) begin
            k_buf_0_val_5_d1 = reg_333_pp0_iter3_reg;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1) & (or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (tmp_24_reg_1295 == 1'd1) & (icmp_reg_1290 == 1'd0) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1380_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1380_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1) & (or_cond_i_i_reg_1384 == 1'd1) & (exitcond460_i_reg_1352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_reg_1384 == 1'd1) & (icmp_reg_1290 == 1'd0) & (exitcond460_i_reg_1352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op147_read_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op146_read_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_fu_368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) & ~((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_681_p2 = ($signed(12'd4095) + $signed(t_V_3_cast_fu_649_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1380_pp0_iter11_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op146_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1380_pp0_iter11_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op146_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1380_pp0_iter11_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op146_read_state6 == 1'b1)))));
end

assign ap_block_state10_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp0_stage0_iter12 = ((or_cond_i_reg_1380_pp0_iter11_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op146_read_state6 == 1'b1)));
end

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1151 = ((or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_enable_operation_141 = (exitcond460_i_reg_1352_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_143 = (exitcond460_i_reg_1352_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_145 = (ap_predicate_op145_load_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_148 = (exitcond460_i_reg_1352_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_149 = (exitcond460_i_reg_1352_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_150 = (ap_predicate_op150_load_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_151 = (ap_predicate_op151_store_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_153 = (ap_predicate_op153_store_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_172 = (ap_predicate_op172_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_174 = (ap_predicate_op174_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_178 = (ap_predicate_op178_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_179 = (ap_predicate_op179_store_state8 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state6_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state7_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state8_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op145_load_state6 = ((brmerge_reg_1398 == 1'd1) & (exitcond460_i_reg_1352_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op146_read_state6 = ((or_cond_i_i_reg_1384 == 1'd1) & (icmp_reg_1290 == 1'd0) & (exitcond460_i_reg_1352_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op147_read_state6 = ((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1) & (or_cond_i_i_reg_1384 == 1'd1) & (exitcond460_i_reg_1352_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op150_load_state7 = ((brmerge_reg_1398_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op151_store_state7 = ((or_cond_i_i_reg_1384_pp0_iter2_reg == 1'd1) & (tmp_24_reg_1295 == 1'd1) & (icmp_reg_1290 == 1'd0) & (exitcond460_i_reg_1352_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op153_store_state7 = ((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1) & (or_cond_i_i_reg_1384_pp0_iter2_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op172_store_state8 = ((or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (tmp_24_reg_1295 == 1'd1) & (icmp_reg_1290 == 1'd0) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op174_store_state8 = ((or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (tmp_203_1_reg_1299 == 1'd1) & (icmp_reg_1290 == 1'd0) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op178_store_state8 = ((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1) & (or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op179_store_state8 = ((tmp_s_reg_1285 == 1'd1) & (icmp_reg_1290 == 1'd1) & (or_cond_i_i_reg_1384_pp0_iter3_reg == 1'd1) & (exitcond460_i_reg_1352_pp0_iter3_reg == 1'd0));
end

assign brmerge2_i_i_fu_1092_p2 = (tmp_79_reg_1568 ^ p_Result_s_reg_1561);

assign brmerge3_i_i_fu_1101_p2 = (tmp_79_reg_1568 | p_Result_not_fu_1096_p2);

assign brmerge_fu_791_p2 = (tmp_37_fu_727_p2 | tmp_159_0_not_reg_1342);

assign col_assign_3_t_fu_824_p2 = (tmp_75_reg_1393_pp0_iter3_reg ^ 2'd3);

assign col_assign_cast_fu_796_p1 = x_reg_1388;

assign col_buf_0_val_0_0_fu_841_p3 = ((brmerge_reg_1398_pp0_iter3_reg[0:0] === 1'b1) ? k_buf_0_val_3_load_reg_1423 : tmp_42_fu_829_p5);

assign col_buf_0_val_1_0_fu_859_p3 = ((brmerge_reg_1398_pp0_iter3_reg[0:0] === 1'b1) ? k_buf_0_val_4_load_reg_1429 : tmp_43_fu_847_p5);

assign col_buf_0_val_2_0_fu_877_p3 = ((brmerge_reg_1398_pp0_iter3_reg[0:0] === 1'b1) ? k_buf_0_val_5_load_reg_1435 : tmp_44_fu_865_p5);

assign exitcond460_i_fu_653_p2 = ((t_V_3_reg_322 == 11'd1282) ? 1'b1 : 1'b0);

assign exitcond461_i_fu_368_p2 = ((t_V_reg_311 == 10'd722) ? 1'b1 : 1'b0);

assign grp_fu_1131_p0 = tmp_244_0_1_cast_reg_1247;

assign grp_fu_1131_p1 = grp_fu_1131_p10;

assign grp_fu_1131_p10 = src_kernel_win_0_va_4_fu_170;

assign grp_fu_1138_p0 = tmp_244_0_2_cast_reg_1252;

assign grp_fu_1138_p1 = grp_fu_1138_p10;

assign grp_fu_1138_p10 = src_kernel_win_0_va_8_reg_1476;

assign grp_fu_1144_p0 = tmp_244_1_cast_reg_1257;

assign grp_fu_1144_p1 = grp_fu_1144_p10;

assign grp_fu_1144_p10 = src_kernel_win_0_va_3_fu_166;

assign grp_fu_1151_p0 = tmp_244_2_cast_reg_1267;

assign grp_fu_1151_p1 = grp_fu_1151_p10;

assign grp_fu_1151_p10 = src_kernel_win_0_va_1_fu_158;

assign grp_fu_1151_p2 = grp_fu_1151_p20;

assign grp_fu_1151_p20 = src_kernel_win_0_va_6_reg_1464_pp0_iter8_reg;

assign grp_fu_1158_p0 = tmp_244_1_2_cast_reg_1262;

assign grp_fu_1158_p1 = grp_fu_1158_p10;

assign grp_fu_1158_p10 = src_kernel_win_0_va_7_reg_1470_pp0_iter7_reg;

assign grp_fu_1164_p0 = tmp_244_2_1_cast_reg_1272;

assign grp_fu_1164_p1 = grp_fu_1164_p10;

assign grp_fu_1164_p10 = src_kernel_win_0_va_9_reg_1501;

assign i_V_fu_374_p2 = (t_V_reg_311 + 10'd1);

assign icmp3_fu_675_p2 = ((tmp_72_fu_665_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_396_p2 = ((tmp_53_fu_386_p4 != 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_659_p2 = (t_V_3_reg_322 + 11'd1);

assign k_buf_0_val_3_address0 = tmp_41_fu_799_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1405;

assign k_buf_0_val_4_address0 = tmp_41_fu_799_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1411_pp0_iter3_reg;

assign k_buf_0_val_5_address0 = tmp_41_fu_799_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1417_pp0_iter3_reg;

assign or_cond_i496_i_fu_618_p2 = (tmp_28_fu_613_p2 & rev_fu_607_p2);

assign or_cond_i_fu_717_p2 = (icmp_reg_1290 & icmp3_fu_675_p2);

assign or_cond_i_i_fu_732_p2 = (tmp_37_fu_727_p2 & rev11_fu_722_p2);

assign p_Result_not_fu_1096_p2 = (p_Result_s_reg_1561 ^ 1'd1);

assign p_Val2_1_fu_1079_p1 = p_Val2_s_reg_1556;

assign p_Val2_s_fu_1058_p2 = ($signed(tmp3_reg_1546) + $signed(tmp4_cast_fu_1055_p1));

assign p_assign_1_fu_703_p2 = (12'd1 - t_V_3_cast_fu_649_p1);

assign p_assign_2_fu_746_p2 = ($signed(12'd2558) - $signed(p_p2_i_i_reg_1373));

assign p_assign_3_fu_751_p3 = ((or_cond_i_i_fu_732_p2[0:0] === 1'b1) ? ImagLoc_x_reg_1361 : p_assign_2_fu_746_p2);

assign p_assign_6_1_fu_462_p2 = ($signed(11'd2046) + $signed(t_V_cast_fu_364_p1));

assign p_assign_6_2_fu_488_p2 = ($signed(11'd2045) + $signed(t_V_cast_fu_364_p1));

assign p_assign_7_fu_438_p2 = (11'd1 - t_V_cast_fu_364_p1);

assign p_assign_8_fu_624_p2 = ($signed(2'd2) - $signed(tmp_60_reg_1321));

assign p_dst_data_stream_V_din = ((brmerge3_i_i_fu_1101_p2[0:0] === 1'b1) ? p_mux_i_i_fu_1106_p3 : p_i_i_fu_1114_p3);

assign p_i_i_fu_1114_p3 = ((underflow_fu_1087_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_1_fu_1079_p1);

assign p_mux_i_i_fu_1106_p3 = ((brmerge2_i_i_fu_1092_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_1_fu_1079_p1);

assign p_not1_i_i_fu_1082_p2 = (tmp_79_reg_1568 ^ 1'd1);

assign p_p2_i497_i_fu_444_p3 = ((tmp_59_fu_430_p3[0:0] === 1'b1) ? p_assign_7_fu_438_p2 : tmp_26_fu_424_p2);

assign p_p2_i497_i_p_assign_8_fu_629_p3 = ((tmp_30_reg_1327[0:0] === 1'b1) ? tmp_60_reg_1321 : p_assign_8_fu_624_p2);

assign p_p2_i_i_cast_fu_738_p1 = p_p2_i_i_reg_1373;

assign p_p2_i_i_fu_709_p3 = ((tmp_74_fu_695_p3[0:0] === 1'b1) ? p_assign_1_fu_703_p2 : ImagLoc_x_fu_681_p2);

assign r_V_0_cast_fu_979_p1 = src_kernel_win_0_va_5_fu_174;

assign r_V_s_fu_983_p2 = (9'd0 - r_V_0_cast_fu_979_p1);

assign rev11_fu_722_p2 = (tmp_73_reg_1367 ^ 1'd1);

assign rev_fu_607_p2 = (tmp_57_fu_600_p3 ^ 1'd1);

assign row_assign_10_0_t_fu_643_p2 = (y_fu_635_p3 ^ 2'd3);

assign row_assign_10_1_t_fu_546_p2 = (tmp_48_fu_538_p3 ^ 2'd3);

assign row_assign_10_2_t_fu_584_p2 = (tmp_52_fu_576_p3 ^ 2'd3);

assign sel_tmp7_fu_768_p2 = (tmp_73_reg_1367 | tmp_37_not_fu_762_p2);

assign sel_tmp8_fu_773_p2 = (tmp_39_fu_741_p2 & sel_tmp7_fu_768_p2);

assign sel_tmp_cast_fu_758_p1 = p_assign_3_fu_751_p3;

assign src_kernel_win_0_va_6_fu_927_p3 = ((tmp_25_reg_1303[0:0] === 1'b1) ? tmp_47_fu_919_p5 : col_buf_0_val_0_0_reg_1440);

assign src_kernel_win_0_va_7_fu_941_p3 = ((tmp_25_reg_1303[0:0] === 1'b1) ? tmp_51_fu_933_p5 : col_buf_0_val_1_0_reg_1448);

assign src_kernel_win_0_va_8_fu_955_p3 = ((tmp_25_reg_1303[0:0] === 1'b1) ? tmp_54_fu_947_p5 : col_buf_0_val_2_0_reg_1456);

assign t_V_3_cast_fu_649_p1 = t_V_3_reg_322;

assign t_V_cast_fu_364_p1 = t_V_reg_311;

assign tmp4_cast_fu_1055_p1 = tmp4_reg_1551;

assign tmp_159_0_not_fu_590_p2 = (tmp_s_reg_1285 ^ 1'd1);

assign tmp_203_1_fu_408_p2 = ((t_V_reg_311 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_244_0_1_cast_fu_340_p1 = $signed(p_kernel_val_0_V_1_read);

assign tmp_244_0_2_cast_fu_344_p1 = $signed(p_kernel_val_0_V_2_read);

assign tmp_244_1_2_cast_fu_352_p1 = p_kernel_val_1_V_2_read;

assign tmp_244_1_cast_fu_348_p1 = $signed(p_kernel_val_1_V_0_read);

assign tmp_244_2_1_cast_fu_360_p1 = p_kernel_val_2_V_1_read;

assign tmp_244_2_cast_fu_356_p1 = $signed(p_kernel_val_2_V_0_read);

assign tmp_24_fu_402_p2 = ((t_V_reg_311 == 10'd1) ? 1'b1 : 1'b0);

assign tmp_25_fu_414_p2 = ((t_V_reg_311 > 10'd720) ? 1'b1 : 1'b0);

assign tmp_26_fu_424_p2 = ($signed(11'd2047) + $signed(t_V_cast_fu_364_p1));

assign tmp_28_fu_613_p2 = (($signed(tmp_26_reg_1315) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign tmp_30_fu_456_p2 = (($signed(p_p2_i497_i_fu_444_p3) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign tmp_34_cast_fu_595_p2 = ($signed(2'd3) + $signed(tmp_56_reg_1310));

assign tmp_37_fu_727_p2 = (($signed(ImagLoc_x_reg_1361) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign tmp_37_not_fu_762_p2 = (tmp_37_fu_727_p2 ^ 1'd1);

assign tmp_39_fu_741_p2 = (($signed(p_p2_i_i_reg_1373) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign tmp_41_fu_799_p1 = $unsigned(col_assign_cast_fu_796_p1);

assign tmp_45_fu_514_p2 = (tmp_56_fu_420_p1 ^ 2'd2);

assign tmp_46_fu_530_p3 = ((tmp_63_fu_476_p3[0:0] === 1'b1) ? tmp_68_fu_520_p2 : tmp_69_fu_526_p1);

assign tmp_48_fu_538_p3 = ((tmp_62_fu_468_p3[0:0] === 1'b1) ? tmp_46_fu_530_p3 : tmp_45_fu_514_p2);

assign tmp_49_fu_552_p2 = (2'd1 + tmp_56_fu_420_p1);

assign tmp_50_fu_568_p3 = ((tmp_66_fu_502_p3[0:0] === 1'b1) ? tmp_70_fu_558_p2 : tmp_71_fu_564_p1);

assign tmp_52_fu_576_p3 = ((tmp_65_fu_494_p3[0:0] === 1'b1) ? tmp_50_fu_568_p3 : tmp_49_fu_552_p2);

assign tmp_53_fu_386_p4 = {{t_V_reg_311[9:1]}};

assign tmp_56_fu_420_p1 = t_V_reg_311[1:0];

assign tmp_57_fu_600_p3 = tmp_26_reg_1315[32'd10];

assign tmp_59_fu_430_p3 = tmp_26_fu_424_p2[32'd10];

assign tmp_60_fu_452_p1 = p_p2_i497_i_fu_444_p3[1:0];

assign tmp_62_fu_468_p3 = p_assign_6_1_fu_462_p2[32'd10];

assign tmp_63_fu_476_p3 = p_assign_6_1_fu_462_p2[32'd10];

assign tmp_64_fu_484_p1 = t_V_reg_311[1:0];

assign tmp_65_fu_494_p3 = p_assign_6_2_fu_488_p2[32'd10];

assign tmp_66_fu_502_p3 = p_assign_6_2_fu_488_p2[32'd10];

assign tmp_67_fu_510_p1 = t_V_reg_311[1:0];

assign tmp_68_fu_520_p2 = ($signed(2'd2) - $signed(tmp_64_fu_484_p1));

assign tmp_69_fu_526_p1 = p_assign_6_1_fu_462_p2[1:0];

assign tmp_70_fu_558_p2 = (tmp_67_fu_510_p1 ^ 2'd3);

assign tmp_71_fu_564_p1 = p_assign_6_2_fu_488_p2[1:0];

assign tmp_72_fu_665_p4 = {{t_V_3_reg_322[10:1]}};

assign tmp_74_fu_695_p3 = ImagLoc_x_fu_681_p2[32'd11];

assign tmp_75_fu_787_p1 = x_fu_779_p3[1:0];

assign tmp_s_fu_380_p2 = ((t_V_reg_311 < 10'd720) ? 1'b1 : 1'b0);

assign underflow_fu_1087_p2 = (p_not1_i_i_fu_1082_p2 & p_Result_s_reg_1561);

assign x_fu_779_p3 = ((sel_tmp8_fu_773_p2[0:0] === 1'b1) ? p_p2_i_i_cast_fu_738_p1 : sel_tmp_cast_fu_758_p1);

assign y_fu_635_p3 = ((or_cond_i496_i_fu_618_p2[0:0] === 1'b1) ? tmp_34_cast_fu_595_p2 : p_p2_i497_i_p_assign_8_fu_629_p3);

always @ (posedge ap_clk) begin
    tmp_244_1_2_cast_reg_1262[11:4] <= 8'b00000000;
    tmp_244_2_1_cast_reg_1272[10:3] <= 8'b00000000;
end

endmodule //Filter2D
