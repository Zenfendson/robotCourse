// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module xFAverageGaussianMas (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_src_mat_V_V_dout,
        p_src_mat_V_V_empty_n,
        p_src_mat_V_V_read,
        p_out_mat_V_V_din,
        p_out_mat_V_V_full_n,
        p_out_mat_V_V_write,
        p_lowthreshold,
        p_highthreshold,
        p_lowthreshold_out_din,
        p_lowthreshold_out_full_n,
        p_lowthreshold_out_write,
        p_highthreshold_out_din,
        p_highthreshold_out_full_n,
        p_highthreshold_out_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_pp0_stage0 = 8'd2;
parameter    ap_ST_fsm_state5 = 8'd4;
parameter    ap_ST_fsm_state6 = 8'd8;
parameter    ap_ST_fsm_state7 = 8'd16;
parameter    ap_ST_fsm_pp1_stage0 = 8'd32;
parameter    ap_ST_fsm_state16 = 8'd64;
parameter    ap_ST_fsm_state17 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] p_src_mat_V_V_dout;
input   p_src_mat_V_V_empty_n;
output   p_src_mat_V_V_read;
output  [7:0] p_out_mat_V_V_din;
input   p_out_mat_V_V_full_n;
output   p_out_mat_V_V_write;
input  [7:0] p_lowthreshold;
input  [7:0] p_highthreshold;
output  [7:0] p_lowthreshold_out_din;
input   p_lowthreshold_out_full_n;
output   p_lowthreshold_out_write;
output  [7:0] p_highthreshold_out_din;
input   p_highthreshold_out_full_n;
output   p_highthreshold_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg p_src_mat_V_V_read;
reg[7:0] p_out_mat_V_V_din;
reg p_out_mat_V_V_write;
reg p_lowthreshold_out_write;
reg p_highthreshold_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    p_src_mat_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond1_i_i_reg_934;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_i_i_i_reg_999;
reg   [0:0] tmp_85_i_i_reg_995;
reg    p_out_mat_V_V_blk_n;
reg    ap_enable_reg_pp1_iter7;
reg   [0:0] tmp_112_i_i_reg_1015;
reg   [0:0] tmp_112_i_i_reg_1015_pp1_iter6_reg;
wire    ap_CS_fsm_state17;
reg    p_lowthreshold_out_blk_n;
reg    p_highthreshold_out_blk_n;
reg   [10:0] t_V_reg_328;
reg   [10:0] t_V_2_reg_363;
reg   [10:0] t_V_2_reg_363_pp1_iter1_reg;
wire    ap_block_state8_pp1_stage0_iter0;
reg    ap_predicate_op88_read_state9;
reg    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_state10_pp1_stage0_iter2;
wire    ap_block_state11_pp1_stage0_iter3;
wire    ap_block_state12_pp1_stage0_iter4;
wire    ap_block_state13_pp1_stage0_iter5;
wire    ap_block_state14_pp1_stage0_iter6;
reg    ap_block_state15_pp1_stage0_iter7;
reg    ap_block_pp1_stage0_11001;
reg   [7:0] src_buf3_V_0_i_i_reg_375;
reg   [7:0] src_buf2_0_V_reg_387;
reg   [7:0] src_buf2_0_V_reg_387_pp1_iter6_reg;
reg   [7:0] src_buf2_V_0_i_i_reg_399;
reg   [7:0] src_buf3_0_V_reg_412;
reg   [7:0] src_buf1_0_V_reg_425;
reg   [7:0] src_buf1_V_0_i_i_reg_437;
reg   [7:0] reg_465;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] exitcond1_i_i_fu_472_p2;
reg   [0:0] exitcond1_i_i_reg_934_pp0_iter1_reg;
wire   [10:0] col_V_fu_478_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] tmp_i_i_fu_484_p1;
reg   [63:0] tmp_i_i_reg_943;
reg   [63:0] tmp_i_i_reg_943_pp0_iter1_reg;
wire   [0:0] tmp_i_i_31_fu_495_p2;
reg   [0:0] tmp_i_i_31_reg_969;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond_i_i_fu_489_p2;
wire   [0:0] tmp_83_i_i_fu_501_p2;
reg   [0:0] tmp_83_i_i_reg_975;
wire   [1:0] p_0385_3_i_i_fu_565_p3;
reg   [1:0] p_0385_3_i_i_reg_980;
wire    ap_CS_fsm_state7;
wire   [1:0] p_0389_3_i_i_fu_581_p3;
reg   [1:0] p_0389_3_i_i_reg_985;
wire   [1:0] p_0395_3_i_i_fu_597_p3;
reg   [1:0] p_0395_3_i_i_reg_990;
wire   [0:0] tmp_85_i_i_fu_605_p2;
wire   [0:0] exitcond_i_i_i_fu_626_p2;
reg   [0:0] exitcond_i_i_i_reg_999_pp1_iter1_reg;
reg   [0:0] exitcond_i_i_i_reg_999_pp1_iter2_reg;
reg   [0:0] exitcond_i_i_i_reg_999_pp1_iter3_reg;
reg   [0:0] exitcond_i_i_i_reg_999_pp1_iter4_reg;
reg   [0:0] exitcond_i_i_i_reg_999_pp1_iter5_reg;
reg   [0:0] exitcond_i_i_i_reg_999_pp1_iter6_reg;
wire   [10:0] col_V_4_fu_632_p2;
reg   [10:0] col_V_4_reg_1003;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] tmp_97_i_i_fu_638_p1;
reg   [63:0] tmp_97_i_i_reg_1008;
wire   [0:0] tmp_112_i_i_fu_648_p2;
reg   [0:0] tmp_112_i_i_reg_1015_pp1_iter3_reg;
reg   [0:0] tmp_112_i_i_reg_1015_pp1_iter4_reg;
reg   [0:0] tmp_112_i_i_reg_1015_pp1_iter5_reg;
wire   [7:0] buf_0_V_q0;
reg   [7:0] buf_0_V_load_reg_1034;
reg    ap_enable_reg_pp1_iter4;
wire   [7:0] buf_1_V_q0;
reg   [7:0] buf_1_V_load_reg_1041;
wire   [7:0] buf_2_V_q0;
reg   [7:0] buf_2_V_load_reg_1048;
wire   [7:0] src_buf1_2_V_xfExtractPixels_1_fu_450_ap_return;
reg   [7:0] src_buf1_2_V_reg_1055;
reg    ap_enable_reg_pp1_iter5;
wire   [7:0] src_buf2_2_V_xfExtractPixels_1_fu_455_ap_return;
reg   [7:0] src_buf2_2_V_reg_1060;
wire   [7:0] src_buf3_1_V_xfExtractPixels_1_fu_460_ap_return;
reg   [7:0] src_buf3_1_V_reg_1066;
wire   [8:0] tmp_102_i_i_fu_697_p2;
reg   [8:0] tmp_102_i_i_reg_1071;
wire   [8:0] tmp_fu_703_p2;
reg   [8:0] tmp_reg_1076;
wire   [9:0] tmp_104_i_i_fu_756_p2;
reg   [9:0] tmp_104_i_i_reg_1081;
wire   [10:0] tmp4_fu_778_p2;
reg   [10:0] tmp4_reg_1086;
wire   [9:0] tmp_88_i_i_fu_851_p2;
reg   [9:0] tmp_88_i_i_reg_1091;
wire    ap_CS_fsm_state16;
wire   [10:0] tmp_94_i_i_fu_873_p2;
reg   [10:0] tmp_94_i_i_reg_1096;
wire   [12:0] row_ind_V_fu_879_p2;
reg   [12:0] row_ind_V_reg_1101;
wire   [9:0] row_V_fu_885_p2;
reg   [9:0] row_V_reg_1107;
wire   [12:0] p_i_i_33_fu_927_p3;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter6;
reg    ap_condition_pp1_exit_iter5_state13;
wire   [10:0] buf_0_V_address0;
reg    buf_0_V_ce0;
reg   [10:0] buf_0_V_address1;
reg    buf_0_V_ce1;
reg    buf_0_V_we1;
reg   [7:0] buf_0_V_d1;
wire   [10:0] buf_1_V_address0;
reg    buf_1_V_ce0;
reg   [10:0] buf_1_V_address1;
reg    buf_1_V_ce1;
reg    buf_1_V_we1;
reg   [7:0] buf_1_V_d1;
wire   [10:0] buf_2_V_address0;
reg    buf_2_V_ce0;
reg   [10:0] buf_2_V_address1;
reg    buf_2_V_ce1;
reg    buf_2_V_we1;
reg   [7:0] buf_2_V_d1;
wire    src_buf1_2_V_xfExtractPixels_1_fu_450_ap_ready;
wire    src_buf2_2_V_xfExtractPixels_1_fu_455_ap_ready;
wire    src_buf3_1_V_xfExtractPixels_1_fu_460_ap_ready;
reg   [12:0] t_V_9_reg_339;
wire    ap_CS_fsm_state5;
reg   [9:0] t_V_1_reg_351;
reg   [10:0] ap_phi_mux_t_V_2_phi_fu_367_p4;
reg   [7:0] ap_phi_mux_src_buf3_V_0_i_i_phi_fu_379_p4;
reg   [7:0] ap_phi_mux_src_buf2_V_0_i_i_phi_fu_403_p4;
reg   [7:0] ap_phi_mux_src_buf1_V_0_i_i_phi_fu_441_p4;
wire   [7:0] buf0_V_fu_654_p5;
wire   [7:0] buf1_V_fu_663_p5;
wire   [7:0] buf2_V_fu_672_p5;
wire   [10:0] buf_0_V_addr_5_gep_fu_286_p3;
wire   [10:0] buf_1_V_addr_4_gep_fu_292_p3;
wire   [10:0] buf_2_V_addr_gep_fu_298_p3;
reg    ap_block_pp1_stage0_01001;
reg   [1:0] p_7_i_i_fu_168;
reg   [1:0] p_6_i_i_fu_172;
reg   [1:0] p_5_i_i_fu_176;
wire   [0:0] tmp_84_i_i_fu_516_p2;
wire   [0:0] sel_tmp1_fu_546_p2;
wire   [0:0] sel_tmp2_fu_551_p2;
wire   [0:0] tmp_s_fu_560_p2;
wire   [1:0] sel_tmp_fu_556_p1;
wire   [1:0] p_i_i_fu_522_p3;
wire   [1:0] sel_tmp4_fu_573_p3;
wire   [1:0] p_3_i_i_fu_530_p3;
wire   [1:0] sel_tmp8_fu_589_p3;
wire   [1:0] p_4_i_i_fu_538_p3;
wire   [8:0] tmp_98_cast_i_i_fu_681_p1;
wire   [8:0] tmp_99_cast_i_i_fu_685_p1;
wire   [8:0] tmp_101_cast_i_i_cas_fu_693_p1;
wire   [8:0] tmp_100_cast_i_i_cas_fu_689_p1;
wire   [9:0] tmp_102_cast_i_i_fu_709_p1;
wire   [9:0] tmp_cast_fu_712_p1;
wire   [8:0] tmp_73_cast_i_i_fu_721_p1;
wire   [8:0] tmp_74_cast_i_i_fu_725_p1;
wire   [8:0] tmp_76_i_i_fu_732_p2;
wire   [8:0] tmp_78_cast_i_i_cast_fu_742_p1;
wire   [8:0] tmp_75_cast_i_i_cast_fu_729_p1;
wire   [8:0] tmp3_fu_746_p2;
wire   [9:0] tmp_76_cast_i_i_fu_738_p1;
wire   [9:0] tmp12_cast_fu_752_p1;
wire   [9:0] A0_1_fu_715_p2;
wire   [9:0] A2_1_fu_762_p3;
wire   [10:0] tmp_107_cast_i_i_cas_fu_770_p1;
wire   [10:0] tmp_109_cast_i_i_cas_fu_774_p1;
wire   [10:0] A1_1_fu_784_p3;
wire   [11:0] tmp_108_cast_i_i_fu_791_p1;
wire   [11:0] tmp13_cast_fu_795_p1;
wire   [11:0] tmp_111_i_i_fu_798_p2;
wire   [8:0] tmp_87_cast_i_i_fu_819_p1;
wire   [8:0] tmp_86_cast_i_i_fu_815_p1;
wire   [8:0] tmp_65_cast_i_i_fu_829_p1;
wire   [8:0] tmp_66_cast_i_i_fu_833_p1;
wire   [8:0] tmp_67_i_i_fu_837_p2;
wire   [9:0] tmp_68_cast_i_i_fu_847_p1;
wire   [9:0] tmp_67_cast_i_i_fu_843_p1;
wire   [8:0] A0_fu_823_p2;
wire   [9:0] A2_fu_857_p3;
wire   [10:0] tmp_91_cast_i_i_fu_865_p1;
wire   [10:0] tmp_93_cast_i_i_fu_869_p1;
wire   [10:0] A1_fu_891_p3;
wire   [11:0] tmp_94_cast_i_i_fu_902_p1;
wire   [11:0] tmp_92_cast_i_i_fu_898_p1;
wire   [11:0] tmp_95_i_i_fu_905_p2;
wire   [0:0] tmp_96_i_i_fu_922_p2;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_839;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
end

xFAverageGaussianbkb #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_V_address0),
    .ce0(buf_0_V_ce0),
    .q0(buf_0_V_q0),
    .address1(buf_0_V_address1),
    .ce1(buf_0_V_ce1),
    .we1(buf_0_V_we1),
    .d1(buf_0_V_d1)
);

xFAverageGaussianbkb #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_V_address0),
    .ce0(buf_1_V_ce0),
    .q0(buf_1_V_q0),
    .address1(buf_1_V_address1),
    .ce1(buf_1_V_ce1),
    .we1(buf_1_V_we1),
    .d1(buf_1_V_d1)
);

xFAverageGaussianbkb #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_V_address0),
    .ce0(buf_2_V_ce0),
    .q0(buf_2_V_q0),
    .address1(buf_2_V_address1),
    .ce1(buf_2_V_ce1),
    .we1(buf_2_V_we1),
    .d1(buf_2_V_d1)
);

xfExtractPixels_1 src_buf1_2_V_xfExtractPixels_1_fu_450(
    .ap_ready(src_buf1_2_V_xfExtractPixels_1_fu_450_ap_ready),
    .val1_V_read(buf0_V_fu_654_p5),
    .ap_return(src_buf1_2_V_xfExtractPixels_1_fu_450_ap_return)
);

xfExtractPixels_1 src_buf2_2_V_xfExtractPixels_1_fu_455(
    .ap_ready(src_buf2_2_V_xfExtractPixels_1_fu_455_ap_ready),
    .val1_V_read(buf1_V_fu_663_p5),
    .ap_return(src_buf2_2_V_xfExtractPixels_1_fu_455_ap_return)
);

xfExtractPixels_1 src_buf3_1_V_xfExtractPixels_1_fu_460(
    .ap_ready(src_buf3_1_V_xfExtractPixels_1_fu_460_ap_ready),
    .val1_V_read(buf2_V_fu_672_p5),
    .ap_return(src_buf3_1_V_xfExtractPixels_1_fu_460_ap_return)
);

Canny_accel_mux_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Canny_accel_mux_3eOg_U14(
    .din0(buf_0_V_load_reg_1034),
    .din1(buf_1_V_load_reg_1041),
    .din2(buf_2_V_load_reg_1048),
    .din3(p_0385_3_i_i_reg_980),
    .dout(buf0_V_fu_654_p5)
);

Canny_accel_mux_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Canny_accel_mux_3eOg_U15(
    .din0(buf_0_V_load_reg_1034),
    .din1(buf_1_V_load_reg_1041),
    .din2(buf_2_V_load_reg_1048),
    .din3(p_0389_3_i_i_reg_985),
    .dout(buf1_V_fu_663_p5)
);

Canny_accel_mux_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Canny_accel_mux_3eOg_U16(
    .din0(buf_0_V_load_reg_1034),
    .din1(buf_1_V_load_reg_1041),
    .din2(buf_2_V_load_reg_1048),
    .din3(p_0395_3_i_i_reg_990),
    .dout(buf2_V_fu_672_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond_i_i_fu_489_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((p_highthreshold_out_full_n == 1'b0) | (p_lowthreshold_out_full_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((p_highthreshold_out_full_n == 1'b0) | (p_lowthreshold_out_full_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((exitcond_i_i_i_fu_626_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter5_state13)) begin
                ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter4;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_999_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf1_0_V_reg_425 <= src_buf1_2_V_reg_1055;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        src_buf1_0_V_reg_425 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_999_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf1_V_0_i_i_reg_437 <= src_buf1_0_V_reg_425;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        src_buf1_V_0_i_i_reg_437 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_999_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf2_0_V_reg_387 <= src_buf2_2_V_reg_1060;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        src_buf2_0_V_reg_387 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_999_pp1_iter6_reg == 1'd0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf2_V_0_i_i_reg_399 <= src_buf2_0_V_reg_387_pp1_iter6_reg;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        src_buf2_V_0_i_i_reg_399 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_999_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf3_0_V_reg_412 <= src_buf3_1_V_reg_1066;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        src_buf3_0_V_reg_412 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_999_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf3_V_0_i_i_reg_375 <= src_buf3_0_V_reg_412;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        src_buf3_V_0_i_i_reg_375 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        t_V_1_reg_351 <= 10'd1;
    end else if (((p_out_mat_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        t_V_1_reg_351 <= row_V_reg_1107;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_999 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        t_V_2_reg_363 <= col_V_4_reg_1003;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_V_2_reg_363 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        t_V_9_reg_339 <= 13'd2;
    end else if (((p_out_mat_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        t_V_9_reg_339 <= p_i_i_33_fu_927_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_i_fu_472_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_reg_328 <= col_V_fu_478_p2;
    end else if ((~((p_highthreshold_out_full_n == 1'b0) | (p_lowthreshold_out_full_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_328 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_999_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_0_V_load_reg_1034 <= buf_0_V_q0;
        buf_1_V_load_reg_1041 <= buf_1_V_q0;
        buf_2_V_load_reg_1048 <= buf_2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        col_V_4_reg_1003 <= col_V_4_fu_632_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond1_i_i_reg_934 <= exitcond1_i_i_fu_472_p2;
        exitcond1_i_i_reg_934_pp0_iter1_reg <= exitcond1_i_i_reg_934;
        tmp_i_i_reg_943_pp0_iter1_reg[10 : 0] <= tmp_i_i_reg_943[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond_i_i_i_reg_999 <= exitcond_i_i_i_fu_626_p2;
        exitcond_i_i_i_reg_999_pp1_iter1_reg <= exitcond_i_i_i_reg_999;
        t_V_2_reg_363_pp1_iter1_reg <= t_V_2_reg_363;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond_i_i_i_reg_999_pp1_iter2_reg <= exitcond_i_i_i_reg_999_pp1_iter1_reg;
        exitcond_i_i_i_reg_999_pp1_iter3_reg <= exitcond_i_i_i_reg_999_pp1_iter2_reg;
        exitcond_i_i_i_reg_999_pp1_iter4_reg <= exitcond_i_i_i_reg_999_pp1_iter3_reg;
        exitcond_i_i_i_reg_999_pp1_iter5_reg <= exitcond_i_i_i_reg_999_pp1_iter4_reg;
        exitcond_i_i_i_reg_999_pp1_iter6_reg <= exitcond_i_i_i_reg_999_pp1_iter5_reg;
        src_buf2_0_V_reg_387_pp1_iter6_reg <= src_buf2_0_V_reg_387;
        tmp_112_i_i_reg_1015_pp1_iter3_reg <= tmp_112_i_i_reg_1015;
        tmp_112_i_i_reg_1015_pp1_iter4_reg <= tmp_112_i_i_reg_1015_pp1_iter3_reg;
        tmp_112_i_i_reg_1015_pp1_iter5_reg <= tmp_112_i_i_reg_1015_pp1_iter4_reg;
        tmp_112_i_i_reg_1015_pp1_iter6_reg <= tmp_112_i_i_reg_1015_pp1_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_0385_3_i_i_reg_980 <= p_0385_3_i_i_fu_565_p3;
        p_0389_3_i_i_reg_985 <= p_0389_3_i_i_fu_581_p3;
        p_0395_3_i_i_reg_990 <= p_0395_3_i_i_fu_597_p3;
        p_5_i_i_fu_176 <= p_0385_3_i_i_fu_565_p3;
        p_6_i_i_fu_172 <= p_0389_3_i_i_fu_581_p3;
        p_7_i_i_fu_168 <= p_0395_3_i_i_fu_597_p3;
        tmp_85_i_i_reg_995 <= tmp_85_i_i_fu_605_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op88_read_state9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((exitcond1_i_i_reg_934 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_465 <= p_src_mat_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        row_V_reg_1107 <= row_V_fu_885_p2;
        row_ind_V_reg_1101 <= row_ind_V_fu_879_p2;
        tmp_88_i_i_reg_1091 <= tmp_88_i_i_fu_851_p2;
        tmp_94_i_i_reg_1096 <= tmp_94_i_i_fu_873_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_999_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf1_2_V_reg_1055 <= src_buf1_2_V_xfExtractPixels_1_fu_450_ap_return;
        src_buf2_2_V_reg_1060 <= src_buf2_2_V_xfExtractPixels_1_fu_455_ap_return;
        src_buf3_1_V_reg_1066 <= src_buf3_1_V_xfExtractPixels_1_fu_460_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_999_pp1_iter5_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp4_reg_1086 <= tmp4_fu_778_p2;
        tmp_104_i_i_reg_1081 <= tmp_104_i_i_fu_756_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_999_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_102_i_i_reg_1071 <= tmp_102_i_i_fu_697_p2;
        tmp_reg_1076 <= tmp_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_112_i_i_reg_1015 <= tmp_112_i_i_fu_648_p2;
        tmp_97_i_i_reg_1008[10 : 0] <= tmp_97_i_i_fu_638_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_fu_489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_83_i_i_reg_975 <= tmp_83_i_i_fu_501_p2;
        tmp_i_i_31_reg_969 <= tmp_i_i_31_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_i_fu_472_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_i_reg_943[10 : 0] <= tmp_i_i_fu_484_p1[10 : 0];
    end
end

always @ (*) begin
    if ((exitcond1_i_i_fu_472_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b0))) begin
        ap_condition_pp1_exit_iter5_state13 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter5_state13 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_i_fu_489_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_i_i_i_reg_999_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        ap_phi_mux_src_buf1_V_0_i_i_phi_fu_441_p4 = src_buf1_0_V_reg_425;
    end else begin
        ap_phi_mux_src_buf1_V_0_i_i_phi_fu_441_p4 = src_buf1_V_0_i_i_reg_437;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_i_i_i_reg_999_pp1_iter6_reg == 1'd0) & (ap_enable_reg_pp1_iter7 == 1'b1))) begin
        ap_phi_mux_src_buf2_V_0_i_i_phi_fu_403_p4 = src_buf2_0_V_reg_387_pp1_iter6_reg;
    end else begin
        ap_phi_mux_src_buf2_V_0_i_i_phi_fu_403_p4 = src_buf2_V_0_i_i_reg_399;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_i_i_i_reg_999_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        ap_phi_mux_src_buf3_V_0_i_i_phi_fu_379_p4 = src_buf3_0_V_reg_412;
    end else begin
        ap_phi_mux_src_buf3_V_0_i_i_phi_fu_379_p4 = src_buf3_V_0_i_i_reg_375;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_i_i_i_reg_999 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_t_V_2_phi_fu_367_p4 = col_V_4_reg_1003;
    end else begin
        ap_phi_mux_t_V_2_phi_fu_367_p4 = t_V_2_reg_363;
    end
end

always @ (*) begin
    if (((tmp_85_i_i_reg_995 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_0_V_address1 = buf_0_V_addr_5_gep_fu_286_p3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (tmp_85_i_i_reg_995 == 1'd0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_0_V_address1 = tmp_97_i_i_fu_638_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_0_V_address1 = tmp_i_i_fu_484_p1;
    end else begin
        buf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_85_i_i_reg_995 == 1'd1) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_85_i_i_reg_995 == 1'd0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_0_V_ce1 = 1'b1;
    end else begin
        buf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_85_i_i_reg_995 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_0_V_d1 = reg_465;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (tmp_85_i_i_reg_995 == 1'd0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        buf_0_V_d1 = 8'd0;
    end else begin
        buf_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_85_i_i_reg_995 == 1'd1) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((exitcond1_i_i_fu_472_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_85_i_i_reg_995 == 1'd0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_0_V_we1 = 1'b1;
    end else begin
        buf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_85_i_i_reg_995 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd1) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_1_V_address1 = buf_1_V_addr_4_gep_fu_292_p3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (tmp_85_i_i_reg_995 == 1'd0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd1) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_1_V_address1 = tmp_97_i_i_fu_638_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_1_V_address1 = tmp_i_i_reg_943_pp0_iter1_reg;
    end else begin
        buf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_85_i_i_reg_995 == 1'd1) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_85_i_i_reg_995 == 1'd0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_1_V_ce1 = 1'b1;
    end else begin
        buf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_85_i_i_reg_995 == 1'd0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd1) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_1_V_d1 = 8'd0;
    end else if ((((tmp_85_i_i_reg_995 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd1) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        buf_1_V_d1 = reg_465;
    end else begin
        buf_1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_85_i_i_reg_995 == 1'd1) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((exitcond1_i_i_reg_934_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_85_i_i_reg_995 == 1'd0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (p_0395_3_i_i_reg_990 == 2'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_1_V_we1 = 1'b1;
    end else begin
        buf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_839)) begin
        if ((tmp_85_i_i_reg_995 == 1'd1)) begin
            buf_2_V_address1 = buf_2_V_addr_gep_fu_298_p3;
        end else if ((tmp_85_i_i_reg_995 == 1'd0)) begin
            buf_2_V_address1 = tmp_97_i_i_fu_638_p1;
        end else begin
            buf_2_V_address1 = 'bx;
        end
    end else begin
        buf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(p_0395_3_i_i_reg_990 == 2'd1) & ~(p_0395_3_i_i_reg_990 == 2'd0) & (tmp_85_i_i_reg_995 == 1'd1) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | (~(p_0395_3_i_i_reg_990 == 2'd1) & ~(p_0395_3_i_i_reg_990 == 2'd0) & (tmp_85_i_i_reg_995 == 1'd0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_2_V_ce1 = 1'b1;
    end else begin
        buf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_839)) begin
        if ((tmp_85_i_i_reg_995 == 1'd1)) begin
            buf_2_V_d1 = reg_465;
        end else if ((tmp_85_i_i_reg_995 == 1'd0)) begin
            buf_2_V_d1 = 8'd0;
        end else begin
            buf_2_V_d1 = 'bx;
        end
    end else begin
        buf_2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(p_0395_3_i_i_reg_990 == 2'd1) & ~(p_0395_3_i_i_reg_990 == 2'd0) & (tmp_85_i_i_reg_995 == 1'd1) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | (~(p_0395_3_i_i_reg_990 == 2'd1) & ~(p_0395_3_i_i_reg_990 == 2'd0) & (tmp_85_i_i_reg_995 == 1'd0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_2_V_we1 = 1'b1;
    end else begin
        buf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_i_fu_489_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_highthreshold_out_blk_n = p_highthreshold_out_full_n;
    end else begin
        p_highthreshold_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_highthreshold_out_full_n == 1'b0) | (p_lowthreshold_out_full_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_highthreshold_out_write = 1'b1;
    end else begin
        p_highthreshold_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_lowthreshold_out_blk_n = p_lowthreshold_out_full_n;
    end else begin
        p_lowthreshold_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_highthreshold_out_full_n == 1'b0) | (p_lowthreshold_out_full_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_lowthreshold_out_write = 1'b1;
    end else begin
        p_lowthreshold_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp1_stage0) & (tmp_112_i_i_reg_1015_pp1_iter6_reg == 1'd0) & (ap_enable_reg_pp1_iter7 == 1'b1)))) begin
        p_out_mat_V_V_blk_n = p_out_mat_V_V_full_n;
    end else begin
        p_out_mat_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((p_out_mat_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        p_out_mat_V_V_din = {{tmp_95_i_i_fu_905_p2[11:4]}};
    end else if (((tmp_112_i_i_reg_1015_pp1_iter6_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter7 == 1'b1))) begin
        p_out_mat_V_V_din = {{tmp_111_i_i_fu_798_p2[11:4]}};
    end else begin
        p_out_mat_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((p_out_mat_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((tmp_112_i_i_reg_1015_pp1_iter6_reg == 1'd0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        p_out_mat_V_V_write = 1'b1;
    end else begin
        p_out_mat_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_85_i_i_reg_995 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (exitcond_i_i_i_reg_999 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond1_i_i_reg_934 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_mat_V_V_blk_n = p_src_mat_V_V_empty_n;
    end else begin
        p_src_mat_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op88_read_state9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((exitcond1_i_i_reg_934 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_mat_V_V_read = 1'b1;
    end else begin
        p_src_mat_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_highthreshold_out_full_n == 1'b0) | (p_lowthreshold_out_full_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond1_i_i_fu_472_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((exitcond1_i_i_fu_472_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((exitcond_i_i_fu_489_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter6 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1)) & ~((ap_enable_reg_pp1_iter6 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter7 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter6 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((ap_enable_reg_pp1_iter6 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter7 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((p_out_mat_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A0_1_fu_715_p2 = (tmp_102_cast_i_i_fu_709_p1 + tmp_cast_fu_712_p1);

assign A0_fu_823_p2 = (tmp_87_cast_i_i_fu_819_p1 + tmp_86_cast_i_i_fu_815_p1);

assign A1_1_fu_784_p3 = {{tmp_104_i_i_reg_1081}, {1'd0}};

assign A1_fu_891_p3 = {{tmp_88_i_i_reg_1091}, {1'd0}};

assign A2_1_fu_762_p3 = {{src_buf2_0_V_reg_387}, {2'd0}};

assign A2_fu_857_p3 = {{src_buf2_0_V_reg_387}, {2'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((exitcond1_i_i_reg_934 == 1'd0) & (p_src_mat_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((exitcond1_i_i_reg_934 == 1'd0) & (p_src_mat_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((p_src_mat_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op88_read_state9 == 1'b1)) | ((tmp_112_i_i_reg_1015_pp1_iter6_reg == 1'd0) & (p_out_mat_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((p_src_mat_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op88_read_state9 == 1'b1)) | ((tmp_112_i_i_reg_1015_pp1_iter6_reg == 1'd0) & (p_out_mat_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((p_src_mat_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op88_read_state9 == 1'b1)) | ((tmp_112_i_i_reg_1015_pp1_iter6_reg == 1'd0) & (p_out_mat_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((p_highthreshold_out_full_n == 1'b0) | (p_lowthreshold_out_full_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp1_stage0_iter7 = ((tmp_112_i_i_reg_1015_pp1_iter6_reg == 1'd0) & (p_out_mat_V_V_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((exitcond1_i_i_reg_934 == 1'd0) & (p_src_mat_V_V_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp1_stage0_iter1 = ((p_src_mat_V_V_empty_n == 1'b0) & (ap_predicate_op88_read_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_839 = (~(p_0395_3_i_i_reg_990 == 2'd1) & ~(p_0395_3_i_i_reg_990 == 2'd0) & (1'b0 == ap_block_pp1_stage0) & (exitcond_i_i_i_reg_999_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_predicate_op88_read_state9 = ((tmp_85_i_i_reg_995 == 1'd1) & (exitcond_i_i_i_reg_999 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign buf_0_V_addr_5_gep_fu_286_p3 = tmp_97_i_i_fu_638_p1;

assign buf_0_V_address0 = tmp_97_i_i_reg_1008;

assign buf_1_V_addr_4_gep_fu_292_p3 = tmp_97_i_i_fu_638_p1;

assign buf_1_V_address0 = tmp_97_i_i_reg_1008;

assign buf_2_V_addr_gep_fu_298_p3 = tmp_97_i_i_fu_638_p1;

assign buf_2_V_address0 = tmp_97_i_i_reg_1008;

assign col_V_4_fu_632_p2 = (ap_phi_mux_t_V_2_phi_fu_367_p4 + 11'd1);

assign col_V_fu_478_p2 = (t_V_reg_328 + 11'd1);

assign exitcond1_i_i_fu_472_p2 = ((t_V_reg_328 == 11'd1280) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_489_p2 = ((t_V_1_reg_351 == 10'd721) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_fu_626_p2 = ((ap_phi_mux_t_V_2_phi_fu_367_p4 == 11'd1280) ? 1'b1 : 1'b0);

assign p_0385_3_i_i_fu_565_p3 = ((tmp_s_fu_560_p2[0:0] === 1'b1) ? sel_tmp_fu_556_p1 : p_i_i_fu_522_p3);

assign p_0389_3_i_i_fu_581_p3 = ((tmp_s_fu_560_p2[0:0] === 1'b1) ? sel_tmp4_fu_573_p3 : p_3_i_i_fu_530_p3);

assign p_0395_3_i_i_fu_597_p3 = ((tmp_s_fu_560_p2[0:0] === 1'b1) ? sel_tmp8_fu_589_p3 : p_4_i_i_fu_538_p3);

assign p_3_i_i_fu_530_p3 = ((tmp_84_i_i_fu_516_p2[0:0] === 1'b1) ? 2'd0 : p_6_i_i_fu_172);

assign p_4_i_i_fu_538_p3 = ((tmp_84_i_i_fu_516_p2[0:0] === 1'b1) ? 2'd1 : p_7_i_i_fu_168);

assign p_highthreshold_out_din = p_highthreshold;

assign p_i_i_33_fu_927_p3 = ((tmp_96_i_i_fu_922_p2[0:0] === 1'b1) ? 13'd0 : row_ind_V_reg_1101);

assign p_i_i_fu_522_p3 = ((tmp_84_i_i_fu_516_p2[0:0] === 1'b1) ? 2'd2 : p_5_i_i_fu_176);

assign p_lowthreshold_out_din = p_lowthreshold;

assign row_V_fu_885_p2 = (t_V_1_reg_351 + 10'd1);

assign row_ind_V_fu_879_p2 = (t_V_9_reg_339 + 13'd1);

assign sel_tmp1_fu_546_p2 = (tmp_i_i_31_reg_969 ^ 1'd1);

assign sel_tmp2_fu_551_p2 = (tmp_83_i_i_reg_975 & sel_tmp1_fu_546_p2);

assign sel_tmp4_fu_573_p3 = ((sel_tmp2_fu_551_p2[0:0] === 1'b1) ? 2'd2 : 2'd1);

assign sel_tmp8_fu_589_p3 = ((sel_tmp2_fu_551_p2[0:0] === 1'b1) ? 2'd0 : 2'd2);

assign sel_tmp_fu_556_p1 = sel_tmp2_fu_551_p2;

assign start_out = real_start;

assign tmp12_cast_fu_752_p1 = tmp3_fu_746_p2;

assign tmp13_cast_fu_795_p1 = tmp4_reg_1086;

assign tmp3_fu_746_p2 = (tmp_78_cast_i_i_cast_fu_742_p1 + tmp_75_cast_i_i_cast_fu_729_p1);

assign tmp4_fu_778_p2 = (tmp_107_cast_i_i_cas_fu_770_p1 + tmp_109_cast_i_i_cas_fu_774_p1);

assign tmp_100_cast_i_i_cas_fu_689_p1 = ap_phi_mux_src_buf3_V_0_i_i_phi_fu_379_p4;

assign tmp_101_cast_i_i_cas_fu_693_p1 = src_buf3_1_V_xfExtractPixels_1_fu_460_ap_return;

assign tmp_102_cast_i_i_fu_709_p1 = tmp_102_i_i_reg_1071;

assign tmp_102_i_i_fu_697_p2 = (tmp_98_cast_i_i_fu_681_p1 + tmp_99_cast_i_i_fu_685_p1);

assign tmp_104_i_i_fu_756_p2 = (tmp_76_cast_i_i_fu_738_p1 + tmp12_cast_fu_752_p1);

assign tmp_107_cast_i_i_cas_fu_770_p1 = A0_1_fu_715_p2;

assign tmp_108_cast_i_i_fu_791_p1 = A1_1_fu_784_p3;

assign tmp_109_cast_i_i_cas_fu_774_p1 = A2_1_fu_762_p3;

assign tmp_111_i_i_fu_798_p2 = (tmp_108_cast_i_i_fu_791_p1 + tmp13_cast_fu_795_p1);

assign tmp_112_i_i_fu_648_p2 = ((t_V_2_reg_363_pp1_iter1_reg == 11'd0) ? 1'b1 : 1'b0);

assign tmp_65_cast_i_i_fu_829_p1 = src_buf1_0_V_reg_425;

assign tmp_66_cast_i_i_fu_833_p1 = src_buf2_V_0_i_i_reg_399;

assign tmp_67_cast_i_i_fu_843_p1 = tmp_67_i_i_fu_837_p2;

assign tmp_67_i_i_fu_837_p2 = (tmp_65_cast_i_i_fu_829_p1 + tmp_66_cast_i_i_fu_833_p1);

assign tmp_68_cast_i_i_fu_847_p1 = src_buf3_0_V_reg_412;

assign tmp_73_cast_i_i_fu_721_p1 = ap_phi_mux_src_buf2_V_0_i_i_phi_fu_403_p4;

assign tmp_74_cast_i_i_fu_725_p1 = src_buf1_0_V_reg_425;

assign tmp_75_cast_i_i_cast_fu_729_p1 = src_buf2_2_V_reg_1060;

assign tmp_76_cast_i_i_fu_738_p1 = tmp_76_i_i_fu_732_p2;

assign tmp_76_i_i_fu_732_p2 = (tmp_73_cast_i_i_fu_721_p1 + tmp_74_cast_i_i_fu_725_p1);

assign tmp_78_cast_i_i_cast_fu_742_p1 = src_buf3_0_V_reg_412;

assign tmp_83_i_i_fu_501_p2 = ((t_V_9_reg_339 == 13'd0) ? 1'b1 : 1'b0);

assign tmp_84_i_i_fu_516_p2 = ((t_V_9_reg_339 == 13'd1) ? 1'b1 : 1'b0);

assign tmp_85_i_i_fu_605_p2 = ((t_V_1_reg_351 < 10'd720) ? 1'b1 : 1'b0);

assign tmp_86_cast_i_i_fu_815_p1 = src_buf1_V_0_i_i_reg_437;

assign tmp_87_cast_i_i_fu_819_p1 = src_buf3_V_0_i_i_reg_375;

assign tmp_88_i_i_fu_851_p2 = (tmp_68_cast_i_i_fu_847_p1 + tmp_67_cast_i_i_fu_843_p1);

assign tmp_91_cast_i_i_fu_865_p1 = A0_fu_823_p2;

assign tmp_92_cast_i_i_fu_898_p1 = A1_fu_891_p3;

assign tmp_93_cast_i_i_fu_869_p1 = A2_fu_857_p3;

assign tmp_94_cast_i_i_fu_902_p1 = tmp_94_i_i_reg_1096;

assign tmp_94_i_i_fu_873_p2 = (tmp_91_cast_i_i_fu_865_p1 + tmp_93_cast_i_i_fu_869_p1);

assign tmp_95_i_i_fu_905_p2 = (tmp_94_cast_i_i_fu_902_p1 + tmp_92_cast_i_i_fu_898_p1);

assign tmp_96_i_i_fu_922_p2 = ((row_ind_V_reg_1101 == 13'd3) ? 1'b1 : 1'b0);

assign tmp_97_i_i_fu_638_p1 = t_V_2_reg_363_pp1_iter1_reg;

assign tmp_98_cast_i_i_fu_681_p1 = ap_phi_mux_src_buf1_V_0_i_i_phi_fu_441_p4;

assign tmp_99_cast_i_i_fu_685_p1 = src_buf1_2_V_xfExtractPixels_1_fu_450_ap_return;

assign tmp_cast_fu_712_p1 = tmp_reg_1076;

assign tmp_fu_703_p2 = (tmp_101_cast_i_i_cas_fu_693_p1 + tmp_100_cast_i_i_cas_fu_689_p1);

assign tmp_i_i_31_fu_495_p2 = ((t_V_9_reg_339 == 13'd2) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_484_p1 = t_V_reg_328;

assign tmp_s_fu_560_p2 = (tmp_i_i_31_reg_969 | sel_tmp2_fu_551_p2);

always @ (posedge ap_clk) begin
    tmp_i_i_reg_943[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    tmp_i_i_reg_943_pp0_iter1_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    tmp_97_i_i_reg_1008[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //xFAverageGaussianMas
