-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gradient_decompositi is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    gx_data_stream_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    gx_data_stream_V_empty_n : IN STD_LOGIC;
    gx_data_stream_V_read : OUT STD_LOGIC;
    gy_data_stream_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    gy_data_stream_V_empty_n : IN STD_LOGIC;
    gy_data_stream_V_read : OUT STD_LOGIC;
    gd_data_stream_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    gd_data_stream_V_full_n : IN STD_LOGIC;
    gd_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of gradient_decompositi is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv11_500 : STD_LOGIC_VECTOR (10 downto 0) := "10100000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal gx_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_reg_627 : STD_LOGIC_VECTOR (0 downto 0);
    signal gy_data_stream_V_blk_n : STD_LOGIC;
    signal gd_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal exitcond_reg_627_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_3_reg_154 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond8_fu_165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_171_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_V_reg_622 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_fu_177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_reg_627_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_627_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_627_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_183_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_51_reg_636 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_52_reg_645 : STD_LOGIC_VECTOR (15 downto 0);
    signal xs_V_3_fu_189_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal xs_V_3_reg_654 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_reg_659 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_V_4_fu_203_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal xs_V_4_reg_665 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_reg_670 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_676 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_676_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_684 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_684_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_reg_690 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_reg_690_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_346_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_33_reg_696 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_34_fu_376_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_34_reg_701 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_35_fu_390_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_35_reg_706 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_36_fu_412_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_36_reg_711 : STD_LOGIC_VECTOR (20 downto 0);
    signal or_cond4_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_716 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_716_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_722 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_722_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal abs_g_fu_465_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal abs_g_reg_727 : STD_LOGIC_VECTOR (13 downto 0);
    signal abs_g_reg_727_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal abs_g_reg_727_pp0_iter4_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal ult_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_732 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_737 : STD_LOGIC_VECTOR (0 downto 0);
    signal dir_g_7_fu_603_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal dir_g_7_reg_743 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal t_V_reg_143 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_Result_3_fu_217_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_fu_232_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal abs_gy_fu_241_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal abs_gx_fu_226_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_fu_266_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_312_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_cond8_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_316_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl2_fu_334_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_96_cast1_fu_330_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl2_cast_fu_342_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl_fu_352_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl1_fu_364_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl_cast_fu_360_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl1_cast_fu_372_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_88_cast1_fu_382_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl5_cast_fu_386_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl3_fu_396_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl3_cast_fu_404_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl4_cast_fu_408_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_49_fu_418_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev10_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_453_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_247_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_46_fu_251_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_97_cast_fu_471_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_89_cast_fu_479_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rev9_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dir_g_cast_fu_492_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal dir_g_3_cast_fu_510_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp2_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dir_g_1_fu_496_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp1_fu_522_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp7_demorgan_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dir_g_2_fu_503_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp4_fu_540_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp5_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_demorgan_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_563_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond8_fu_165_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond8_fu_165_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((exitcond8_fu_165_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_3_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond8_fu_165_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_3_reg_154 <= ap_const_lv11_0;
            elsif (((exitcond_fu_177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_3_reg_154 <= j_V_fu_183_p2;
            end if; 
        end if;
    end process;

    t_V_reg_143_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_143 <= i_V_reg_622;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_143 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                abs_g_reg_727 <= abs_g_fu_465_p2;
                or_cond4_reg_716 <= or_cond4_fu_447_p2;
                or_cond5_reg_684 <= or_cond5_fu_295_p2;
                or_cond9_reg_690 <= or_cond9_fu_324_p2;
                tmp_33_reg_696 <= tmp_33_fu_346_p2;
                    tmp_34_reg_701(20 downto 2) <= tmp_34_fu_376_p2(20 downto 2);
                tmp_35_reg_706 <= tmp_35_fu_390_p2;
                    tmp_36_reg_711(20 downto 2) <= tmp_36_fu_412_p2(20 downto 2);
                tmp_40_reg_722 <= tmp_40_fu_459_p2;
                tmp_s_reg_676 <= tmp_s_fu_255_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                abs_g_reg_727_pp0_iter3_reg <= abs_g_reg_727;
                abs_g_reg_727_pp0_iter4_reg <= abs_g_reg_727_pp0_iter3_reg;
                exitcond_reg_627_pp0_iter2_reg <= exitcond_reg_627_pp0_iter1_reg;
                exitcond_reg_627_pp0_iter3_reg <= exitcond_reg_627_pp0_iter2_reg;
                exitcond_reg_627_pp0_iter4_reg <= exitcond_reg_627_pp0_iter3_reg;
                or_cond4_reg_716_pp0_iter3_reg <= or_cond4_reg_716;
                or_cond5_reg_684_pp0_iter3_reg <= or_cond5_reg_684;
                or_cond9_reg_690_pp0_iter3_reg <= or_cond9_reg_690;
                tmp_40_reg_722_pp0_iter3_reg <= tmp_40_reg_722;
                tmp_s_reg_676_pp0_iter3_reg <= tmp_s_reg_676;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_627_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                dir_g_7_reg_743 <= dir_g_7_fu_603_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_reg_627 <= exitcond_fu_177_p2;
                exitcond_reg_627_pp0_iter1_reg <= exitcond_reg_627;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_622 <= i_V_fu_171_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_627 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_2_reg_670 <= gy_data_stream_V_dout(15 downto 15);
                p_Result_s_reg_659 <= gx_data_stream_V_dout(15 downto 15);
                tmp_51_reg_636 <= gx_data_stream_V_dout;
                tmp_52_reg_645 <= gy_data_stream_V_dout;
                xs_V_3_reg_654 <= xs_V_3_fu_189_p2;
                xs_V_4_reg_665 <= xs_V_4_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_627_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_37_reg_737 <= tmp_37_fu_482_p2;
                ult_reg_732 <= ult_fu_474_p2;
            end if;
        end if;
    end process;
    tmp_34_reg_701(1 downto 0) <= "00";
    tmp_36_reg_711(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, exitcond8_fu_165_p2, ap_CS_fsm_state2, exitcond_fu_177_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond8_fu_165_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_fu_177_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((exitcond_fu_177_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    abs_g_fu_465_p2 <= std_logic_vector(unsigned(tmp_fu_247_p1) + unsigned(tmp_46_fu_251_p1));
    abs_gx_fu_226_p3 <= 
        p_Result_3_fu_217_p4 when (p_Result_s_reg_659(0) = '1') else 
        tmp_51_reg_636;
    abs_gy_fu_241_p3 <= 
        p_Result_4_fu_232_p4 when (p_Result_2_reg_670(0) = '1') else 
        tmp_52_reg_645;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(gx_data_stream_V_empty_n, gy_data_stream_V_empty_n, gd_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_reg_627, ap_enable_reg_pp0_iter5, exitcond_reg_627_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((exitcond_reg_627_pp0_iter4_reg = ap_const_lv1_0) and (gd_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_reg_627 = ap_const_lv1_0) and (gy_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_627 = ap_const_lv1_0) and (gx_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(gx_data_stream_V_empty_n, gy_data_stream_V_empty_n, gd_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_reg_627, ap_enable_reg_pp0_iter5, exitcond_reg_627_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((exitcond_reg_627_pp0_iter4_reg = ap_const_lv1_0) and (gd_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_reg_627 = ap_const_lv1_0) and (gy_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_627 = ap_const_lv1_0) and (gx_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(gx_data_stream_V_empty_n, gy_data_stream_V_empty_n, gd_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_reg_627, ap_enable_reg_pp0_iter5, exitcond_reg_627_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((exitcond_reg_627_pp0_iter4_reg = ap_const_lv1_0) and (gd_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_reg_627 = ap_const_lv1_0) and (gy_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_627 = ap_const_lv1_0) and (gx_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(gx_data_stream_V_empty_n, gy_data_stream_V_empty_n, exitcond_reg_627)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((exitcond_reg_627 = ap_const_lv1_0) and (gy_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_627 = ap_const_lv1_0) and (gx_data_stream_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(gd_data_stream_V_full_n, exitcond_reg_627_pp0_iter4_reg)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((exitcond_reg_627_pp0_iter4_reg = ap_const_lv1_0) and (gd_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_fu_177_p2)
    begin
        if ((exitcond_fu_177_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond8_fu_165_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond8_fu_165_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    dir_g_1_fu_496_p3 <= 
        ap_const_lv2_2 when (tmp_37_reg_737(0) = '1') else 
        ap_const_lv2_1;
    dir_g_2_fu_503_p3 <= 
        ap_const_lv2_2 when (tmp_37_reg_737(0) = '1') else 
        ap_const_lv2_3;
    dir_g_3_cast_fu_510_p3 <= 
        ap_const_lv2_3 when (rev9_fu_487_p2(0) = '1') else 
        ap_const_lv2_0;
    dir_g_7_fu_603_p3 <= 
        ap_const_lv2_0 when (sel_tmp12_fu_598_p2(0) = '1') else 
        sel_tmp9_fu_563_p3;
    dir_g_cast_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rev9_fu_487_p2),2));
    exitcond8_fu_165_p2 <= "1" when (t_V_reg_143 = ap_const_lv10_2D0) else "0";
    exitcond_fu_177_p2 <= "1" when (t_V_3_reg_154 = ap_const_lv11_500) else "0";

    gd_data_stream_V_blk_n_assign_proc : process(gd_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, exitcond_reg_627_pp0_iter4_reg)
    begin
        if (((exitcond_reg_627_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            gd_data_stream_V_blk_n <= gd_data_stream_V_full_n;
        else 
            gd_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    gd_data_stream_V_din <= (abs_g_reg_727_pp0_iter4_reg & dir_g_7_reg_743);

    gd_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, exitcond_reg_627_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_reg_627_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            gd_data_stream_V_write <= ap_const_logic_1;
        else 
            gd_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    gx_data_stream_V_blk_n_assign_proc : process(gx_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_627)
    begin
        if (((exitcond_reg_627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gx_data_stream_V_blk_n <= gx_data_stream_V_empty_n;
        else 
            gx_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gx_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_627, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_reg_627 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            gx_data_stream_V_read <= ap_const_logic_1;
        else 
            gx_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    gy_data_stream_V_blk_n_assign_proc : process(gy_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_627)
    begin
        if (((exitcond_reg_627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gy_data_stream_V_blk_n <= gy_data_stream_V_empty_n;
        else 
            gy_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gy_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_627, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_reg_627 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            gy_data_stream_V_read <= ap_const_logic_1;
        else 
            gy_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_V_fu_171_p2 <= std_logic_vector(unsigned(t_V_reg_143) + unsigned(ap_const_lv10_1));

    internal_ap_ready_assign_proc : process(exitcond8_fu_165_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond8_fu_165_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_183_p2 <= std_logic_vector(unsigned(t_V_3_reg_154) + unsigned(ap_const_lv11_1));
    or_cond1_fu_290_p2 <= (tmp_30_fu_285_p2 and p_Result_s_reg_659);
    or_cond2_fu_431_p2 <= (rev10_fu_425_p2 and p_Result_2_reg_670);
    or_cond3_fu_441_p2 <= (tmp_38_fu_436_p2 and tmp_31_fu_301_p2);
    or_cond4_fu_447_p2 <= (or_cond3_fu_441_p2 or or_cond2_fu_431_p2);
    or_cond5_fu_295_p2 <= (or_cond_fu_279_p2 or or_cond1_fu_290_p2);
    or_cond8_fu_306_p2 <= (tmp_31_fu_301_p2 and tmp_28_fu_261_p2);
    or_cond9_fu_324_p2 <= (tmp_48_fu_316_p3 or or_cond8_fu_306_p2);
    or_cond_fu_279_p2 <= (tmp_28_fu_261_p2 and rev_fu_273_p2);
    
    p_Result_3_fu_217_p4_proc : process(xs_V_3_reg_654)
    begin
        p_Result_3_fu_217_p4 <= xs_V_3_reg_654;
        p_Result_3_fu_217_p4(15) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_4_fu_232_p4_proc : process(xs_V_4_reg_665)
    begin
        p_Result_4_fu_232_p4 <= xs_V_4_reg_665;
        p_Result_4_fu_232_p4(15) <= ap_const_lv1_0(0);
    end process;

    p_shl1_cast_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_364_p3),21));
    p_shl1_fu_364_p3 <= (abs_gy_fu_241_p3 & ap_const_lv2_0);
    p_shl2_cast_fu_342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_334_p3),19));
    p_shl2_fu_334_p3 <= (abs_gx_fu_226_p3 & ap_const_lv2_0);
    p_shl3_cast_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_396_p3),21));
    p_shl3_fu_396_p3 <= (abs_gx_fu_226_p3 & ap_const_lv4_0);
    p_shl4_cast_fu_408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_334_p3),21));
    p_shl5_cast_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_364_p3),19));
    p_shl_cast_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_352_p3),21));
    p_shl_fu_352_p3 <= (abs_gy_fu_241_p3 & ap_const_lv4_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rev10_fu_425_p2 <= (tmp_49_fu_418_p3 xor ap_const_lv1_1);
    rev9_fu_487_p2 <= (ult_reg_732 xor ap_const_lv1_1);
    rev_fu_273_p2 <= (tmp_47_fu_266_p3 xor ap_const_lv1_1);
    sel_tmp10_fu_586_p2 <= (sel_tmp16_demorgan_fu_581_p2 xor ap_const_lv1_1);
    sel_tmp11_fu_592_p2 <= (sel_tmp6_fu_576_p2 or sel_tmp10_fu_586_p2);
    sel_tmp12_fu_598_p2 <= (tmp_40_reg_722_pp0_iter3_reg and sel_tmp11_fu_592_p2);
    sel_tmp16_demorgan_fu_581_p2 <= (sel_tmp7_demorgan_fu_548_p2 or or_cond4_reg_716_pp0_iter3_reg);
    sel_tmp1_fu_522_p3 <= 
        dir_g_cast_fu_492_p1 when (sel_tmp_fu_518_p2(0) = '1') else 
        dir_g_3_cast_fu_510_p3;
    sel_tmp2_fu_530_p2 <= (tmp_s_reg_676_pp0_iter3_reg xor ap_const_lv1_1);
    sel_tmp3_fu_535_p2 <= (sel_tmp2_fu_530_p2 and or_cond9_reg_690_pp0_iter3_reg);
    sel_tmp4_fu_540_p3 <= 
        dir_g_1_fu_496_p3 when (sel_tmp3_fu_535_p2(0) = '1') else 
        sel_tmp1_fu_522_p3;
    sel_tmp5_fu_571_p2 <= (or_cond5_reg_684_pp0_iter3_reg xor ap_const_lv1_1);
    sel_tmp6_fu_576_p2 <= (tmp_s_reg_676_pp0_iter3_reg and sel_tmp5_fu_571_p2);
    sel_tmp7_demorgan_fu_548_p2 <= (tmp_s_reg_676_pp0_iter3_reg or or_cond9_reg_690_pp0_iter3_reg);
    sel_tmp7_fu_552_p2 <= (sel_tmp7_demorgan_fu_548_p2 xor ap_const_lv1_1);
    sel_tmp8_fu_558_p2 <= (sel_tmp7_fu_552_p2 and or_cond4_reg_716_pp0_iter3_reg);
    sel_tmp9_fu_563_p3 <= 
        dir_g_2_fu_503_p3 when (sel_tmp8_fu_558_p2(0) = '1') else 
        sel_tmp4_fu_540_p3;
    sel_tmp_fu_518_p2 <= (tmp_s_reg_676_pp0_iter3_reg and or_cond5_reg_684_pp0_iter3_reg);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_28_fu_261_p2 <= "1" when (signed(tmp_51_reg_636) > signed(ap_const_lv16_0)) else "0";
    tmp_30_fu_285_p2 <= "1" when (signed(tmp_52_reg_645) < signed(ap_const_lv16_1)) else "0";
    tmp_31_fu_301_p2 <= "1" when (signed(tmp_52_reg_645) > signed(ap_const_lv16_0)) else "0";
    tmp_32_fu_312_p2 <= (tmp_52_reg_645 and tmp_51_reg_636);
    tmp_33_fu_346_p2 <= std_logic_vector(unsigned(tmp_96_cast1_fu_330_p1) + unsigned(p_shl2_cast_fu_342_p1));
    tmp_34_fu_376_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_360_p1) - unsigned(p_shl1_cast_fu_372_p1));
    tmp_35_fu_390_p2 <= std_logic_vector(unsigned(tmp_88_cast1_fu_382_p1) + unsigned(p_shl5_cast_fu_386_p1));
    tmp_36_fu_412_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_404_p1) - unsigned(p_shl4_cast_fu_408_p1));
    tmp_37_fu_482_p2 <= "1" when (unsigned(tmp_89_cast_fu_479_p1) > unsigned(tmp_36_reg_711)) else "0";
    tmp_38_fu_436_p2 <= "1" when (signed(tmp_51_reg_636) < signed(ap_const_lv16_1)) else "0";
    tmp_39_fu_453_p2 <= (abs_gy_fu_241_p3 or abs_gx_fu_226_p3);
    tmp_40_fu_459_p2 <= "1" when (tmp_39_fu_453_p2 = ap_const_lv16_0) else "0";
    tmp_46_fu_251_p1 <= abs_gx_fu_226_p3(14 - 1 downto 0);
    tmp_47_fu_266_p3 <= tmp_52_reg_645(15 downto 15);
    tmp_48_fu_316_p3 <= tmp_32_fu_312_p2(15 downto 15);
    tmp_49_fu_418_p3 <= tmp_51_reg_636(15 downto 15);
    tmp_88_cast1_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(abs_gy_fu_241_p3),19));
    tmp_89_cast_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_reg_706),21));
    tmp_96_cast1_fu_330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(abs_gx_fu_226_p3),19));
    tmp_97_cast_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_reg_696),21));
    tmp_fu_247_p1 <= abs_gy_fu_241_p3(14 - 1 downto 0);
    tmp_s_fu_255_p2 <= "1" when (unsigned(abs_gx_fu_226_p3) > unsigned(abs_gy_fu_241_p3)) else "0";
    ult_fu_474_p2 <= "1" when (unsigned(tmp_34_reg_701) < unsigned(tmp_97_cast_fu_471_p1)) else "0";
    xs_V_3_fu_189_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(gx_data_stream_V_dout));
    xs_V_4_fu_203_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(gy_data_stream_V_dout));
end behav;
