-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xFAverageGaussianMas is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_src_mat_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_mat_V_V_empty_n : IN STD_LOGIC;
    p_src_mat_V_V_read : OUT STD_LOGIC;
    p_out_mat_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out_mat_V_V_full_n : IN STD_LOGIC;
    p_out_mat_V_V_write : OUT STD_LOGIC;
    p_lowthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
    p_highthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
    p_lowthreshold_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_lowthreshold_out_full_n : IN STD_LOGIC;
    p_lowthreshold_out_write : OUT STD_LOGIC;
    p_highthreshold_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_highthreshold_out_full_n : IN STD_LOGIC;
    p_highthreshold_out_write : OUT STD_LOGIC );
end;


architecture behav of xFAverageGaussianMas is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_500 : STD_LOGIC_VECTOR (10 downto 0) := "10100000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv10_2D1 : STD_LOGIC_VECTOR (9 downto 0) := "1011010001";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_src_mat_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond1_i_i_reg_934 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond_i_i_i_reg_999 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_i_i_reg_995 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_out_mat_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal tmp_112_i_i_reg_1015 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_i_i_reg_1015_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal p_lowthreshold_out_blk_n : STD_LOGIC;
    signal p_highthreshold_out_blk_n : STD_LOGIC;
    signal t_V_reg_328 : STD_LOGIC_VECTOR (10 downto 0);
    signal t_V_2_reg_363 : STD_LOGIC_VECTOR (10 downto 0);
    signal t_V_2_reg_363_pp1_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state8_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op88_read_state9 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal src_buf3_V_0_i_i_reg_375 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_0_V_reg_387 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_0_V_reg_387_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_V_0_i_i_reg_399 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_0_V_reg_412 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_0_V_reg_425 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_V_0_i_i_reg_437 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_465 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond1_i_i_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_i_i_reg_934_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_fu_478_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_i_i_fu_484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_i_reg_943 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_i_reg_943_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_i_31_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_31_reg_969 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal exitcond_i_i_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_i_i_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_i_i_reg_975 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0385_3_i_i_fu_565_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0385_3_i_i_reg_980 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_0389_3_i_i_fu_581_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0389_3_i_i_reg_985 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0395_3_i_i_fu_597_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0395_3_i_i_reg_990 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_85_i_i_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_i_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_i_reg_999_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_i_reg_999_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_i_reg_999_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_i_reg_999_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_i_reg_999_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_i_reg_999_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_4_fu_632_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_4_reg_1003 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_97_i_i_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_97_i_i_reg_1008 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_112_i_i_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_i_i_reg_1015_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_i_i_reg_1015_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_i_i_reg_1015_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_load_reg_1034 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_load_reg_1041 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_load_reg_1048 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_2_V_xfExtractPixels_1_fu_450_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_2_V_reg_1055 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal src_buf2_2_V_xfExtractPixels_1_fu_455_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_2_V_reg_1060 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_1_V_xfExtractPixels_1_fu_460_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_1_V_reg_1066 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_102_i_i_fu_697_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_102_i_i_reg_1071 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_703_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_reg_1076 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_104_i_i_fu_756_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_104_i_i_reg_1081 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp4_fu_778_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp4_reg_1086 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_88_i_i_fu_851_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_88_i_i_reg_1091 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_94_i_i_fu_873_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_94_i_i_reg_1096 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_ind_V_fu_879_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_reg_1101 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_V_fu_885_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_V_reg_1107 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_i_i_33_fu_927_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter5_state13 : STD_LOGIC;
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_1_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal buf_2_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_2_V_xfExtractPixels_1_fu_450_ap_ready : STD_LOGIC;
    signal src_buf2_2_V_xfExtractPixels_1_fu_455_ap_ready : STD_LOGIC;
    signal src_buf3_1_V_xfExtractPixels_1_fu_460_ap_ready : STD_LOGIC;
    signal t_V_9_reg_339 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal t_V_1_reg_351 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_t_V_2_phi_fu_367_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_src_buf3_V_0_i_i_phi_fu_379_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf2_V_0_i_i_phi_fu_403_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf1_V_0_i_i_phi_fu_441_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf0_V_fu_654_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf1_V_fu_663_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf2_V_fu_672_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_addr_5_gep_fu_286_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_addr_4_gep_fu_292_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_addr_gep_fu_298_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal p_7_i_i_fu_168 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_6_i_i_fu_172 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_5_i_i_fu_176 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_84_i_i_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_556_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_i_i_fu_522_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp4_fu_573_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_3_i_i_fu_530_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp8_fu_589_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_4_i_i_fu_538_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_98_cast_i_i_fu_681_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_99_cast_i_i_fu_685_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_101_cast_i_i_cas_fu_693_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_100_cast_i_i_cas_fu_689_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_102_cast_i_i_fu_709_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_cast_fu_712_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_73_cast_i_i_fu_721_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_74_cast_i_i_fu_725_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_76_i_i_fu_732_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_78_cast_i_i_cast_fu_742_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_cast_i_i_cast_fu_729_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp3_fu_746_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_76_cast_i_i_fu_738_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp12_cast_fu_752_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal A0_1_fu_715_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal A2_1_fu_762_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_107_cast_i_i_cas_fu_770_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_109_cast_i_i_cas_fu_774_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal A1_1_fu_784_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_108_cast_i_i_fu_791_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp13_cast_fu_795_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_111_i_i_fu_798_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_87_cast_i_i_fu_819_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_86_cast_i_i_fu_815_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_65_cast_i_i_fu_829_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_cast_i_i_fu_833_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_67_i_i_fu_837_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_68_cast_i_i_fu_847_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_67_cast_i_i_fu_843_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal A0_fu_823_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal A2_fu_857_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_91_cast_i_i_fu_865_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_93_cast_i_i_fu_869_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal A1_fu_891_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_94_cast_i_i_fu_902_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_92_cast_i_i_fu_898_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_95_i_i_fu_905_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_96_i_i_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_839 : BOOLEAN;

    component xfExtractPixels_1 IS
    port (
        ap_ready : OUT STD_LOGIC;
        val1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Canny_accel_mux_3eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component xFAverageGaussianbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => buf_1_V_d1);

    buf_2_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => buf_2_V_d1);

    src_buf1_2_V_xfExtractPixels_1_fu_450 : component xfExtractPixels_1
    port map (
        ap_ready => src_buf1_2_V_xfExtractPixels_1_fu_450_ap_ready,
        val1_V_read => buf0_V_fu_654_p5,
        ap_return => src_buf1_2_V_xfExtractPixels_1_fu_450_ap_return);

    src_buf2_2_V_xfExtractPixels_1_fu_455 : component xfExtractPixels_1
    port map (
        ap_ready => src_buf2_2_V_xfExtractPixels_1_fu_455_ap_ready,
        val1_V_read => buf1_V_fu_663_p5,
        ap_return => src_buf2_2_V_xfExtractPixels_1_fu_455_ap_return);

    src_buf3_1_V_xfExtractPixels_1_fu_460 : component xfExtractPixels_1
    port map (
        ap_ready => src_buf3_1_V_xfExtractPixels_1_fu_460_ap_ready,
        val1_V_read => buf2_V_fu_672_p5,
        ap_return => src_buf3_1_V_xfExtractPixels_1_fu_460_ap_return);

    Canny_accel_mux_3eOg_U14 : component Canny_accel_mux_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_load_reg_1034,
        din1 => buf_1_V_load_reg_1041,
        din2 => buf_2_V_load_reg_1048,
        din3 => p_0385_3_i_i_reg_980,
        dout => buf0_V_fu_654_p5);

    Canny_accel_mux_3eOg_U15 : component Canny_accel_mux_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_load_reg_1034,
        din1 => buf_1_V_load_reg_1041,
        din2 => buf_2_V_load_reg_1048,
        din3 => p_0389_3_i_i_reg_985,
        dout => buf1_V_fu_663_p5);

    Canny_accel_mux_3eOg_U16 : component Canny_accel_mux_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_load_reg_1034,
        din1 => buf_1_V_load_reg_1041,
        din2 => buf_2_V_load_reg_1048,
        din3 => p_0395_3_i_i_reg_990,
        dout => buf2_V_fu_672_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond_i_i_fu_489_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((p_highthreshold_out_full_n = ap_const_logic_0) or (p_lowthreshold_out_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((p_highthreshold_out_full_n = ap_const_logic_0) or (p_lowthreshold_out_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((exitcond_i_i_i_fu_626_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter5_state13)) then 
                        ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter4;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    src_buf1_0_V_reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_999_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf1_0_V_reg_425 <= src_buf1_2_V_reg_1055;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                src_buf1_0_V_reg_425 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf1_V_0_i_i_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_999_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf1_V_0_i_i_reg_437 <= src_buf1_0_V_reg_425;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                src_buf1_V_0_i_i_reg_437 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf2_0_V_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_999_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf2_0_V_reg_387 <= src_buf2_2_V_reg_1060;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                src_buf2_0_V_reg_387 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf2_V_0_i_i_reg_399_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_999_pp1_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf2_V_0_i_i_reg_399 <= src_buf2_0_V_reg_387_pp1_iter6_reg;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                src_buf2_V_0_i_i_reg_399 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf3_0_V_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_999_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf3_0_V_reg_412 <= src_buf3_1_V_reg_1066;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                src_buf3_0_V_reg_412 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf3_V_0_i_i_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_999_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf3_V_0_i_i_reg_375 <= src_buf3_0_V_reg_412;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                src_buf3_V_0_i_i_reg_375 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    t_V_1_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                t_V_1_reg_351 <= ap_const_lv10_1;
            elsif (((p_out_mat_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                t_V_1_reg_351 <= row_V_reg_1107;
            end if; 
        end if;
    end process;

    t_V_2_reg_363_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_999 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                t_V_2_reg_363 <= col_V_4_reg_1003;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                t_V_2_reg_363 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_9_reg_339_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                t_V_9_reg_339 <= ap_const_lv13_2;
            elsif (((p_out_mat_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                t_V_9_reg_339 <= p_i_i_33_fu_927_p3;
            end if; 
        end if;
    end process;

    t_V_reg_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_i_fu_472_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_reg_328 <= col_V_fu_478_p2;
            elsif ((not(((p_highthreshold_out_full_n = ap_const_logic_0) or (p_lowthreshold_out_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_328 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_999_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                buf_0_V_load_reg_1034 <= buf_0_V_q0;
                buf_1_V_load_reg_1041 <= buf_1_V_q0;
                buf_2_V_load_reg_1048 <= buf_2_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                col_V_4_reg_1003 <= col_V_4_fu_632_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond1_i_i_reg_934 <= exitcond1_i_i_fu_472_p2;
                exitcond1_i_i_reg_934_pp0_iter1_reg <= exitcond1_i_i_reg_934;
                    tmp_i_i_reg_943_pp0_iter1_reg(10 downto 0) <= tmp_i_i_reg_943(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                exitcond_i_i_i_reg_999 <= exitcond_i_i_i_fu_626_p2;
                exitcond_i_i_i_reg_999_pp1_iter1_reg <= exitcond_i_i_i_reg_999;
                t_V_2_reg_363_pp1_iter1_reg <= t_V_2_reg_363;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                exitcond_i_i_i_reg_999_pp1_iter2_reg <= exitcond_i_i_i_reg_999_pp1_iter1_reg;
                exitcond_i_i_i_reg_999_pp1_iter3_reg <= exitcond_i_i_i_reg_999_pp1_iter2_reg;
                exitcond_i_i_i_reg_999_pp1_iter4_reg <= exitcond_i_i_i_reg_999_pp1_iter3_reg;
                exitcond_i_i_i_reg_999_pp1_iter5_reg <= exitcond_i_i_i_reg_999_pp1_iter4_reg;
                exitcond_i_i_i_reg_999_pp1_iter6_reg <= exitcond_i_i_i_reg_999_pp1_iter5_reg;
                src_buf2_0_V_reg_387_pp1_iter6_reg <= src_buf2_0_V_reg_387;
                tmp_112_i_i_reg_1015_pp1_iter3_reg <= tmp_112_i_i_reg_1015;
                tmp_112_i_i_reg_1015_pp1_iter4_reg <= tmp_112_i_i_reg_1015_pp1_iter3_reg;
                tmp_112_i_i_reg_1015_pp1_iter5_reg <= tmp_112_i_i_reg_1015_pp1_iter4_reg;
                tmp_112_i_i_reg_1015_pp1_iter6_reg <= tmp_112_i_i_reg_1015_pp1_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                p_0385_3_i_i_reg_980 <= p_0385_3_i_i_fu_565_p3;
                p_0389_3_i_i_reg_985 <= p_0389_3_i_i_fu_581_p3;
                p_0395_3_i_i_reg_990 <= p_0395_3_i_i_fu_597_p3;
                p_5_i_i_fu_176 <= p_0385_3_i_i_fu_565_p3;
                p_6_i_i_fu_172 <= p_0389_3_i_i_fu_581_p3;
                p_7_i_i_fu_168 <= p_0395_3_i_i_fu_597_p3;
                tmp_85_i_i_reg_995 <= tmp_85_i_i_fu_605_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op88_read_state9 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((exitcond1_i_i_reg_934 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_465 <= p_src_mat_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                row_V_reg_1107 <= row_V_fu_885_p2;
                row_ind_V_reg_1101 <= row_ind_V_fu_879_p2;
                tmp_88_i_i_reg_1091 <= tmp_88_i_i_fu_851_p2;
                tmp_94_i_i_reg_1096 <= tmp_94_i_i_fu_873_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_999_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                src_buf1_2_V_reg_1055 <= src_buf1_2_V_xfExtractPixels_1_fu_450_ap_return;
                src_buf2_2_V_reg_1060 <= src_buf2_2_V_xfExtractPixels_1_fu_455_ap_return;
                src_buf3_1_V_reg_1066 <= src_buf3_1_V_xfExtractPixels_1_fu_460_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_999_pp1_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp4_reg_1086 <= tmp4_fu_778_p2;
                tmp_104_i_i_reg_1081 <= tmp_104_i_i_fu_756_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_999_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_102_i_i_reg_1071 <= tmp_102_i_i_fu_697_p2;
                tmp_reg_1076 <= tmp_fu_703_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_112_i_i_reg_1015 <= tmp_112_i_i_fu_648_p2;
                    tmp_97_i_i_reg_1008(10 downto 0) <= tmp_97_i_i_fu_638_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_fu_489_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_83_i_i_reg_975 <= tmp_83_i_i_fu_501_p2;
                tmp_i_i_31_reg_969 <= tmp_i_i_31_fu_495_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_i_fu_472_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    tmp_i_i_reg_943(10 downto 0) <= tmp_i_i_fu_484_p1(10 downto 0);
            end if;
        end if;
    end process;
    tmp_i_i_reg_943(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    tmp_i_i_reg_943_pp0_iter1_reg(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    tmp_97_i_i_reg_1008(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_out_mat_V_V_full_n, p_lowthreshold_out_full_n, p_highthreshold_out_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter7, ap_CS_fsm_state17, exitcond1_i_i_fu_472_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state6, exitcond_i_i_fu_489_p2, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_highthreshold_out_full_n = ap_const_logic_0) or (p_lowthreshold_out_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond1_i_i_fu_472_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((exitcond1_i_i_fu_472_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((exitcond_i_i_fu_489_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((p_out_mat_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    A0_1_fu_715_p2 <= std_logic_vector(unsigned(tmp_102_cast_i_i_fu_709_p1) + unsigned(tmp_cast_fu_712_p1));
    A0_fu_823_p2 <= std_logic_vector(unsigned(tmp_87_cast_i_i_fu_819_p1) + unsigned(tmp_86_cast_i_i_fu_815_p1));
    A1_1_fu_784_p3 <= (tmp_104_i_i_reg_1081 & ap_const_lv1_0);
    A1_fu_891_p3 <= (tmp_88_i_i_reg_1091 & ap_const_lv1_0);
    A2_1_fu_762_p3 <= (src_buf2_0_V_reg_387 & ap_const_lv2_0);
    A2_fu_857_p3 <= (src_buf2_0_V_reg_387 & ap_const_lv2_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(6);
    ap_CS_fsm_state17 <= ap_CS_fsm(7);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_src_mat_V_V_empty_n, ap_enable_reg_pp0_iter1, exitcond1_i_i_reg_934)
    begin
                ap_block_pp0_stage0_11001 <= ((exitcond1_i_i_reg_934 = ap_const_lv1_0) and (p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_mat_V_V_empty_n, ap_enable_reg_pp0_iter1, exitcond1_i_i_reg_934)
    begin
                ap_block_pp0_stage0_subdone <= ((exitcond1_i_i_reg_934 = ap_const_lv1_0) and (p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_src_mat_V_V_empty_n, p_out_mat_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter7, tmp_112_i_i_reg_1015_pp1_iter6_reg, ap_predicate_op88_read_state9)
    begin
                ap_block_pp1_stage0_01001 <= (((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op88_read_state9 = ap_const_boolean_1)) or ((tmp_112_i_i_reg_1015_pp1_iter6_reg = ap_const_lv1_0) and (p_out_mat_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_src_mat_V_V_empty_n, p_out_mat_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter7, tmp_112_i_i_reg_1015_pp1_iter6_reg, ap_predicate_op88_read_state9)
    begin
                ap_block_pp1_stage0_11001 <= (((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op88_read_state9 = ap_const_boolean_1)) or ((tmp_112_i_i_reg_1015_pp1_iter6_reg = ap_const_lv1_0) and (p_out_mat_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_src_mat_V_V_empty_n, p_out_mat_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter7, tmp_112_i_i_reg_1015_pp1_iter6_reg, ap_predicate_op88_read_state9)
    begin
                ap_block_pp1_stage0_subdone <= (((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op88_read_state9 = ap_const_boolean_1)) or ((tmp_112_i_i_reg_1015_pp1_iter6_reg = ap_const_lv1_0) and (p_out_mat_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, p_lowthreshold_out_full_n, p_highthreshold_out_full_n)
    begin
                ap_block_state1 <= ((p_highthreshold_out_full_n = ap_const_logic_0) or (p_lowthreshold_out_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_pp1_stage0_iter7_assign_proc : process(p_out_mat_V_V_full_n, tmp_112_i_i_reg_1015_pp1_iter6_reg)
    begin
                ap_block_state15_pp1_stage0_iter7 <= ((tmp_112_i_i_reg_1015_pp1_iter6_reg = ap_const_lv1_0) and (p_out_mat_V_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(p_src_mat_V_V_empty_n, exitcond1_i_i_reg_934)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((exitcond1_i_i_reg_934 = ap_const_lv1_0) and (p_src_mat_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp1_stage0_iter1_assign_proc : process(p_src_mat_V_V_empty_n, ap_predicate_op88_read_state9)
    begin
                ap_block_state9_pp1_stage0_iter1 <= ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op88_read_state9 = ap_const_boolean_1));
    end process;


    ap_condition_839_assign_proc : process(ap_block_pp1_stage0, p_0395_3_i_i_reg_990, exitcond_i_i_i_reg_999_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
                ap_condition_839 <= (not((p_0395_3_i_i_reg_990 = ap_const_lv2_1)) and not((p_0395_3_i_i_reg_990 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond1_i_i_fu_472_p2)
    begin
        if ((exitcond1_i_i_fu_472_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter5_state13_assign_proc : process(ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0))) then 
            ap_condition_pp1_exit_iter5_state13 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter5_state13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6, exitcond_i_i_fu_489_p2)
    begin
        if (((exitcond_i_i_fu_489_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter6)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_src_buf1_V_0_i_i_phi_fu_441_p4_assign_proc : process(ap_block_pp1_stage0, src_buf1_0_V_reg_425, src_buf1_V_0_i_i_reg_437, exitcond_i_i_i_reg_999_pp1_iter5_reg, ap_enable_reg_pp1_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_i_i_i_reg_999_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf1_V_0_i_i_phi_fu_441_p4 <= src_buf1_0_V_reg_425;
        else 
            ap_phi_mux_src_buf1_V_0_i_i_phi_fu_441_p4 <= src_buf1_V_0_i_i_reg_437;
        end if; 
    end process;


    ap_phi_mux_src_buf2_V_0_i_i_phi_fu_403_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter7, src_buf2_0_V_reg_387_pp1_iter6_reg, src_buf2_V_0_i_i_reg_399, exitcond_i_i_i_reg_999_pp1_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_i_i_i_reg_999_pp1_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf2_V_0_i_i_phi_fu_403_p4 <= src_buf2_0_V_reg_387_pp1_iter6_reg;
        else 
            ap_phi_mux_src_buf2_V_0_i_i_phi_fu_403_p4 <= src_buf2_V_0_i_i_reg_399;
        end if; 
    end process;


    ap_phi_mux_src_buf3_V_0_i_i_phi_fu_379_p4_assign_proc : process(ap_block_pp1_stage0, src_buf3_V_0_i_i_reg_375, src_buf3_0_V_reg_412, exitcond_i_i_i_reg_999_pp1_iter5_reg, ap_enable_reg_pp1_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_i_i_i_reg_999_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf3_V_0_i_i_phi_fu_379_p4 <= src_buf3_0_V_reg_412;
        else 
            ap_phi_mux_src_buf3_V_0_i_i_phi_fu_379_p4 <= src_buf3_V_0_i_i_reg_375;
        end if; 
    end process;


    ap_phi_mux_t_V_2_phi_fu_367_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_i_i_i_reg_999, t_V_2_reg_363, col_V_4_reg_1003)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_i_i_i_reg_999 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_t_V_2_phi_fu_367_p4 <= col_V_4_reg_1003;
        else 
            ap_phi_mux_t_V_2_phi_fu_367_p4 <= t_V_2_reg_363;
        end if; 
    end process;


    ap_predicate_op88_read_state9_assign_proc : process(exitcond_i_i_i_reg_999, tmp_85_i_i_reg_995)
    begin
                ap_predicate_op88_read_state9 <= ((tmp_85_i_i_reg_995 = ap_const_lv1_1) and (exitcond_i_i_i_reg_999 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    buf_0_V_addr_5_gep_fu_286_p3 <= tmp_97_i_i_fu_638_p1(11 - 1 downto 0);
    buf_0_V_address0 <= tmp_97_i_i_reg_1008(11 - 1 downto 0);

    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_85_i_i_reg_995, ap_enable_reg_pp0_iter0, tmp_i_i_fu_484_p1, p_0395_3_i_i_reg_990, exitcond_i_i_i_reg_999_pp1_iter1_reg, tmp_97_i_i_fu_638_p1, ap_enable_reg_pp1_iter2, buf_0_V_addr_5_gep_fu_286_p3)
    begin
        if (((tmp_85_i_i_reg_995 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_address1 <= buf_0_V_addr_5_gep_fu_286_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_85_i_i_reg_995 = ap_const_lv1_0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_address1 <= tmp_97_i_i_fu_638_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buf_0_V_address1 <= tmp_i_i_fu_484_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_85_i_i_reg_995, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, p_0395_3_i_i_reg_990, exitcond_i_i_i_reg_999_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if ((((tmp_85_i_i_reg_995 = ap_const_lv1_1) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_85_i_i_reg_995 = ap_const_lv1_0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_85_i_i_reg_995, reg_465, ap_enable_reg_pp0_iter0, p_0395_3_i_i_reg_990, exitcond_i_i_i_reg_999_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((tmp_85_i_i_reg_995 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_d1 <= reg_465;
        elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_85_i_i_reg_995 = ap_const_lv1_0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            buf_0_V_d1 <= ap_const_lv8_0;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_85_i_i_reg_995, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, exitcond1_i_i_fu_472_p2, ap_enable_reg_pp0_iter0, p_0395_3_i_i_reg_990, exitcond_i_i_i_reg_999_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if ((((tmp_85_i_i_reg_995 = ap_const_lv1_1) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((exitcond1_i_i_fu_472_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_85_i_i_reg_995 = ap_const_lv1_0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_1_V_addr_4_gep_fu_292_p3 <= tmp_97_i_i_fu_638_p1(11 - 1 downto 0);
    buf_1_V_address0 <= tmp_97_i_i_reg_1008(11 - 1 downto 0);

    buf_1_V_address1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_85_i_i_reg_995, tmp_i_i_reg_943_pp0_iter1_reg, p_0395_3_i_i_reg_990, exitcond_i_i_i_reg_999_pp1_iter1_reg, tmp_97_i_i_fu_638_p1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, buf_1_V_addr_4_gep_fu_292_p3)
    begin
        if (((tmp_85_i_i_reg_995 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_address1 <= buf_1_V_addr_4_gep_fu_292_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_85_i_i_reg_995 = ap_const_lv1_0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_address1 <= tmp_97_i_i_fu_638_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_1_V_address1 <= tmp_i_i_reg_943_pp0_iter1_reg(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(tmp_85_i_i_reg_995, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, p_0395_3_i_i_reg_990, exitcond_i_i_i_reg_999_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((tmp_85_i_i_reg_995 = ap_const_lv1_1) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_85_i_i_reg_995 = ap_const_lv1_0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_85_i_i_reg_995, reg_465, p_0395_3_i_i_reg_990, exitcond_i_i_i_reg_999_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_85_i_i_reg_995 = ap_const_lv1_0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_d1 <= ap_const_lv8_0;
        elsif ((((tmp_85_i_i_reg_995 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buf_1_V_d1 <= reg_465;
        else 
            buf_1_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(tmp_85_i_i_reg_995, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, exitcond1_i_i_reg_934_pp0_iter1_reg, p_0395_3_i_i_reg_990, exitcond_i_i_i_reg_999_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((tmp_85_i_i_reg_995 = ap_const_lv1_1) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((exitcond1_i_i_reg_934_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_85_i_i_reg_995 = ap_const_lv1_0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (p_0395_3_i_i_reg_990 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_V_addr_gep_fu_298_p3 <= tmp_97_i_i_fu_638_p1(11 - 1 downto 0);
    buf_2_V_address0 <= tmp_97_i_i_reg_1008(11 - 1 downto 0);

    buf_2_V_address1_assign_proc : process(tmp_85_i_i_reg_995, tmp_97_i_i_fu_638_p1, buf_2_V_addr_gep_fu_298_p3, ap_condition_839)
    begin
        if ((ap_const_boolean_1 = ap_condition_839)) then
            if ((tmp_85_i_i_reg_995 = ap_const_lv1_1)) then 
                buf_2_V_address1 <= buf_2_V_addr_gep_fu_298_p3;
            elsif ((tmp_85_i_i_reg_995 = ap_const_lv1_0)) then 
                buf_2_V_address1 <= tmp_97_i_i_fu_638_p1(11 - 1 downto 0);
            else 
                buf_2_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            buf_2_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(tmp_85_i_i_reg_995, ap_block_pp1_stage0_11001, p_0395_3_i_i_reg_990, exitcond_i_i_i_reg_999_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((not((p_0395_3_i_i_reg_990 = ap_const_lv2_1)) and not((p_0395_3_i_i_reg_990 = ap_const_lv2_0)) and (tmp_85_i_i_reg_995 = ap_const_lv1_1) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((p_0395_3_i_i_reg_990 = ap_const_lv2_1)) and not((p_0395_3_i_i_reg_990 = ap_const_lv2_0)) and (tmp_85_i_i_reg_995 = ap_const_lv1_0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d1_assign_proc : process(tmp_85_i_i_reg_995, reg_465, ap_condition_839)
    begin
        if ((ap_const_boolean_1 = ap_condition_839)) then
            if ((tmp_85_i_i_reg_995 = ap_const_lv1_1)) then 
                buf_2_V_d1 <= reg_465;
            elsif ((tmp_85_i_i_reg_995 = ap_const_lv1_0)) then 
                buf_2_V_d1 <= ap_const_lv8_0;
            else 
                buf_2_V_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_2_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(tmp_85_i_i_reg_995, ap_block_pp1_stage0_11001, p_0395_3_i_i_reg_990, exitcond_i_i_i_reg_999_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((not((p_0395_3_i_i_reg_990 = ap_const_lv2_1)) and not((p_0395_3_i_i_reg_990 = ap_const_lv2_0)) and (tmp_85_i_i_reg_995 = ap_const_lv1_1) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((p_0395_3_i_i_reg_990 = ap_const_lv2_1)) and not((p_0395_3_i_i_reg_990 = ap_const_lv2_0)) and (tmp_85_i_i_reg_995 = ap_const_lv1_0) and (exitcond_i_i_i_reg_999_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    col_V_4_fu_632_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_2_phi_fu_367_p4) + unsigned(ap_const_lv11_1));
    col_V_fu_478_p2 <= std_logic_vector(unsigned(t_V_reg_328) + unsigned(ap_const_lv11_1));
    exitcond1_i_i_fu_472_p2 <= "1" when (t_V_reg_328 = ap_const_lv11_500) else "0";
    exitcond_i_i_fu_489_p2 <= "1" when (t_V_1_reg_351 = ap_const_lv10_2D1) else "0";
    exitcond_i_i_i_fu_626_p2 <= "1" when (ap_phi_mux_t_V_2_phi_fu_367_p4 = ap_const_lv11_500) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6, exitcond_i_i_fu_489_p2)
    begin
        if (((exitcond_i_i_fu_489_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    p_0385_3_i_i_fu_565_p3 <= 
        sel_tmp_fu_556_p1 when (tmp_s_fu_560_p2(0) = '1') else 
        p_i_i_fu_522_p3;
    p_0389_3_i_i_fu_581_p3 <= 
        sel_tmp4_fu_573_p3 when (tmp_s_fu_560_p2(0) = '1') else 
        p_3_i_i_fu_530_p3;
    p_0395_3_i_i_fu_597_p3 <= 
        sel_tmp8_fu_589_p3 when (tmp_s_fu_560_p2(0) = '1') else 
        p_4_i_i_fu_538_p3;
    p_3_i_i_fu_530_p3 <= 
        ap_const_lv2_0 when (tmp_84_i_i_fu_516_p2(0) = '1') else 
        p_6_i_i_fu_172;
    p_4_i_i_fu_538_p3 <= 
        ap_const_lv2_1 when (tmp_84_i_i_fu_516_p2(0) = '1') else 
        p_7_i_i_fu_168;

    p_highthreshold_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_highthreshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_highthreshold_out_blk_n <= p_highthreshold_out_full_n;
        else 
            p_highthreshold_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_highthreshold_out_din <= p_highthreshold;

    p_highthreshold_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_lowthreshold_out_full_n, p_highthreshold_out_full_n)
    begin
        if ((not(((p_highthreshold_out_full_n = ap_const_logic_0) or (p_lowthreshold_out_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_highthreshold_out_write <= ap_const_logic_1;
        else 
            p_highthreshold_out_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i_i_33_fu_927_p3 <= 
        ap_const_lv13_0 when (tmp_96_i_i_fu_922_p2(0) = '1') else 
        row_ind_V_reg_1101;
    p_i_i_fu_522_p3 <= 
        ap_const_lv2_2 when (tmp_84_i_i_fu_516_p2(0) = '1') else 
        p_5_i_i_fu_176;

    p_lowthreshold_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_lowthreshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_lowthreshold_out_blk_n <= p_lowthreshold_out_full_n;
        else 
            p_lowthreshold_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_lowthreshold_out_din <= p_lowthreshold;

    p_lowthreshold_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_lowthreshold_out_full_n, p_highthreshold_out_full_n)
    begin
        if ((not(((p_highthreshold_out_full_n = ap_const_logic_0) or (p_lowthreshold_out_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_lowthreshold_out_write <= ap_const_logic_1;
        else 
            p_lowthreshold_out_write <= ap_const_logic_0;
        end if; 
    end process;


    p_out_mat_V_V_blk_n_assign_proc : process(p_out_mat_V_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter7, tmp_112_i_i_reg_1015_pp1_iter6_reg, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_112_i_i_reg_1015_pp1_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)))) then 
            p_out_mat_V_V_blk_n <= p_out_mat_V_V_full_n;
        else 
            p_out_mat_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_out_mat_V_V_din_assign_proc : process(p_out_mat_V_V_full_n, ap_enable_reg_pp1_iter7, tmp_112_i_i_reg_1015_pp1_iter6_reg, ap_CS_fsm_state17, ap_block_pp1_stage0_01001, tmp_111_i_i_fu_798_p2, tmp_95_i_i_fu_905_p2)
    begin
        if (((p_out_mat_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            p_out_mat_V_V_din <= tmp_95_i_i_fu_905_p2(11 downto 4);
        elsif (((tmp_112_i_i_reg_1015_pp1_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1))) then 
            p_out_mat_V_V_din <= tmp_111_i_i_fu_798_p2(11 downto 4);
        else 
            p_out_mat_V_V_din <= "XXXXXXXX";
        end if; 
    end process;


    p_out_mat_V_V_write_assign_proc : process(p_out_mat_V_V_full_n, ap_enable_reg_pp1_iter7, tmp_112_i_i_reg_1015_pp1_iter6_reg, ap_CS_fsm_state17, ap_block_pp1_stage0_11001)
    begin
        if ((((p_out_mat_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((tmp_112_i_i_reg_1015_pp1_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            p_out_mat_V_V_write <= ap_const_logic_1;
        else 
            p_out_mat_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_mat_V_V_blk_n_assign_proc : process(p_src_mat_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond1_i_i_reg_934, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_i_i_i_reg_999, tmp_85_i_i_reg_995)
    begin
        if ((((tmp_85_i_i_reg_995 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_i_i_i_reg_999 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((exitcond1_i_i_reg_934 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_mat_V_V_blk_n <= p_src_mat_V_V_empty_n;
        else 
            p_src_mat_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_mat_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_i_i_reg_934, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op88_read_state9, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op88_read_state9 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((exitcond1_i_i_reg_934 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_mat_V_V_read <= ap_const_logic_1;
        else 
            p_src_mat_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    row_V_fu_885_p2 <= std_logic_vector(unsigned(t_V_1_reg_351) + unsigned(ap_const_lv10_1));
    row_ind_V_fu_879_p2 <= std_logic_vector(unsigned(t_V_9_reg_339) + unsigned(ap_const_lv13_1));
    sel_tmp1_fu_546_p2 <= (tmp_i_i_31_reg_969 xor ap_const_lv1_1);
    sel_tmp2_fu_551_p2 <= (tmp_83_i_i_reg_975 and sel_tmp1_fu_546_p2);
    sel_tmp4_fu_573_p3 <= 
        ap_const_lv2_2 when (sel_tmp2_fu_551_p2(0) = '1') else 
        ap_const_lv2_1;
    sel_tmp8_fu_589_p3 <= 
        ap_const_lv2_0 when (sel_tmp2_fu_551_p2(0) = '1') else 
        ap_const_lv2_2;
    sel_tmp_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp2_fu_551_p2),2));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp12_cast_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_746_p2),10));
    tmp13_cast_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp4_reg_1086),12));
    tmp3_fu_746_p2 <= std_logic_vector(unsigned(tmp_78_cast_i_i_cast_fu_742_p1) + unsigned(tmp_75_cast_i_i_cast_fu_729_p1));
    tmp4_fu_778_p2 <= std_logic_vector(unsigned(tmp_107_cast_i_i_cas_fu_770_p1) + unsigned(tmp_109_cast_i_i_cas_fu_774_p1));
    tmp_100_cast_i_i_cas_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_src_buf3_V_0_i_i_phi_fu_379_p4),9));
    tmp_101_cast_i_i_cas_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf3_1_V_xfExtractPixels_1_fu_460_ap_return),9));
    tmp_102_cast_i_i_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_102_i_i_reg_1071),10));
    tmp_102_i_i_fu_697_p2 <= std_logic_vector(unsigned(tmp_98_cast_i_i_fu_681_p1) + unsigned(tmp_99_cast_i_i_fu_685_p1));
    tmp_104_i_i_fu_756_p2 <= std_logic_vector(unsigned(tmp_76_cast_i_i_fu_738_p1) + unsigned(tmp12_cast_fu_752_p1));
    tmp_107_cast_i_i_cas_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A0_1_fu_715_p2),11));
    tmp_108_cast_i_i_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1_1_fu_784_p3),12));
    tmp_109_cast_i_i_cas_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A2_1_fu_762_p3),11));
    tmp_111_i_i_fu_798_p2 <= std_logic_vector(unsigned(tmp_108_cast_i_i_fu_791_p1) + unsigned(tmp13_cast_fu_795_p1));
    tmp_112_i_i_fu_648_p2 <= "1" when (t_V_2_reg_363_pp1_iter1_reg = ap_const_lv11_0) else "0";
    tmp_65_cast_i_i_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf1_0_V_reg_425),9));
    tmp_66_cast_i_i_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf2_V_0_i_i_reg_399),9));
    tmp_67_cast_i_i_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_67_i_i_fu_837_p2),10));
    tmp_67_i_i_fu_837_p2 <= std_logic_vector(unsigned(tmp_65_cast_i_i_fu_829_p1) + unsigned(tmp_66_cast_i_i_fu_833_p1));
    tmp_68_cast_i_i_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf3_0_V_reg_412),10));
    tmp_73_cast_i_i_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_src_buf2_V_0_i_i_phi_fu_403_p4),9));
    tmp_74_cast_i_i_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf1_0_V_reg_425),9));
    tmp_75_cast_i_i_cast_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf2_2_V_reg_1060),9));
    tmp_76_cast_i_i_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_i_i_fu_732_p2),10));
    tmp_76_i_i_fu_732_p2 <= std_logic_vector(unsigned(tmp_73_cast_i_i_fu_721_p1) + unsigned(tmp_74_cast_i_i_fu_725_p1));
    tmp_78_cast_i_i_cast_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf3_0_V_reg_412),9));
    tmp_83_i_i_fu_501_p2 <= "1" when (t_V_9_reg_339 = ap_const_lv13_0) else "0";
    tmp_84_i_i_fu_516_p2 <= "1" when (t_V_9_reg_339 = ap_const_lv13_1) else "0";
    tmp_85_i_i_fu_605_p2 <= "1" when (unsigned(t_V_1_reg_351) < unsigned(ap_const_lv10_2D0)) else "0";
    tmp_86_cast_i_i_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf1_V_0_i_i_reg_437),9));
    tmp_87_cast_i_i_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf3_V_0_i_i_reg_375),9));
    tmp_88_i_i_fu_851_p2 <= std_logic_vector(unsigned(tmp_68_cast_i_i_fu_847_p1) + unsigned(tmp_67_cast_i_i_fu_843_p1));
    tmp_91_cast_i_i_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A0_fu_823_p2),11));
    tmp_92_cast_i_i_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1_fu_891_p3),12));
    tmp_93_cast_i_i_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A2_fu_857_p3),11));
    tmp_94_cast_i_i_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_94_i_i_reg_1096),12));
    tmp_94_i_i_fu_873_p2 <= std_logic_vector(unsigned(tmp_91_cast_i_i_fu_865_p1) + unsigned(tmp_93_cast_i_i_fu_869_p1));
    tmp_95_i_i_fu_905_p2 <= std_logic_vector(unsigned(tmp_94_cast_i_i_fu_902_p1) + unsigned(tmp_92_cast_i_i_fu_898_p1));
    tmp_96_i_i_fu_922_p2 <= "1" when (row_ind_V_reg_1101 = ap_const_lv13_3) else "0";
    tmp_97_i_i_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_363_pp1_iter1_reg),64));
    tmp_98_cast_i_i_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_src_buf1_V_0_i_i_phi_fu_441_p4),9));
    tmp_99_cast_i_i_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf1_2_V_xfExtractPixels_1_fu_450_ap_return),9));
    tmp_cast_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_1076),10));
    tmp_fu_703_p2 <= std_logic_vector(unsigned(tmp_101_cast_i_i_cas_fu_693_p1) + unsigned(tmp_100_cast_i_i_cas_fu_689_p1));
    tmp_i_i_31_fu_495_p2 <= "1" when (t_V_9_reg_339 = ap_const_lv13_2) else "0";
    tmp_i_i_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_328),64));
    tmp_s_fu_560_p2 <= (tmp_i_i_31_reg_969 or sel_tmp2_fu_551_p2);
end behav;
