-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xFSobel3x3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_mat_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_mat_V_V_empty_n : IN STD_LOGIC;
    p_src_mat_V_V_read : OUT STD_LOGIC;
    p_out_mat_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_out_mat_V_V_full_n : IN STD_LOGIC;
    p_out_mat_V_V_write : OUT STD_LOGIC;
    p_out_mat1_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_out_mat1_V_V_full_n : IN STD_LOGIC;
    p_out_mat1_V_V_write : OUT STD_LOGIC );
end;


architecture behav of xFSobel3x3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv11_500 : STD_LOGIC_VECTOR (10 downto 0) := "10100000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv10_2D1 : STD_LOGIC_VECTOR (9 downto 0) := "1011010001";
    constant ap_const_lv11_531 : STD_LOGIC_VECTOR (10 downto 0) := "10100110001";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv10_2CF : STD_LOGIC_VECTOR (9 downto 0) := "1011001111";
    constant ap_const_lv11_501 : STD_LOGIC_VECTOR (10 downto 0) := "10100000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_mat_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond1_i_reg_1113 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1129 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_out_mat_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal exitcond1_i_reg_1113_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1153 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1153_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_out_mat1_V_V_blk_n : STD_LOGIC;
    signal t_V_reg_310 : STD_LOGIC_VECTOR (10 downto 0);
    signal t_V_reg_310_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal t_V_8_reg_378 : STD_LOGIC_VECTOR (10 downto 0);
    signal t_V_8_reg_378_pp1_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state14_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op147_read_state15 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter7 : BOOLEAN;
    signal ap_predicate_op222_write_state22 : BOOLEAN;
    signal ap_predicate_op223_write_state22 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal t_V_8_reg_378_pp1_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal src_buf_2_1_reg_390 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_1_reg_390_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_reg_402 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_1_reg_414 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_reg_426 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_1_reg_438 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_1_reg_438_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_reg_450 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_reg_462 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_474 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_481 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal exitcond1_i_reg_1113_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_485 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_489 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_ind_2_V_1_load_reg_985 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_ind_2_V_2_load_reg_990 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_load_reg_996 : STD_LOGIC_VECTOR (12 downto 0);
    signal init_row_ind_fu_508_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal init_buf_fu_533_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond3_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_537_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_1014 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_19_fu_546_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_1023 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_fu_550_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_reg_1027 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond2_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_reg_1032 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_fu_559_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_reg_1036 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal init_buf_1_fu_572_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal col_V_2_fu_584_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_2_reg_1049 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal buf_0_V_addr_reg_1054 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond1_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_597_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_reg_1070 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_42_2_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_2_reg_1078 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal exitcond_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1083 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ret_V_1_fu_646_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_V_1_reg_1088 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1093 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_657_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_reg_1098 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_fu_661_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_reg_1103 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_fu_665_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_reg_1108 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond1_i_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_i_reg_1113_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_i_reg_1113_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_i_reg_1113_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_i_reg_1113_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_i_reg_1113_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_3_fu_675_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_3_reg_1117 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_11_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1122 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1122_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1122_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1122_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1122_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1122_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1129_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_703_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_reg_1133 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_reg_1133_pp1_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_reg_1133_pp1_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_reg_1133_pp1_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_reg_1133_pp1_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1153_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1153_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1153_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_cop_1_V_fu_738_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_V_reg_1159 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_0_V_1_fu_778_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_0_V_1_reg_1164 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal buf_cop_2_V_1_fu_785_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_1_reg_1171 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_V_1_fu_792_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_V_1_reg_1178 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ret_V_2_fu_828_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_2_reg_1183 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_3_fu_842_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_3_reg_1188 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_14_fu_848_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_reg_1193 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_fu_874_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_reg_1198 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_cop_1_V_2_fu_880_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_V_2_reg_1203 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_2_fu_887_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_2_reg_1208 : STD_LOGIC_VECTOR (7 downto 0);
    signal g_x_V_fu_908_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal g_x_V_reg_1213 : STD_LOGIC_VECTOR (10 downto 0);
    signal g_y_V_fu_947_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal g_y_V_reg_1218 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_V_fu_961_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter5_state19 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal ap_phi_mux_i_op_assign_phi_fu_293_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_op_assign_reg_289 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_op_assign_1_reg_300 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_t_V_phi_fu_314_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal t_V_6_reg_322 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal zero_ind_V_reg_354 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_1_V_1_reg_333 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_reg_343 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_7_reg_366 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_t_V_8_phi_fu_382_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_src_buf_2_1_phi_fu_394_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_2_phi_fu_406_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_1_1_phi_fu_418_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_1_phi_fu_430_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_0_1_phi_fu_442_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_phi_fu_454_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter0_storemerge_reg_462 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter1_storemerge_reg_462 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter2_storemerge_reg_462 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter3_storemerge_reg_462 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter4_storemerge_reg_462 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter5_storemerge_reg_462 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter6_storemerge_reg_462 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_590_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal row_ind_2_V_1_fu_134 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_1_fu_514_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_2_fu_138 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_fu_142 : STD_LOGIC_VECTOR (12 downto 0);
    signal lhs_V_cast_fu_614_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_fu_618_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_25_fu_642_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_692_p5 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_22_fu_749_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_760_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_0_V_fu_727_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_fu_771_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_798_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_fu_810_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_fu_825_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_fu_822_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_3_fu_838_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_1_fu_834_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_cast_fu_818_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_cast_fu_806_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_4_fu_854_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_5_fu_860_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_cast_fu_866_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_52_cast_fu_870_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_47_cast_fu_899_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_45_cast_fu_893_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_15_fu_902_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_46_cast_fu_896_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_2_fu_914_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_fu_926_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_53_cast_fu_938_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_2_cast_fu_922_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_18_fu_941_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_3_cast_fu_934_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component Canny_accel_mux_3eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Canny_accel_mux_3fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component xFAverageGaussianbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => reg_474);

    buf_2_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => reg_474);

    Canny_accel_mux_3eOg_U25 : component Canny_accel_mux_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => reg_481,
        din1 => reg_485,
        din2 => reg_489,
        din3 => tmp_24_reg_1027,
        dout => tmp_17_fu_597_p5);

    Canny_accel_mux_3fYi_U26 : component Canny_accel_mux_3fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 13,
        din3_WIDTH => 2,
        dout_WIDTH => 13)
    port map (
        din0 => zero_ind_V_reg_354,
        din1 => row_ind_0_V_reg_343,
        din2 => row_ind_1_V_1_reg_333,
        din3 => ret_V_1_reg_1088,
        dout => tmp_21_fu_692_p5);

    Canny_accel_mux_3eOg_U27 : component Canny_accel_mux_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => reg_481,
        din1 => reg_485,
        din2 => reg_489,
        din3 => tmp_27_reg_1103,
        dout => buf_cop_0_V_fu_727_p5);

    Canny_accel_mux_3eOg_U28 : component Canny_accel_mux_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => reg_481,
        din1 => reg_485,
        din2 => reg_489,
        din3 => tmp_28_reg_1108,
        dout => buf_cop_1_V_fu_738_p5);

    Canny_accel_mux_3eOg_U29 : component Canny_accel_mux_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => reg_481,
        din1 => reg_485,
        din2 => reg_489,
        din3 => tmp_29_reg_1133_pp1_iter4_reg,
        dout => tmp_22_fu_749_p5);

    Canny_accel_mux_3eOg_U30 : component Canny_accel_mux_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => reg_481,
        din1 => reg_485,
        din2 => reg_489,
        din3 => tmp_26_reg_1098,
        dout => tmp_23_fu_760_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_4_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((tmp_4_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((exitcond1_i_fu_669_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter5_state19)) then 
                        ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter4;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter6_storemerge_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if (((tmp_20_reg_1153_pp1_iter4_reg = ap_const_lv1_0) and (exitcond1_i_reg_1113_pp1_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter6_storemerge_reg_462 <= ap_phi_mux_src_buf_0_1_phi_fu_442_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter6_storemerge_reg_462 <= ap_phi_reg_pp1_iter5_storemerge_reg_462;
                end if;
            end if; 
        end if;
    end process;

    i_op_assign_1_reg_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_op_assign_1_reg_300 <= init_buf_1_fu_572_p2;
            elsif (((exitcond3_fu_502_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_op_assign_1_reg_300 <= init_buf_fu_533_p1;
            end if; 
        end if;
    end process;

    i_op_assign_reg_289_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_502_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_op_assign_reg_289 <= init_row_ind_fu_508_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_op_assign_reg_289 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    row_ind_0_V_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_578_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                row_ind_0_V_reg_343 <= row_ind_2_V_2_load_reg_990;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                row_ind_0_V_reg_343 <= row_ind_1_V_1_reg_333;
            end if; 
        end if;
    end process;

    row_ind_1_V_1_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_578_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                row_ind_1_V_1_reg_333 <= row_ind_2_V_load_reg_996;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                row_ind_1_V_1_reg_333 <= zero_ind_V_reg_354;
            end if; 
        end if;
    end process;

    src_buf_0_1_reg_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_reg_1113_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_0_1_reg_438 <= buf_cop_0_V_1_reg_1164;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                src_buf_0_1_reg_438 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_1_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_reg_1113_pp1_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_1_reg_414 <= buf_cop_1_V_1_reg_1178;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                src_buf_1_1_reg_414 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_reg_1113_pp1_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_reg_426 <= buf_cop_1_V_2_reg_1203;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                src_buf_1_reg_426 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_1_reg_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_reg_1113_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_1_reg_390 <= buf_cop_2_V_1_reg_1171;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                src_buf_2_1_reg_390 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_reg_1113_pp1_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_reg_402 <= buf_cop_2_V_2_reg_1208;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                src_buf_2_reg_402 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_reg_1113_pp1_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_reg_450 <= storemerge_reg_462;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                src_buf_reg_450 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    storemerge_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if (((tmp_20_reg_1153_pp1_iter5_reg = ap_const_lv1_1) and (exitcond1_i_reg_1113_pp1_iter5_reg = ap_const_lv1_0))) then 
                    storemerge_reg_462 <= buf_cop_0_V_1_reg_1164;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    storemerge_reg_462 <= ap_phi_reg_pp1_iter6_storemerge_reg_462;
                end if;
            end if; 
        end if;
    end process;

    t_V_6_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_fu_541_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                t_V_6_reg_322 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                t_V_6_reg_322 <= col_V_2_reg_1049;
            end if; 
        end if;
    end process;

    t_V_7_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_578_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                t_V_7_reg_366 <= ap_const_lv10_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                t_V_7_reg_366 <= row_V_fu_961_p2;
            end if; 
        end if;
    end process;

    t_V_8_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_reg_1113 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                t_V_8_reg_378 <= col_V_3_reg_1117;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                t_V_8_reg_378 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_reg_1032 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_reg_310 <= col_V_reg_1036;
            elsif (((tmp_4_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                t_V_reg_310 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    zero_ind_V_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_578_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                zero_ind_V_reg_354 <= row_ind_2_V_1_load_reg_985;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                zero_ind_V_reg_354 <= row_ind_0_V_reg_343;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter1_storemerge_reg_462 <= ap_phi_reg_pp1_iter0_storemerge_reg_462;
                col_V_3_reg_1117 <= col_V_3_fu_675_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter2_storemerge_reg_462 <= ap_phi_reg_pp1_iter1_storemerge_reg_462;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter3_storemerge_reg_462 <= ap_phi_reg_pp1_iter2_storemerge_reg_462;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter4_storemerge_reg_462 <= ap_phi_reg_pp1_iter3_storemerge_reg_462;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter5_storemerge_reg_462 <= ap_phi_reg_pp1_iter4_storemerge_reg_462;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_578_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                buf_0_V_addr_reg_1054 <= tmp_8_fu_590_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_reg_1113_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                buf_cop_0_V_1_reg_1164 <= buf_cop_0_V_1_fu_778_p3;
                buf_cop_2_V_1_reg_1171 <= buf_cop_2_V_1_fu_785_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_reg_1113_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                buf_cop_1_V_1_reg_1178 <= buf_cop_1_V_1_fu_792_p3;
                buf_cop_1_V_2_reg_1203 <= buf_cop_1_V_2_fu_880_p3;
                buf_cop_2_V_2_reg_1208 <= buf_cop_2_V_2_fu_887_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_reg_1122_pp1_iter4_reg = ap_const_lv1_1) and (exitcond1_i_reg_1113_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                buf_cop_1_V_reg_1159 <= buf_cop_1_V_fu_738_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                col_V_2_reg_1049 <= col_V_2_fu_584_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_V_reg_1036 <= col_V_fu_559_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                exitcond1_i_reg_1113 <= exitcond1_i_fu_669_p2;
                exitcond1_i_reg_1113_pp1_iter1_reg <= exitcond1_i_reg_1113;
                or_cond_i_reg_1129_pp1_iter1_reg <= or_cond_i_reg_1129;
                t_V_8_reg_378_pp1_iter1_reg <= t_V_8_reg_378;
                tmp_11_reg_1122_pp1_iter1_reg <= tmp_11_reg_1122;
                tmp_29_reg_1133_pp1_iter1_reg <= tmp_29_reg_1133;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                exitcond1_i_reg_1113_pp1_iter2_reg <= exitcond1_i_reg_1113_pp1_iter1_reg;
                exitcond1_i_reg_1113_pp1_iter3_reg <= exitcond1_i_reg_1113_pp1_iter2_reg;
                exitcond1_i_reg_1113_pp1_iter4_reg <= exitcond1_i_reg_1113_pp1_iter3_reg;
                exitcond1_i_reg_1113_pp1_iter5_reg <= exitcond1_i_reg_1113_pp1_iter4_reg;
                exitcond1_i_reg_1113_pp1_iter6_reg <= exitcond1_i_reg_1113_pp1_iter5_reg;
                exitcond1_i_reg_1113_pp1_iter7_reg <= exitcond1_i_reg_1113_pp1_iter6_reg;
                src_buf_0_1_reg_438_pp1_iter6_reg <= src_buf_0_1_reg_438;
                src_buf_2_1_reg_390_pp1_iter6_reg <= src_buf_2_1_reg_390;
                t_V_8_reg_378_pp1_iter2_reg <= t_V_8_reg_378_pp1_iter1_reg;
                tmp_11_reg_1122_pp1_iter2_reg <= tmp_11_reg_1122_pp1_iter1_reg;
                tmp_11_reg_1122_pp1_iter3_reg <= tmp_11_reg_1122_pp1_iter2_reg;
                tmp_11_reg_1122_pp1_iter4_reg <= tmp_11_reg_1122_pp1_iter3_reg;
                tmp_11_reg_1122_pp1_iter5_reg <= tmp_11_reg_1122_pp1_iter4_reg;
                tmp_20_reg_1153_pp1_iter4_reg <= tmp_20_reg_1153;
                tmp_20_reg_1153_pp1_iter5_reg <= tmp_20_reg_1153_pp1_iter4_reg;
                tmp_20_reg_1153_pp1_iter6_reg <= tmp_20_reg_1153_pp1_iter5_reg;
                tmp_20_reg_1153_pp1_iter7_reg <= tmp_20_reg_1153_pp1_iter6_reg;
                tmp_29_reg_1133_pp1_iter2_reg <= tmp_29_reg_1133_pp1_iter1_reg;
                tmp_29_reg_1133_pp1_iter3_reg <= tmp_29_reg_1133_pp1_iter2_reg;
                tmp_29_reg_1133_pp1_iter4_reg <= tmp_29_reg_1133_pp1_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond2_reg_1032 <= exitcond2_fu_553_p2;
                t_V_reg_310_pp0_iter1_reg <= t_V_reg_310;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_reg_1113_pp1_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                g_x_V_reg_1213 <= g_x_V_fu_908_p2;
                g_y_V_reg_1218 <= g_y_V_fu_947_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_fu_669_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                or_cond_i_reg_1129 <= or_cond_i_fu_687_p2;
                tmp_11_reg_1122 <= tmp_11_fu_681_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                or_cond_reg_1093 <= or_cond_fu_652_p2;
                ret_V_1_reg_1088 <= ret_V_1_fu_646_p2;
                tmp_26_reg_1098 <= tmp_26_fu_657_p1;
                tmp_27_reg_1103 <= tmp_27_fu_661_p1;
                tmp_28_reg_1108 <= tmp_28_fu_665_p1;
                tmp_2_reg_1083 <= tmp_2_fu_630_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_predicate_op147_read_state15 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_474 <= p_src_mat_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((exitcond1_i_reg_1113_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then
                reg_481 <= buf_0_V_q0;
                reg_485 <= buf_1_V_q0;
                reg_489 <= buf_2_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_reg_1113_pp1_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ret_V_2_reg_1183 <= ret_V_2_fu_828_p2;
                ret_V_3_reg_1188 <= ret_V_3_fu_842_p2;
                    tmp_14_reg_1193(9 downto 1) <= tmp_14_fu_848_p2(9 downto 1);
                tmp_16_reg_1198 <= tmp_16_fu_874_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_502_p2 = ap_const_lv1_0) and (ap_phi_mux_i_op_assign_phi_fu_293_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_1_fu_134(1 downto 0) <= row_ind_0_V_1_fu_514_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    row_ind_2_V_1_load_reg_985(1 downto 0) <= row_ind_2_V_1_fu_134(1 downto 0);
                    row_ind_2_V_2_load_reg_990(1 downto 0) <= row_ind_2_V_2_fu_138(1 downto 0);
                    row_ind_2_V_load_reg_996(1 downto 0) <= row_ind_2_V_fu_142(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_502_p2 = ap_const_lv1_0) and (ap_phi_mux_i_op_assign_phi_fu_293_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_2_fu_138(1 downto 0) <= row_ind_0_V_1_fu_514_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_i_op_assign_phi_fu_293_p4 = ap_const_lv2_1)) and not((ap_phi_mux_i_op_assign_phi_fu_293_p4 = ap_const_lv2_0)) and (exitcond3_fu_502_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_fu_142(1 downto 0) <= row_ind_0_V_1_fu_514_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                tmp_17_reg_1070 <= tmp_17_fu_597_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_19_reg_1023 <= tmp_19_fu_546_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_reg_1113_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_20_reg_1153 <= tmp_20_fu_721_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_fu_541_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_24_reg_1027 <= tmp_24_fu_550_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_1093 = ap_const_lv1_1) and (exitcond1_i_fu_669_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_29_reg_1133 <= tmp_29_fu_703_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_502_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    tmp_3_reg_1014(1 downto 0) <= tmp_3_fu_537_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_608_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                tmp_42_2_reg_1078 <= tmp_42_2_fu_624_p2;
            end if;
        end if;
    end process;
    row_ind_2_V_1_load_reg_985(12 downto 2) <= "00000000000";
    row_ind_2_V_2_load_reg_990(12 downto 2) <= "00000000000";
    row_ind_2_V_load_reg_996(12 downto 2) <= "00000000000";
    tmp_3_reg_1014(31 downto 2) <= "000000000000000000000000000000";
    tmp_14_reg_1193(0) <= '0';
    row_ind_2_V_1_fu_134(12 downto 2) <= "00000000000";
    row_ind_2_V_2_fu_138(12 downto 2) <= "00000000000";
    row_ind_2_V_fu_142(12 downto 2) <= "00000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter4, ap_CS_fsm_state2, exitcond3_fu_502_p2, tmp_4_fu_541_p2, ap_CS_fsm_state3, exitcond2_fu_553_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state8, exitcond1_fu_578_p2, ap_CS_fsm_state12, exitcond_fu_608_p2, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond3_fu_502_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_4_fu_541_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond2_fu_553_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((exitcond2_fu_553_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state8 => 
                if (((exitcond1_fu_578_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state12 => 
                if (((exitcond_fu_608_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0))) and not(((ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(7);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state13 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(12);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(5);
    ap_CS_fsm_state9 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_src_mat_V_V_empty_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_mat_V_V_empty_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_src_mat_V_V_empty_n, p_out_mat_V_V_full_n, p_out_mat1_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_predicate_op147_read_state15, ap_predicate_op222_write_state22, ap_predicate_op223_write_state22)
    begin
                ap_block_pp1_stage0_01001 <= (((ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (((p_out_mat1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op223_write_state22 = ap_const_boolean_1)) or ((p_out_mat_V_V_full_n = ap_const_logic_0) and (ap_predicate_op222_write_state22 = ap_const_boolean_1)))) or ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state15 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_src_mat_V_V_empty_n, p_out_mat_V_V_full_n, p_out_mat1_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_predicate_op147_read_state15, ap_predicate_op222_write_state22, ap_predicate_op223_write_state22)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (((p_out_mat1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op223_write_state22 = ap_const_boolean_1)) or ((p_out_mat_V_V_full_n = ap_const_logic_0) and (ap_predicate_op222_write_state22 = ap_const_boolean_1)))) or ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state15 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_src_mat_V_V_empty_n, p_out_mat_V_V_full_n, p_out_mat1_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_predicate_op147_read_state15, ap_predicate_op222_write_state22, ap_predicate_op223_write_state22)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (((p_out_mat1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op223_write_state22 = ap_const_boolean_1)) or ((p_out_mat_V_V_full_n = ap_const_logic_0) and (ap_predicate_op222_write_state22 = ap_const_boolean_1)))) or ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state15 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state14_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_pp1_stage0_iter1_assign_proc : process(p_src_mat_V_V_empty_n, ap_predicate_op147_read_state15)
    begin
                ap_block_state15_pp1_stage0_iter1 <= ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state15 = ap_const_boolean_1));
    end process;

        ap_block_state16_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state22_pp1_stage0_iter8_assign_proc : process(p_out_mat_V_V_full_n, p_out_mat1_V_V_full_n, ap_predicate_op222_write_state22, ap_predicate_op223_write_state22)
    begin
                ap_block_state22_pp1_stage0_iter8 <= (((p_out_mat1_V_V_full_n = ap_const_logic_0) and (ap_predicate_op223_write_state22 = ap_const_boolean_1)) or ((p_out_mat_V_V_full_n = ap_const_logic_0) and (ap_predicate_op222_write_state22 = ap_const_boolean_1)));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(p_src_mat_V_V_empty_n)
    begin
                ap_block_state5_pp0_stage0_iter1 <= (p_src_mat_V_V_empty_n = ap_const_logic_0);
    end process;

        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(exitcond2_fu_553_p2)
    begin
        if ((exitcond2_fu_553_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter5_state19_assign_proc : process(ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0))) then 
            ap_condition_pp1_exit_iter5_state19 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter5_state19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state12, exitcond_fu_608_p2)
    begin
        if ((((exitcond_fu_608_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter7)
    begin
        if (((ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_i_op_assign_phi_fu_293_p4 <= i_op_assign_reg_289;

    ap_phi_mux_src_buf_0_1_phi_fu_442_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_0_1_reg_438, exitcond1_i_reg_1113_pp1_iter5_reg, buf_cop_0_V_1_reg_1164, ap_enable_reg_pp1_iter6)
    begin
        if (((exitcond1_i_reg_1113_pp1_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_0_1_phi_fu_442_p4 <= buf_cop_0_V_1_reg_1164;
        else 
            ap_phi_mux_src_buf_0_1_phi_fu_442_p4 <= src_buf_0_1_reg_438;
        end if; 
    end process;


    ap_phi_mux_src_buf_1_1_phi_fu_418_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_1_1_reg_414, exitcond1_i_reg_1113_pp1_iter6_reg, buf_cop_1_V_1_reg_1178, ap_enable_reg_pp1_iter7)
    begin
        if (((exitcond1_i_reg_1113_pp1_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_1_1_phi_fu_418_p4 <= buf_cop_1_V_1_reg_1178;
        else 
            ap_phi_mux_src_buf_1_1_phi_fu_418_p4 <= src_buf_1_1_reg_414;
        end if; 
    end process;


    ap_phi_mux_src_buf_1_phi_fu_430_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_1_reg_426, exitcond1_i_reg_1113_pp1_iter6_reg, buf_cop_1_V_2_reg_1203, ap_enable_reg_pp1_iter7)
    begin
        if (((exitcond1_i_reg_1113_pp1_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_1_phi_fu_430_p4 <= buf_cop_1_V_2_reg_1203;
        else 
            ap_phi_mux_src_buf_1_phi_fu_430_p4 <= src_buf_1_reg_426;
        end if; 
    end process;


    ap_phi_mux_src_buf_2_1_phi_fu_394_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_2_1_reg_390, exitcond1_i_reg_1113_pp1_iter5_reg, buf_cop_2_V_1_reg_1171, ap_enable_reg_pp1_iter6)
    begin
        if (((exitcond1_i_reg_1113_pp1_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_2_1_phi_fu_394_p4 <= buf_cop_2_V_1_reg_1171;
        else 
            ap_phi_mux_src_buf_2_1_phi_fu_394_p4 <= src_buf_2_1_reg_390;
        end if; 
    end process;


    ap_phi_mux_src_buf_2_phi_fu_406_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_2_reg_402, exitcond1_i_reg_1113_pp1_iter6_reg, buf_cop_2_V_2_reg_1208, ap_enable_reg_pp1_iter7)
    begin
        if (((exitcond1_i_reg_1113_pp1_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_2_phi_fu_406_p4 <= buf_cop_2_V_2_reg_1208;
        else 
            ap_phi_mux_src_buf_2_phi_fu_406_p4 <= src_buf_2_reg_402;
        end if; 
    end process;


    ap_phi_mux_src_buf_phi_fu_454_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_reg_450, storemerge_reg_462, exitcond1_i_reg_1113_pp1_iter6_reg, ap_enable_reg_pp1_iter7)
    begin
        if (((exitcond1_i_reg_1113_pp1_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_phi_fu_454_p4 <= storemerge_reg_462;
        else 
            ap_phi_mux_src_buf_phi_fu_454_p4 <= src_buf_reg_450;
        end if; 
    end process;


    ap_phi_mux_t_V_8_phi_fu_382_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond1_i_reg_1113, t_V_8_reg_378, col_V_3_reg_1117)
    begin
        if (((exitcond1_i_reg_1113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_t_V_8_phi_fu_382_p4 <= col_V_3_reg_1117;
        else 
            ap_phi_mux_t_V_8_phi_fu_382_p4 <= t_V_8_reg_378;
        end if; 
    end process;


    ap_phi_mux_t_V_phi_fu_314_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, t_V_reg_310, exitcond2_reg_1032, col_V_reg_1036)
    begin
        if (((exitcond2_reg_1032 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_t_V_phi_fu_314_p4 <= col_V_reg_1036;
        else 
            ap_phi_mux_t_V_phi_fu_314_p4 <= t_V_reg_310;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_storemerge_reg_462 <= "XXXXXXXX";

    ap_predicate_op147_read_state15_assign_proc : process(exitcond1_i_reg_1113, or_cond_i_reg_1129)
    begin
                ap_predicate_op147_read_state15 <= ((or_cond_i_reg_1129 = ap_const_lv1_1) and (exitcond1_i_reg_1113 = ap_const_lv1_0));
    end process;


    ap_predicate_op222_write_state22_assign_proc : process(exitcond1_i_reg_1113_pp1_iter7_reg, tmp_20_reg_1153_pp1_iter7_reg)
    begin
                ap_predicate_op222_write_state22 <= ((tmp_20_reg_1153_pp1_iter7_reg = ap_const_lv1_0) and (exitcond1_i_reg_1113_pp1_iter7_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op223_write_state22_assign_proc : process(exitcond1_i_reg_1113_pp1_iter7_reg, tmp_20_reg_1153_pp1_iter7_reg)
    begin
                ap_predicate_op223_write_state22 <= ((tmp_20_reg_1153_pp1_iter7_reg = ap_const_lv1_0) and (exitcond1_i_reg_1113_pp1_iter7_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12, exitcond_fu_608_p2)
    begin
        if (((exitcond_fu_608_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state8, ap_enable_reg_pp1_iter3, tmp_8_fu_590_p1, tmp_13_fu_714_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            buf_0_V_address0 <= tmp_13_fu_714_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_0_V_address0 <= tmp_8_fu_590_p1(11 - 1 downto 0);
        else 
            buf_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_address1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, buf_0_V_addr_reg_1054, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state11, tmp_7_fu_565_p1, tmp_12_fu_707_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_address1 <= tmp_12_fu_707_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf_0_V_address1 <= buf_0_V_addr_reg_1054;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_0_V_address1 <= tmp_7_fu_565_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state8, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, reg_474, tmp_17_reg_1070, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf_0_V_d1 <= tmp_17_reg_1070;
        elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buf_0_V_d1 <= reg_474;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, tmp_19_reg_1023, tmp_26_reg_1098, exitcond1_i_reg_1113_pp1_iter1_reg, or_cond_i_reg_1129_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((or_cond_i_reg_1129_pp1_iter1_reg = ap_const_lv1_1) and (exitcond1_i_reg_1113_pp1_iter1_reg = ap_const_lv1_0) and (tmp_26_reg_1098 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_19_reg_1023 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state8, ap_enable_reg_pp1_iter3, tmp_8_fu_590_p1, tmp_13_fu_714_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            buf_1_V_address0 <= tmp_13_fu_714_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_1_V_address0 <= tmp_8_fu_590_p1(11 - 1 downto 0);
        else 
            buf_1_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_address1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, tmp_7_fu_565_p1, tmp_12_fu_707_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_address1 <= tmp_12_fu_707_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_1_V_address1 <= tmp_7_fu_565_p1(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state8, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, tmp_19_reg_1023, tmp_26_reg_1098, exitcond1_i_reg_1113_pp1_iter1_reg, or_cond_i_reg_1129_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((or_cond_i_reg_1129_pp1_iter1_reg = ap_const_lv1_1) and (exitcond1_i_reg_1113_pp1_iter1_reg = ap_const_lv1_0) and (tmp_26_reg_1098 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_19_reg_1023 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state8, ap_enable_reg_pp1_iter3, tmp_8_fu_590_p1, tmp_13_fu_714_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            buf_2_V_address0 <= tmp_13_fu_714_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_2_V_address0 <= tmp_8_fu_590_p1(11 - 1 downto 0);
        else 
            buf_2_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_address1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, tmp_7_fu_565_p1, tmp_12_fu_707_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_2_V_address1 <= tmp_12_fu_707_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_2_V_address1 <= tmp_7_fu_565_p1(11 - 1 downto 0);
        else 
            buf_2_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state8, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, tmp_19_reg_1023, tmp_26_reg_1098, exitcond1_i_reg_1113_pp1_iter1_reg, or_cond_i_reg_1129_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if (((not((tmp_26_reg_1098 = ap_const_lv2_0)) and not((tmp_26_reg_1098 = ap_const_lv2_1)) and (or_cond_i_reg_1129_pp1_iter1_reg = ap_const_lv1_1) and (exitcond1_i_reg_1113_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((tmp_19_reg_1023 = ap_const_lv2_0)) and not((tmp_19_reg_1023 = ap_const_lv2_1)) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_cop_0_V_1_fu_778_p3 <= 
        buf_cop_0_V_fu_727_p5 when (tmp_11_reg_1122_pp1_iter4_reg(0) = '1') else 
        ap_phi_mux_src_buf_0_1_phi_fu_442_p4;
    buf_cop_1_V_1_fu_792_p3 <= 
        buf_cop_1_V_reg_1159 when (tmp_11_reg_1122_pp1_iter5_reg(0) = '1') else 
        ap_phi_mux_src_buf_1_1_phi_fu_418_p4;
    buf_cop_1_V_2_fu_880_p3 <= 
        buf_cop_1_V_1_fu_792_p3 when (tmp_20_reg_1153_pp1_iter5_reg(0) = '1') else 
        ap_phi_mux_src_buf_1_1_phi_fu_418_p4;
    buf_cop_2_V_1_fu_785_p3 <= 
        buf_cop_2_V_fu_771_p3 when (tmp_11_reg_1122_pp1_iter4_reg(0) = '1') else 
        ap_phi_mux_src_buf_2_1_phi_fu_394_p4;
    buf_cop_2_V_2_fu_887_p3 <= 
        buf_cop_2_V_1_reg_1171 when (tmp_20_reg_1153_pp1_iter5_reg(0) = '1') else 
        src_buf_2_1_reg_390;
    buf_cop_2_V_fu_771_p3 <= 
        tmp_22_fu_749_p5 when (or_cond_reg_1093(0) = '1') else 
        tmp_23_fu_760_p5;
    col_V_2_fu_584_p2 <= std_logic_vector(unsigned(t_V_6_reg_322) + unsigned(ap_const_lv11_1));
    col_V_3_fu_675_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_8_phi_fu_382_p4) + unsigned(ap_const_lv11_1));
    col_V_fu_559_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_phi_fu_314_p4) + unsigned(ap_const_lv11_1));
    exitcond1_fu_578_p2 <= "1" when (t_V_6_reg_322 = ap_const_lv11_500) else "0";
    exitcond1_i_fu_669_p2 <= "1" when (ap_phi_mux_t_V_8_phi_fu_382_p4 = ap_const_lv11_501) else "0";
    exitcond2_fu_553_p2 <= "1" when (ap_phi_mux_t_V_phi_fu_314_p4 = ap_const_lv11_500) else "0";
    exitcond3_fu_502_p2 <= "1" when (i_op_assign_reg_289 = ap_const_lv2_3) else "0";
    exitcond_fu_608_p2 <= "1" when (t_V_7_reg_366 = ap_const_lv10_2D1) else "0";
    g_x_V_fu_908_p2 <= std_logic_vector(unsigned(tmp_15_fu_902_p2) - unsigned(tmp_46_cast_fu_896_p1));
    g_y_V_fu_947_p2 <= std_logic_vector(unsigned(tmp_18_fu_941_p2) + unsigned(r_V_3_cast_fu_934_p1));
    init_buf_1_fu_572_p2 <= std_logic_vector(unsigned(i_op_assign_1_reg_300) + unsigned(ap_const_lv32_1));
    init_buf_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_2_V_2_fu_138),32));
    init_row_ind_fu_508_p2 <= std_logic_vector(unsigned(i_op_assign_reg_289) + unsigned(ap_const_lv2_1));
    lhs_V_1_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_src_buf_phi_fu_454_p4),9));
    lhs_V_cast_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_7_reg_366),11));
    lhs_V_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_cop_0_V_1_reg_1164),9));
    or_cond_fu_652_p2 <= (tmp_9_fu_636_p2 and tmp_42_2_reg_1078);
    or_cond_i_fu_687_p2 <= (tmp_2_reg_1083 and tmp_11_fu_681_p2);

    p_out_mat1_V_V_blk_n_assign_proc : process(p_out_mat1_V_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter8, exitcond1_i_reg_1113_pp1_iter7_reg, tmp_20_reg_1153_pp1_iter7_reg)
    begin
        if (((tmp_20_reg_1153_pp1_iter7_reg = ap_const_lv1_0) and (exitcond1_i_reg_1113_pp1_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1))) then 
            p_out_mat1_V_V_blk_n <= p_out_mat1_V_V_full_n;
        else 
            p_out_mat1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        p_out_mat1_V_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(g_y_V_reg_1218),16));


    p_out_mat1_V_V_write_assign_proc : process(ap_enable_reg_pp1_iter8, ap_predicate_op223_write_state22, ap_block_pp1_stage0_11001)
    begin
        if (((ap_predicate_op223_write_state22 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            p_out_mat1_V_V_write <= ap_const_logic_1;
        else 
            p_out_mat1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_out_mat_V_V_blk_n_assign_proc : process(p_out_mat_V_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter8, exitcond1_i_reg_1113_pp1_iter7_reg, tmp_20_reg_1153_pp1_iter7_reg)
    begin
        if (((tmp_20_reg_1153_pp1_iter7_reg = ap_const_lv1_0) and (exitcond1_i_reg_1113_pp1_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1))) then 
            p_out_mat_V_V_blk_n <= p_out_mat_V_V_full_n;
        else 
            p_out_mat_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        p_out_mat_V_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(g_x_V_reg_1213),16));


    p_out_mat_V_V_write_assign_proc : process(ap_enable_reg_pp1_iter8, ap_predicate_op222_write_state22, ap_block_pp1_stage0_11001)
    begin
        if (((ap_predicate_op222_write_state22 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            p_out_mat_V_V_write <= ap_const_logic_1;
        else 
            p_out_mat_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_mat_V_V_blk_n_assign_proc : process(p_src_mat_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond1_i_reg_1113, or_cond_i_reg_1129)
    begin
        if ((((or_cond_i_reg_1129 = ap_const_lv1_1) and (exitcond1_i_reg_1113 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_mat_V_V_blk_n <= p_src_mat_V_V_empty_n;
        else 
            p_src_mat_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_mat_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_11001, ap_predicate_op147_read_state15, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_predicate_op147_read_state15 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_mat_V_V_read <= ap_const_logic_1;
        else 
            p_src_mat_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_1_cast_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_1_fu_810_p3),10));
    r_V_1_fu_810_p3 <= (buf_cop_1_V_1_fu_792_p3 & ap_const_lv1_0);
    r_V_2_cast_fu_922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_2_fu_914_p3),11));
    r_V_2_fu_914_p3 <= (src_buf_0_1_reg_438_pp1_iter6_reg & ap_const_lv1_0);
    r_V_3_cast_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_fu_926_p3),11));
    r_V_3_fu_926_p3 <= (src_buf_2_1_reg_390_pp1_iter6_reg & ap_const_lv1_0);
    r_V_cast_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_798_p3),10));
    r_V_fu_798_p3 <= (ap_phi_mux_src_buf_1_phi_fu_430_p4 & ap_const_lv1_0);
    ret_V_1_fu_646_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) - unsigned(tmp_25_fu_642_p1));
    ret_V_2_fu_828_p2 <= std_logic_vector(unsigned(rhs_V_fu_825_p1) + unsigned(lhs_V_fu_822_p1));
    ret_V_3_fu_842_p2 <= std_logic_vector(unsigned(rhs_V_3_fu_838_p1) + unsigned(lhs_V_1_fu_834_p1));
    ret_V_4_fu_854_p2 <= std_logic_vector(unsigned(rhs_V_3_fu_838_p1) + unsigned(rhs_V_fu_825_p1));
    ret_V_5_fu_860_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_834_p1) + unsigned(lhs_V_fu_822_p1));
    ret_V_fu_618_p2 <= std_logic_vector(signed(ap_const_lv11_531) + signed(lhs_V_cast_fu_614_p1));
    rhs_V_3_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_src_buf_2_phi_fu_406_p4),9));
    rhs_V_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_cop_2_V_1_reg_1171),9));
    row_V_fu_961_p2 <= std_logic_vector(unsigned(t_V_7_reg_366) + unsigned(ap_const_lv10_1));
    row_ind_0_V_1_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_reg_289),13));
    tmp_11_fu_681_p2 <= "1" when (unsigned(ap_phi_mux_t_V_8_phi_fu_382_p4) < unsigned(ap_const_lv11_500)) else "0";
    tmp_12_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_8_reg_378_pp1_iter1_reg),64));
    tmp_13_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_8_reg_378_pp1_iter2_reg),64));
    tmp_14_fu_848_p2 <= std_logic_vector(unsigned(r_V_1_cast_fu_818_p1) - unsigned(r_V_cast_fu_806_p1));
    tmp_15_fu_902_p2 <= std_logic_vector(signed(tmp_47_cast_fu_899_p1) + signed(tmp_45_cast_fu_893_p1));
    tmp_16_fu_874_p2 <= std_logic_vector(unsigned(tmp_51_cast_fu_866_p1) - unsigned(tmp_52_cast_fu_870_p1));
    tmp_18_fu_941_p2 <= std_logic_vector(signed(tmp_53_cast_fu_938_p1) - signed(r_V_2_cast_fu_922_p1));
    tmp_19_fu_546_p1 <= i_op_assign_1_reg_300(2 - 1 downto 0);
    tmp_20_fu_721_p2 <= "1" when (t_V_8_reg_378_pp1_iter2_reg = ap_const_lv11_0) else "0";
    tmp_24_fu_550_p1 <= row_ind_2_V_2_load_reg_990(2 - 1 downto 0);
    tmp_25_fu_642_p1 <= t_V_7_reg_366(2 - 1 downto 0);
    tmp_26_fu_657_p1 <= row_ind_1_V_1_reg_333(2 - 1 downto 0);
    tmp_27_fu_661_p1 <= zero_ind_V_reg_354(2 - 1 downto 0);
    tmp_28_fu_665_p1 <= row_ind_0_V_reg_343(2 - 1 downto 0);
    tmp_29_fu_703_p1 <= tmp_21_fu_692_p5(2 - 1 downto 0);
    tmp_2_fu_630_p2 <= "1" when (unsigned(t_V_7_reg_366) < unsigned(ap_const_lv10_2D0)) else "0";
    tmp_3_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_2_V_fu_142),32));
    tmp_42_2_fu_624_p2 <= "1" when (signed(ret_V_fu_618_p2) > signed(ap_const_lv11_0)) else "0";
    tmp_45_cast_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_2_reg_1183),11));
    tmp_46_cast_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_3_reg_1188),11));
        tmp_47_cast_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_14_reg_1193),11));

    tmp_4_fu_541_p2 <= "1" when (signed(i_op_assign_1_reg_300) < signed(tmp_3_reg_1014)) else "0";
    tmp_51_cast_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_4_fu_854_p2),10));
    tmp_52_cast_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_5_fu_860_p2),10));
        tmp_53_cast_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_reg_1198),11));

    tmp_7_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_310_pp0_iter1_reg),64));
    tmp_8_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_6_reg_322),64));
    tmp_9_fu_636_p2 <= "1" when (unsigned(t_V_7_reg_366) > unsigned(ap_const_lv10_2CF)) else "0";
end behav;
