-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xFCannyKernel is
port (
    p_src_mat_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_mat_V_V_empty_n : IN STD_LOGIC;
    p_src_mat_V_V_read : OUT STD_LOGIC;
    p_dst_mat_V_V_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_dst_mat_V_V_full_n : IN STD_LOGIC;
    p_dst_mat_V_V_write : OUT STD_LOGIC;
    p_lowthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
    p_highthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_lowthreshold_ap_vld : IN STD_LOGIC;
    p_highthreshold_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of xFCannyKernel is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal xFAverageGaussianMas_U0_ap_start : STD_LOGIC;
    signal xFAverageGaussianMas_U0_start_full_n : STD_LOGIC;
    signal xFAverageGaussianMas_U0_ap_done : STD_LOGIC;
    signal xFAverageGaussianMas_U0_ap_continue : STD_LOGIC;
    signal xFAverageGaussianMas_U0_ap_idle : STD_LOGIC;
    signal xFAverageGaussianMas_U0_ap_ready : STD_LOGIC;
    signal xFAverageGaussianMas_U0_start_out : STD_LOGIC;
    signal xFAverageGaussianMas_U0_start_write : STD_LOGIC;
    signal xFAverageGaussianMas_U0_p_src_mat_V_V_read : STD_LOGIC;
    signal xFAverageGaussianMas_U0_p_out_mat_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFAverageGaussianMas_U0_p_out_mat_V_V_write : STD_LOGIC;
    signal xFAverageGaussianMas_U0_p_lowthreshold_out_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFAverageGaussianMas_U0_p_lowthreshold_out_write : STD_LOGIC;
    signal xFAverageGaussianMas_U0_p_highthreshold_out_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFAverageGaussianMas_U0_p_highthreshold_out_write : STD_LOGIC;
    signal xFSobel_U0_ap_start : STD_LOGIC;
    signal xFSobel_U0_ap_done : STD_LOGIC;
    signal xFSobel_U0_ap_continue : STD_LOGIC;
    signal xFSobel_U0_ap_idle : STD_LOGIC;
    signal xFSobel_U0_ap_ready : STD_LOGIC;
    signal xFSobel_U0_start_out : STD_LOGIC;
    signal xFSobel_U0_start_write : STD_LOGIC;
    signal xFSobel_U0_p_src_V_V_read : STD_LOGIC;
    signal xFSobel_U0_p_dst_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFSobel_U0_p_dst_V_V_write : STD_LOGIC;
    signal xFSobel_U0_p_dst1_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFSobel_U0_p_dst1_V_V_write : STD_LOGIC;
    signal xFDuplicate_rows_U0_ap_start : STD_LOGIC;
    signal xFDuplicate_rows_U0_start_full_n : STD_LOGIC;
    signal xFDuplicate_rows_U0_ap_done : STD_LOGIC;
    signal xFDuplicate_rows_U0_ap_continue : STD_LOGIC;
    signal xFDuplicate_rows_U0_ap_idle : STD_LOGIC;
    signal xFDuplicate_rows_U0_ap_ready : STD_LOGIC;
    signal xFDuplicate_rows_U0_start_out : STD_LOGIC;
    signal xFDuplicate_rows_U0_start_write : STD_LOGIC;
    signal xFDuplicate_rows_U0_p_src_mat_V_V_read : STD_LOGIC;
    signal xFDuplicate_rows_U0_p_src_mat1_V_V_read : STD_LOGIC;
    signal xFDuplicate_rows_U0_p_dst1_mat_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFDuplicate_rows_U0_p_dst1_mat_V_V_write : STD_LOGIC;
    signal xFDuplicate_rows_U0_p_dst2_mat_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFDuplicate_rows_U0_p_dst2_mat_V_V_write : STD_LOGIC;
    signal xFDuplicate_rows_U0_p_dst1_out_mat_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFDuplicate_rows_U0_p_dst1_out_mat_V_V_write : STD_LOGIC;
    signal xFDuplicate_rows_U0_p_dst2_out_mat_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFDuplicate_rows_U0_p_dst2_out_mat_V_V_write : STD_LOGIC;
    signal xFMagnitudeKernel_U0_ap_start : STD_LOGIC;
    signal xFMagnitudeKernel_U0_ap_done : STD_LOGIC;
    signal xFMagnitudeKernel_U0_ap_continue : STD_LOGIC;
    signal xFMagnitudeKernel_U0_ap_idle : STD_LOGIC;
    signal xFMagnitudeKernel_U0_ap_ready : STD_LOGIC;
    signal xFMagnitudeKernel_U0_p_src1_V_V_read : STD_LOGIC;
    signal xFMagnitudeKernel_U0_p_src2_V_V_read : STD_LOGIC;
    signal xFMagnitudeKernel_U0_p_dst_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFMagnitudeKernel_U0_p_dst_V_V_write : STD_LOGIC;
    signal xFAngleKernel_U0_ap_start : STD_LOGIC;
    signal xFAngleKernel_U0_ap_done : STD_LOGIC;
    signal xFAngleKernel_U0_ap_continue : STD_LOGIC;
    signal xFAngleKernel_U0_ap_idle : STD_LOGIC;
    signal xFAngleKernel_U0_ap_ready : STD_LOGIC;
    signal xFAngleKernel_U0_p_src1_V_V_read : STD_LOGIC;
    signal xFAngleKernel_U0_p_src2_V_V_read : STD_LOGIC;
    signal xFAngleKernel_U0_p_dst_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFAngleKernel_U0_p_dst_V_V_write : STD_LOGIC;
    signal xFSuppression3x3_U0_ap_start : STD_LOGIC;
    signal xFSuppression3x3_U0_ap_done : STD_LOGIC;
    signal xFSuppression3x3_U0_ap_continue : STD_LOGIC;
    signal xFSuppression3x3_U0_ap_idle : STD_LOGIC;
    signal xFSuppression3x3_U0_ap_ready : STD_LOGIC;
    signal xFSuppression3x3_U0_p_magnitude_mat_V_V_read : STD_LOGIC;
    signal xFSuppression3x3_U0_p_phase_mat_V_V_read : STD_LOGIC;
    signal xFSuppression3x3_U0_p_dst_mat_V_V_din : STD_LOGIC_VECTOR (1 downto 0);
    signal xFSuppression3x3_U0_p_dst_mat_V_V_write : STD_LOGIC;
    signal xFSuppression3x3_U0_low_threshold_read : STD_LOGIC;
    signal xFSuppression3x3_U0_high_threshold_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal gaussian_mat_V_V_full_n : STD_LOGIC;
    signal gaussian_mat_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal gaussian_mat_V_V_empty_n : STD_LOGIC;
    signal p_lowthreshold_c_full_n : STD_LOGIC;
    signal p_lowthreshold_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_lowthreshold_c_empty_n : STD_LOGIC;
    signal p_highthreshold_c_full_n : STD_LOGIC;
    signal p_highthreshold_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_highthreshold_c_empty_n : STD_LOGIC;
    signal gradx_mat_V_V_full_n : STD_LOGIC;
    signal gradx_mat_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal gradx_mat_V_V_empty_n : STD_LOGIC;
    signal grady_mat_V_V_full_n : STD_LOGIC;
    signal grady_mat_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal grady_mat_V_V_empty_n : STD_LOGIC;
    signal gradx1_mat_V_V_full_n : STD_LOGIC;
    signal gradx1_mat_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal gradx1_mat_V_V_empty_n : STD_LOGIC;
    signal gradx2_mat_V_V_full_n : STD_LOGIC;
    signal gradx2_mat_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal gradx2_mat_V_V_empty_n : STD_LOGIC;
    signal grady1_mat_V_V_full_n : STD_LOGIC;
    signal grady1_mat_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal grady1_mat_V_V_empty_n : STD_LOGIC;
    signal grady2_mat_V_V_full_n : STD_LOGIC;
    signal grady2_mat_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal grady2_mat_V_V_empty_n : STD_LOGIC;
    signal magnitude_mat_V_V_full_n : STD_LOGIC;
    signal magnitude_mat_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal magnitude_mat_V_V_empty_n : STD_LOGIC;
    signal phase_mat_V_V_full_n : STD_LOGIC;
    signal phase_mat_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal phase_mat_V_V_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_xFSobel_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSobel_U0_full_n : STD_LOGIC;
    signal start_for_xFSobel_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSobel_U0_empty_n : STD_LOGIC;
    signal start_for_xFSuppression3x3_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSuppression3x3_U0_full_n : STD_LOGIC;
    signal start_for_xFSuppression3x3_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSuppression3x3_U0_empty_n : STD_LOGIC;
    signal start_for_xFDuplicate_rows_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFDuplicate_rows_U0_full_n : STD_LOGIC;
    signal start_for_xFDuplicate_rows_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFDuplicate_rows_U0_empty_n : STD_LOGIC;
    signal start_for_xFMagnitudeKernel_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFMagnitudeKernel_U0_full_n : STD_LOGIC;
    signal start_for_xFMagnitudeKernel_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFMagnitudeKernel_U0_empty_n : STD_LOGIC;
    signal start_for_xFAngleKernel_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFAngleKernel_U0_full_n : STD_LOGIC;
    signal start_for_xFAngleKernel_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFAngleKernel_U0_empty_n : STD_LOGIC;
    signal xFMagnitudeKernel_U0_start_full_n : STD_LOGIC;
    signal xFMagnitudeKernel_U0_start_write : STD_LOGIC;
    signal xFAngleKernel_U0_start_full_n : STD_LOGIC;
    signal xFAngleKernel_U0_start_write : STD_LOGIC;
    signal xFSuppression3x3_U0_start_full_n : STD_LOGIC;
    signal xFSuppression3x3_U0_start_write : STD_LOGIC;

    component xFAverageGaussianMas IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_src_mat_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_mat_V_V_empty_n : IN STD_LOGIC;
        p_src_mat_V_V_read : OUT STD_LOGIC;
        p_out_mat_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_out_mat_V_V_full_n : IN STD_LOGIC;
        p_out_mat_V_V_write : OUT STD_LOGIC;
        p_lowthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
        p_highthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
        p_lowthreshold_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_lowthreshold_out_full_n : IN STD_LOGIC;
        p_lowthreshold_out_write : OUT STD_LOGIC;
        p_highthreshold_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_highthreshold_out_full_n : IN STD_LOGIC;
        p_highthreshold_out_write : OUT STD_LOGIC );
    end component;


    component xFSobel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_src_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_V_V_empty_n : IN STD_LOGIC;
        p_src_V_V_read : OUT STD_LOGIC;
        p_dst_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_dst_V_V_full_n : IN STD_LOGIC;
        p_dst_V_V_write : OUT STD_LOGIC;
        p_dst1_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_dst1_V_V_full_n : IN STD_LOGIC;
        p_dst1_V_V_write : OUT STD_LOGIC );
    end component;


    component xFDuplicate_rows IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_src_mat_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        p_src_mat_V_V_empty_n : IN STD_LOGIC;
        p_src_mat_V_V_read : OUT STD_LOGIC;
        p_src_mat1_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        p_src_mat1_V_V_empty_n : IN STD_LOGIC;
        p_src_mat1_V_V_read : OUT STD_LOGIC;
        p_dst1_mat_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_dst1_mat_V_V_full_n : IN STD_LOGIC;
        p_dst1_mat_V_V_write : OUT STD_LOGIC;
        p_dst2_mat_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_dst2_mat_V_V_full_n : IN STD_LOGIC;
        p_dst2_mat_V_V_write : OUT STD_LOGIC;
        p_dst1_out_mat_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_dst1_out_mat_V_V_full_n : IN STD_LOGIC;
        p_dst1_out_mat_V_V_write : OUT STD_LOGIC;
        p_dst2_out_mat_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_dst2_out_mat_V_V_full_n : IN STD_LOGIC;
        p_dst2_out_mat_V_V_write : OUT STD_LOGIC );
    end component;


    component xFMagnitudeKernel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src1_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        p_src1_V_V_empty_n : IN STD_LOGIC;
        p_src1_V_V_read : OUT STD_LOGIC;
        p_src2_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        p_src2_V_V_empty_n : IN STD_LOGIC;
        p_src2_V_V_read : OUT STD_LOGIC;
        p_dst_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_dst_V_V_full_n : IN STD_LOGIC;
        p_dst_V_V_write : OUT STD_LOGIC );
    end component;


    component xFAngleKernel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src1_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        p_src1_V_V_empty_n : IN STD_LOGIC;
        p_src1_V_V_read : OUT STD_LOGIC;
        p_src2_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        p_src2_V_V_empty_n : IN STD_LOGIC;
        p_src2_V_V_read : OUT STD_LOGIC;
        p_dst_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_V_V_full_n : IN STD_LOGIC;
        p_dst_V_V_write : OUT STD_LOGIC );
    end component;


    component xFSuppression3x3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_magnitude_mat_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        p_magnitude_mat_V_V_empty_n : IN STD_LOGIC;
        p_magnitude_mat_V_V_read : OUT STD_LOGIC;
        p_phase_mat_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_phase_mat_V_V_empty_n : IN STD_LOGIC;
        p_phase_mat_V_V_read : OUT STD_LOGIC;
        p_dst_mat_V_V_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        p_dst_mat_V_V_full_n : IN STD_LOGIC;
        p_dst_mat_V_V_write : OUT STD_LOGIC;
        low_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        low_threshold_empty_n : IN STD_LOGIC;
        low_threshold_read : OUT STD_LOGIC;
        high_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        high_threshold_empty_n : IN STD_LOGIC;
        high_threshold_read : OUT STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d5_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w16_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w16_d3840_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_xFSobelncg IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_xFSupprocq IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_xFDuplipcA IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_xFMagniqcK IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_xFAnglercU IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    xFAverageGaussianMas_U0 : component xFAverageGaussianMas
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFAverageGaussianMas_U0_ap_start,
        start_full_n => xFAverageGaussianMas_U0_start_full_n,
        ap_done => xFAverageGaussianMas_U0_ap_done,
        ap_continue => xFAverageGaussianMas_U0_ap_continue,
        ap_idle => xFAverageGaussianMas_U0_ap_idle,
        ap_ready => xFAverageGaussianMas_U0_ap_ready,
        start_out => xFAverageGaussianMas_U0_start_out,
        start_write => xFAverageGaussianMas_U0_start_write,
        p_src_mat_V_V_dout => p_src_mat_V_V_dout,
        p_src_mat_V_V_empty_n => p_src_mat_V_V_empty_n,
        p_src_mat_V_V_read => xFAverageGaussianMas_U0_p_src_mat_V_V_read,
        p_out_mat_V_V_din => xFAverageGaussianMas_U0_p_out_mat_V_V_din,
        p_out_mat_V_V_full_n => gaussian_mat_V_V_full_n,
        p_out_mat_V_V_write => xFAverageGaussianMas_U0_p_out_mat_V_V_write,
        p_lowthreshold => p_lowthreshold,
        p_highthreshold => p_highthreshold,
        p_lowthreshold_out_din => xFAverageGaussianMas_U0_p_lowthreshold_out_din,
        p_lowthreshold_out_full_n => p_lowthreshold_c_full_n,
        p_lowthreshold_out_write => xFAverageGaussianMas_U0_p_lowthreshold_out_write,
        p_highthreshold_out_din => xFAverageGaussianMas_U0_p_highthreshold_out_din,
        p_highthreshold_out_full_n => p_highthreshold_c_full_n,
        p_highthreshold_out_write => xFAverageGaussianMas_U0_p_highthreshold_out_write);

    xFSobel_U0 : component xFSobel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFSobel_U0_ap_start,
        start_full_n => start_for_xFDuplicate_rows_U0_full_n,
        ap_done => xFSobel_U0_ap_done,
        ap_continue => xFSobel_U0_ap_continue,
        ap_idle => xFSobel_U0_ap_idle,
        ap_ready => xFSobel_U0_ap_ready,
        start_out => xFSobel_U0_start_out,
        start_write => xFSobel_U0_start_write,
        p_src_V_V_dout => gaussian_mat_V_V_dout,
        p_src_V_V_empty_n => gaussian_mat_V_V_empty_n,
        p_src_V_V_read => xFSobel_U0_p_src_V_V_read,
        p_dst_V_V_din => xFSobel_U0_p_dst_V_V_din,
        p_dst_V_V_full_n => gradx_mat_V_V_full_n,
        p_dst_V_V_write => xFSobel_U0_p_dst_V_V_write,
        p_dst1_V_V_din => xFSobel_U0_p_dst1_V_V_din,
        p_dst1_V_V_full_n => grady_mat_V_V_full_n,
        p_dst1_V_V_write => xFSobel_U0_p_dst1_V_V_write);

    xFDuplicate_rows_U0 : component xFDuplicate_rows
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFDuplicate_rows_U0_ap_start,
        start_full_n => xFDuplicate_rows_U0_start_full_n,
        ap_done => xFDuplicate_rows_U0_ap_done,
        ap_continue => xFDuplicate_rows_U0_ap_continue,
        ap_idle => xFDuplicate_rows_U0_ap_idle,
        ap_ready => xFDuplicate_rows_U0_ap_ready,
        start_out => xFDuplicate_rows_U0_start_out,
        start_write => xFDuplicate_rows_U0_start_write,
        p_src_mat_V_V_dout => gradx_mat_V_V_dout,
        p_src_mat_V_V_empty_n => gradx_mat_V_V_empty_n,
        p_src_mat_V_V_read => xFDuplicate_rows_U0_p_src_mat_V_V_read,
        p_src_mat1_V_V_dout => grady_mat_V_V_dout,
        p_src_mat1_V_V_empty_n => grady_mat_V_V_empty_n,
        p_src_mat1_V_V_read => xFDuplicate_rows_U0_p_src_mat1_V_V_read,
        p_dst1_mat_V_V_din => xFDuplicate_rows_U0_p_dst1_mat_V_V_din,
        p_dst1_mat_V_V_full_n => gradx1_mat_V_V_full_n,
        p_dst1_mat_V_V_write => xFDuplicate_rows_U0_p_dst1_mat_V_V_write,
        p_dst2_mat_V_V_din => xFDuplicate_rows_U0_p_dst2_mat_V_V_din,
        p_dst2_mat_V_V_full_n => gradx2_mat_V_V_full_n,
        p_dst2_mat_V_V_write => xFDuplicate_rows_U0_p_dst2_mat_V_V_write,
        p_dst1_out_mat_V_V_din => xFDuplicate_rows_U0_p_dst1_out_mat_V_V_din,
        p_dst1_out_mat_V_V_full_n => grady1_mat_V_V_full_n,
        p_dst1_out_mat_V_V_write => xFDuplicate_rows_U0_p_dst1_out_mat_V_V_write,
        p_dst2_out_mat_V_V_din => xFDuplicate_rows_U0_p_dst2_out_mat_V_V_din,
        p_dst2_out_mat_V_V_full_n => grady2_mat_V_V_full_n,
        p_dst2_out_mat_V_V_write => xFDuplicate_rows_U0_p_dst2_out_mat_V_V_write);

    xFMagnitudeKernel_U0 : component xFMagnitudeKernel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFMagnitudeKernel_U0_ap_start,
        ap_done => xFMagnitudeKernel_U0_ap_done,
        ap_continue => xFMagnitudeKernel_U0_ap_continue,
        ap_idle => xFMagnitudeKernel_U0_ap_idle,
        ap_ready => xFMagnitudeKernel_U0_ap_ready,
        p_src1_V_V_dout => gradx1_mat_V_V_dout,
        p_src1_V_V_empty_n => gradx1_mat_V_V_empty_n,
        p_src1_V_V_read => xFMagnitudeKernel_U0_p_src1_V_V_read,
        p_src2_V_V_dout => grady1_mat_V_V_dout,
        p_src2_V_V_empty_n => grady1_mat_V_V_empty_n,
        p_src2_V_V_read => xFMagnitudeKernel_U0_p_src2_V_V_read,
        p_dst_V_V_din => xFMagnitudeKernel_U0_p_dst_V_V_din,
        p_dst_V_V_full_n => magnitude_mat_V_V_full_n,
        p_dst_V_V_write => xFMagnitudeKernel_U0_p_dst_V_V_write);

    xFAngleKernel_U0 : component xFAngleKernel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFAngleKernel_U0_ap_start,
        ap_done => xFAngleKernel_U0_ap_done,
        ap_continue => xFAngleKernel_U0_ap_continue,
        ap_idle => xFAngleKernel_U0_ap_idle,
        ap_ready => xFAngleKernel_U0_ap_ready,
        p_src1_V_V_dout => gradx2_mat_V_V_dout,
        p_src1_V_V_empty_n => gradx2_mat_V_V_empty_n,
        p_src1_V_V_read => xFAngleKernel_U0_p_src1_V_V_read,
        p_src2_V_V_dout => grady2_mat_V_V_dout,
        p_src2_V_V_empty_n => grady2_mat_V_V_empty_n,
        p_src2_V_V_read => xFAngleKernel_U0_p_src2_V_V_read,
        p_dst_V_V_din => xFAngleKernel_U0_p_dst_V_V_din,
        p_dst_V_V_full_n => phase_mat_V_V_full_n,
        p_dst_V_V_write => xFAngleKernel_U0_p_dst_V_V_write);

    xFSuppression3x3_U0 : component xFSuppression3x3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFSuppression3x3_U0_ap_start,
        ap_done => xFSuppression3x3_U0_ap_done,
        ap_continue => xFSuppression3x3_U0_ap_continue,
        ap_idle => xFSuppression3x3_U0_ap_idle,
        ap_ready => xFSuppression3x3_U0_ap_ready,
        p_magnitude_mat_V_V_dout => magnitude_mat_V_V_dout,
        p_magnitude_mat_V_V_empty_n => magnitude_mat_V_V_empty_n,
        p_magnitude_mat_V_V_read => xFSuppression3x3_U0_p_magnitude_mat_V_V_read,
        p_phase_mat_V_V_dout => phase_mat_V_V_dout,
        p_phase_mat_V_V_empty_n => phase_mat_V_V_empty_n,
        p_phase_mat_V_V_read => xFSuppression3x3_U0_p_phase_mat_V_V_read,
        p_dst_mat_V_V_din => xFSuppression3x3_U0_p_dst_mat_V_V_din,
        p_dst_mat_V_V_full_n => p_dst_mat_V_V_full_n,
        p_dst_mat_V_V_write => xFSuppression3x3_U0_p_dst_mat_V_V_write,
        low_threshold_dout => p_lowthreshold_c_dout,
        low_threshold_empty_n => p_lowthreshold_c_empty_n,
        low_threshold_read => xFSuppression3x3_U0_low_threshold_read,
        high_threshold_dout => p_highthreshold_c_dout,
        high_threshold_empty_n => p_highthreshold_c_empty_n,
        high_threshold_read => xFSuppression3x3_U0_high_threshold_read);

    gaussian_mat_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAverageGaussianMas_U0_p_out_mat_V_V_din,
        if_full_n => gaussian_mat_V_V_full_n,
        if_write => xFAverageGaussianMas_U0_p_out_mat_V_V_write,
        if_dout => gaussian_mat_V_V_dout,
        if_empty_n => gaussian_mat_V_V_empty_n,
        if_read => xFSobel_U0_p_src_V_V_read);

    p_lowthreshold_c_U : component fifo_w8_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAverageGaussianMas_U0_p_lowthreshold_out_din,
        if_full_n => p_lowthreshold_c_full_n,
        if_write => xFAverageGaussianMas_U0_p_lowthreshold_out_write,
        if_dout => p_lowthreshold_c_dout,
        if_empty_n => p_lowthreshold_c_empty_n,
        if_read => xFSuppression3x3_U0_low_threshold_read);

    p_highthreshold_c_U : component fifo_w8_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAverageGaussianMas_U0_p_highthreshold_out_din,
        if_full_n => p_highthreshold_c_full_n,
        if_write => xFAverageGaussianMas_U0_p_highthreshold_out_write,
        if_dout => p_highthreshold_c_dout,
        if_empty_n => p_highthreshold_c_empty_n,
        if_read => xFSuppression3x3_U0_high_threshold_read);

    gradx_mat_V_V_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSobel_U0_p_dst_V_V_din,
        if_full_n => gradx_mat_V_V_full_n,
        if_write => xFSobel_U0_p_dst_V_V_write,
        if_dout => gradx_mat_V_V_dout,
        if_empty_n => gradx_mat_V_V_empty_n,
        if_read => xFDuplicate_rows_U0_p_src_mat_V_V_read);

    grady_mat_V_V_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSobel_U0_p_dst1_V_V_din,
        if_full_n => grady_mat_V_V_full_n,
        if_write => xFSobel_U0_p_dst1_V_V_write,
        if_dout => grady_mat_V_V_dout,
        if_empty_n => grady_mat_V_V_empty_n,
        if_read => xFDuplicate_rows_U0_p_src_mat1_V_V_read);

    gradx1_mat_V_V_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_U0_p_dst1_mat_V_V_din,
        if_full_n => gradx1_mat_V_V_full_n,
        if_write => xFDuplicate_rows_U0_p_dst1_mat_V_V_write,
        if_dout => gradx1_mat_V_V_dout,
        if_empty_n => gradx1_mat_V_V_empty_n,
        if_read => xFMagnitudeKernel_U0_p_src1_V_V_read);

    gradx2_mat_V_V_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_U0_p_dst2_mat_V_V_din,
        if_full_n => gradx2_mat_V_V_full_n,
        if_write => xFDuplicate_rows_U0_p_dst2_mat_V_V_write,
        if_dout => gradx2_mat_V_V_dout,
        if_empty_n => gradx2_mat_V_V_empty_n,
        if_read => xFAngleKernel_U0_p_src1_V_V_read);

    grady1_mat_V_V_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_U0_p_dst1_out_mat_V_V_din,
        if_full_n => grady1_mat_V_V_full_n,
        if_write => xFDuplicate_rows_U0_p_dst1_out_mat_V_V_write,
        if_dout => grady1_mat_V_V_dout,
        if_empty_n => grady1_mat_V_V_empty_n,
        if_read => xFMagnitudeKernel_U0_p_src2_V_V_read);

    grady2_mat_V_V_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_U0_p_dst2_out_mat_V_V_din,
        if_full_n => grady2_mat_V_V_full_n,
        if_write => xFDuplicate_rows_U0_p_dst2_out_mat_V_V_write,
        if_dout => grady2_mat_V_V_dout,
        if_empty_n => grady2_mat_V_V_empty_n,
        if_read => xFAngleKernel_U0_p_src2_V_V_read);

    magnitude_mat_V_V_U : component fifo_w16_d3840_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFMagnitudeKernel_U0_p_dst_V_V_din,
        if_full_n => magnitude_mat_V_V_full_n,
        if_write => xFMagnitudeKernel_U0_p_dst_V_V_write,
        if_dout => magnitude_mat_V_V_dout,
        if_empty_n => magnitude_mat_V_V_empty_n,
        if_read => xFSuppression3x3_U0_p_magnitude_mat_V_V_read);

    phase_mat_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAngleKernel_U0_p_dst_V_V_din,
        if_full_n => phase_mat_V_V_full_n,
        if_write => xFAngleKernel_U0_p_dst_V_V_write,
        if_dout => phase_mat_V_V_dout,
        if_empty_n => phase_mat_V_V_empty_n,
        if_read => xFSuppression3x3_U0_p_phase_mat_V_V_read);

    start_for_xFSobelncg_U : component start_for_xFSobelncg
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFSobel_U0_din,
        if_full_n => start_for_xFSobel_U0_full_n,
        if_write => xFAverageGaussianMas_U0_start_write,
        if_dout => start_for_xFSobel_U0_dout,
        if_empty_n => start_for_xFSobel_U0_empty_n,
        if_read => xFSobel_U0_ap_ready);

    start_for_xFSupprocq_U : component start_for_xFSupprocq
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFSuppression3x3_U0_din,
        if_full_n => start_for_xFSuppression3x3_U0_full_n,
        if_write => xFAverageGaussianMas_U0_start_write,
        if_dout => start_for_xFSuppression3x3_U0_dout,
        if_empty_n => start_for_xFSuppression3x3_U0_empty_n,
        if_read => xFSuppression3x3_U0_ap_ready);

    start_for_xFDuplipcA_U : component start_for_xFDuplipcA
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFDuplicate_rows_U0_din,
        if_full_n => start_for_xFDuplicate_rows_U0_full_n,
        if_write => xFSobel_U0_start_write,
        if_dout => start_for_xFDuplicate_rows_U0_dout,
        if_empty_n => start_for_xFDuplicate_rows_U0_empty_n,
        if_read => xFDuplicate_rows_U0_ap_ready);

    start_for_xFMagniqcK_U : component start_for_xFMagniqcK
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFMagnitudeKernel_U0_din,
        if_full_n => start_for_xFMagnitudeKernel_U0_full_n,
        if_write => xFDuplicate_rows_U0_start_write,
        if_dout => start_for_xFMagnitudeKernel_U0_dout,
        if_empty_n => start_for_xFMagnitudeKernel_U0_empty_n,
        if_read => xFMagnitudeKernel_U0_ap_ready);

    start_for_xFAnglercU_U : component start_for_xFAnglercU
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFAngleKernel_U0_din,
        if_full_n => start_for_xFAngleKernel_U0_full_n,
        if_write => xFDuplicate_rows_U0_start_write,
        if_dout => start_for_xFAngleKernel_U0_dout,
        if_empty_n => start_for_xFAngleKernel_U0_empty_n,
        if_read => xFAngleKernel_U0_ap_ready);




    ap_done <= xFSuppression3x3_U0_ap_done;
    ap_idle <= (xFSuppression3x3_U0_ap_idle and xFSobel_U0_ap_idle and xFMagnitudeKernel_U0_ap_idle and xFDuplicate_rows_U0_ap_idle and xFAverageGaussianMas_U0_ap_idle and xFAngleKernel_U0_ap_idle);
    ap_ready <= xFAverageGaussianMas_U0_ap_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_done <= xFSuppression3x3_U0_ap_done;
    ap_sync_ready <= xFAverageGaussianMas_U0_ap_ready;
    p_dst_mat_V_V_din <= xFSuppression3x3_U0_p_dst_mat_V_V_din;
    p_dst_mat_V_V_write <= xFSuppression3x3_U0_p_dst_mat_V_V_write;
    p_src_mat_V_V_read <= xFAverageGaussianMas_U0_p_src_mat_V_V_read;
    start_for_xFAngleKernel_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFDuplicate_rows_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFMagnitudeKernel_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFSobel_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFSuppression3x3_U0_din <= (0=>ap_const_logic_1, others=>'-');
    xFAngleKernel_U0_ap_continue <= ap_const_logic_1;
    xFAngleKernel_U0_ap_start <= start_for_xFAngleKernel_U0_empty_n;
    xFAngleKernel_U0_start_full_n <= ap_const_logic_1;
    xFAngleKernel_U0_start_write <= ap_const_logic_0;
    xFAverageGaussianMas_U0_ap_continue <= ap_const_logic_1;
    xFAverageGaussianMas_U0_ap_start <= ap_start;
    xFAverageGaussianMas_U0_start_full_n <= (start_for_xFSuppression3x3_U0_full_n and start_for_xFSobel_U0_full_n);
    xFDuplicate_rows_U0_ap_continue <= ap_const_logic_1;
    xFDuplicate_rows_U0_ap_start <= start_for_xFDuplicate_rows_U0_empty_n;
    xFDuplicate_rows_U0_start_full_n <= (start_for_xFMagnitudeKernel_U0_full_n and start_for_xFAngleKernel_U0_full_n);
    xFMagnitudeKernel_U0_ap_continue <= ap_const_logic_1;
    xFMagnitudeKernel_U0_ap_start <= start_for_xFMagnitudeKernel_U0_empty_n;
    xFMagnitudeKernel_U0_start_full_n <= ap_const_logic_1;
    xFMagnitudeKernel_U0_start_write <= ap_const_logic_0;
    xFSobel_U0_ap_continue <= ap_const_logic_1;
    xFSobel_U0_ap_start <= start_for_xFSobel_U0_empty_n;
    xFSuppression3x3_U0_ap_continue <= ap_continue;
    xFSuppression3x3_U0_ap_start <= start_for_xFSuppression3x3_U0_empty_n;
    xFSuppression3x3_U0_start_full_n <= ap_const_logic_1;
    xFSuppression3x3_U0_start_write <= ap_const_logic_0;
end behav;
