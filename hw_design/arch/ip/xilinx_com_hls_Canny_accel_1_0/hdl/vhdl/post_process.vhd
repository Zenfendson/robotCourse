-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity post_process is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_strm_V_V_dout : IN STD_LOGIC_VECTOR (1 downto 0);
    in_strm_V_V_empty_n : IN STD_LOGIC;
    in_strm_V_V_read : OUT STD_LOGIC;
    out_strm_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_strm_TVALID : OUT STD_LOGIC;
    out_strm_TREADY : IN STD_LOGIC;
    out_strm_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_strm_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_strm_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_strm_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_strm_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_strm_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of post_process is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv20_E1000 : STD_LOGIC_VECTOR (19 downto 0) := "11100001000000000000";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv11_500 : STD_LOGIC_VECTOR (10 downto 0) := "10100000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2CF : STD_LOGIC_VECTOR (9 downto 0) := "1011001111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_4FF : STD_LOGIC_VECTOR (10 downto 0) := "10011111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal out_strm_V_data_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal out_strm_V_data_V_1_vld_in : STD_LOGIC;
    signal out_strm_V_data_V_1_vld_out : STD_LOGIC;
    signal out_strm_V_data_V_1_ack_in : STD_LOGIC;
    signal out_strm_V_data_V_1_ack_out : STD_LOGIC;
    signal out_strm_V_data_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal out_strm_V_data_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal out_strm_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal out_strm_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal out_strm_V_data_V_1_sel : STD_LOGIC;
    signal out_strm_V_data_V_1_load_A : STD_LOGIC;
    signal out_strm_V_data_V_1_load_B : STD_LOGIC;
    signal out_strm_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_strm_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal out_strm_V_keep_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_strm_V_keep_V_1_vld_in : STD_LOGIC;
    signal out_strm_V_keep_V_1_vld_out : STD_LOGIC;
    signal out_strm_V_keep_V_1_ack_in : STD_LOGIC;
    signal out_strm_V_keep_V_1_ack_out : STD_LOGIC;
    signal out_strm_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal out_strm_V_keep_V_1_sel : STD_LOGIC;
    signal out_strm_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_strm_V_strb_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_strm_V_strb_V_1_vld_in : STD_LOGIC;
    signal out_strm_V_strb_V_1_vld_out : STD_LOGIC;
    signal out_strm_V_strb_V_1_ack_in : STD_LOGIC;
    signal out_strm_V_strb_V_1_ack_out : STD_LOGIC;
    signal out_strm_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal out_strm_V_strb_V_1_sel : STD_LOGIC;
    signal out_strm_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_strm_V_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_strm_V_user_V_1_vld_in : STD_LOGIC;
    signal out_strm_V_user_V_1_vld_out : STD_LOGIC;
    signal out_strm_V_user_V_1_ack_in : STD_LOGIC;
    signal out_strm_V_user_V_1_ack_out : STD_LOGIC;
    signal out_strm_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal out_strm_V_user_V_1_sel : STD_LOGIC;
    signal out_strm_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_strm_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_strm_V_last_V_1_vld_in : STD_LOGIC;
    signal out_strm_V_last_V_1_vld_out : STD_LOGIC;
    signal out_strm_V_last_V_1_ack_in : STD_LOGIC;
    signal out_strm_V_last_V_1_ack_out : STD_LOGIC;
    signal out_strm_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal out_strm_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal out_strm_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal out_strm_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal out_strm_V_last_V_1_sel : STD_LOGIC;
    signal out_strm_V_last_V_1_load_A : STD_LOGIC;
    signal out_strm_V_last_V_1_load_B : STD_LOGIC;
    signal out_strm_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_strm_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal out_strm_V_id_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_strm_V_id_V_1_vld_in : STD_LOGIC;
    signal out_strm_V_id_V_1_vld_out : STD_LOGIC;
    signal out_strm_V_id_V_1_ack_in : STD_LOGIC;
    signal out_strm_V_id_V_1_ack_out : STD_LOGIC;
    signal out_strm_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal out_strm_V_id_V_1_sel : STD_LOGIC;
    signal out_strm_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_strm_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_strm_V_dest_V_1_vld_in : STD_LOGIC;
    signal out_strm_V_dest_V_1_vld_out : STD_LOGIC;
    signal out_strm_V_dest_V_1_ack_in : STD_LOGIC;
    signal out_strm_V_dest_V_1_ack_out : STD_LOGIC;
    signal out_strm_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal out_strm_V_dest_V_1_sel : STD_LOGIC;
    signal out_strm_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_strm_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_270 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_strm_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_270_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_270_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_130 : STD_LOGIC_VECTOR (19 downto 0);
    signal i_reg_141 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_reg_152 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_flatten_fu_163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_169_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond7_fu_175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond7_reg_279 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid2_fu_181_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_mid2_reg_284 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_s_fu_189_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_s_reg_289 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp4_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_reg_294 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_mid2_fu_201_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_2_fu_209_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_reg_309 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_last_V_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_315 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_data_V_fu_261_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_mid1_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_fu_220_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_cast_fu_247_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_state6 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((out_strm_V_dest_V_1_ack_in = ap_const_logic_0) or (out_strm_V_data_V_1_ack_in = ap_const_logic_0) or (out_strm_V_id_V_1_ack_in = ap_const_logic_0) or (out_strm_V_last_V_1_ack_in = ap_const_logic_0) or (out_strm_V_user_V_1_ack_in = ap_const_logic_0) or (out_strm_V_strb_V_1_ack_in = ap_const_logic_0) or (out_strm_V_keep_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_strm_V_data_V_1_ack_out = ap_const_logic_1) and (out_strm_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        out_strm_V_data_V_1_sel_rd <= not(out_strm_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_strm_V_data_V_1_ack_in = ap_const_logic_1) and (out_strm_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        out_strm_V_data_V_1_sel_wr <= not(out_strm_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_strm_V_data_V_1_state = ap_const_lv2_2) and (out_strm_V_data_V_1_vld_in = ap_const_logic_0)) or ((out_strm_V_data_V_1_state = ap_const_lv2_3) and (out_strm_V_data_V_1_vld_in = ap_const_logic_0) and (out_strm_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    out_strm_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((out_strm_V_data_V_1_state = ap_const_lv2_1) and (out_strm_V_data_V_1_ack_out = ap_const_logic_0)) or ((out_strm_V_data_V_1_state = ap_const_lv2_3) and (out_strm_V_data_V_1_ack_out = ap_const_logic_0) and (out_strm_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_strm_V_data_V_1_vld_in = ap_const_logic_0) and (out_strm_V_data_V_1_ack_out = ap_const_logic_1))) and not(((out_strm_V_data_V_1_ack_out = ap_const_logic_0) and (out_strm_V_data_V_1_vld_in = ap_const_logic_1))) and (out_strm_V_data_V_1_state = ap_const_lv2_3)) or ((out_strm_V_data_V_1_state = ap_const_lv2_1) and (out_strm_V_data_V_1_ack_out = ap_const_logic_1)) or ((out_strm_V_data_V_1_state = ap_const_lv2_2) and (out_strm_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    out_strm_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_strm_V_dest_V_1_ack_out = ap_const_logic_1) and (out_strm_V_dest_V_1_vld_out = ap_const_logic_1))) then 
                                        out_strm_V_dest_V_1_sel_rd <= not(out_strm_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_strm_V_dest_V_1_state = ap_const_lv2_2) and (out_strm_V_dest_V_1_vld_in = ap_const_logic_0)) or ((out_strm_V_dest_V_1_state = ap_const_lv2_3) and (out_strm_V_dest_V_1_vld_in = ap_const_logic_0) and (out_strm_V_dest_V_1_ack_out = ap_const_logic_1)))) then 
                    out_strm_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((out_strm_V_dest_V_1_state = ap_const_lv2_1) and (out_strm_V_dest_V_1_ack_out = ap_const_logic_0)) or ((out_strm_V_dest_V_1_state = ap_const_lv2_3) and (out_strm_V_dest_V_1_ack_out = ap_const_logic_0) and (out_strm_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_strm_V_dest_V_1_vld_in = ap_const_logic_0) and (out_strm_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((out_strm_V_dest_V_1_ack_out = ap_const_logic_0) and (out_strm_V_dest_V_1_vld_in = ap_const_logic_1))) and (out_strm_V_dest_V_1_state = ap_const_lv2_3)) or ((out_strm_V_dest_V_1_state = ap_const_lv2_1) and (out_strm_V_dest_V_1_ack_out = ap_const_logic_1)) or ((out_strm_V_dest_V_1_state = ap_const_lv2_2) and (out_strm_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    out_strm_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_strm_V_id_V_1_ack_out = ap_const_logic_1) and (out_strm_V_id_V_1_vld_out = ap_const_logic_1))) then 
                                        out_strm_V_id_V_1_sel_rd <= not(out_strm_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_strm_V_id_V_1_state = ap_const_lv2_2) and (out_strm_V_id_V_1_vld_in = ap_const_logic_0)) or ((out_strm_V_id_V_1_state = ap_const_lv2_3) and (out_strm_V_id_V_1_vld_in = ap_const_logic_0) and (out_strm_V_id_V_1_ack_out = ap_const_logic_1)))) then 
                    out_strm_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((out_strm_V_id_V_1_state = ap_const_lv2_1) and (out_strm_V_id_V_1_ack_out = ap_const_logic_0)) or ((out_strm_V_id_V_1_state = ap_const_lv2_3) and (out_strm_V_id_V_1_ack_out = ap_const_logic_0) and (out_strm_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_strm_V_id_V_1_vld_in = ap_const_logic_0) and (out_strm_V_id_V_1_ack_out = ap_const_logic_1))) and not(((out_strm_V_id_V_1_ack_out = ap_const_logic_0) and (out_strm_V_id_V_1_vld_in = ap_const_logic_1))) and (out_strm_V_id_V_1_state = ap_const_lv2_3)) or ((out_strm_V_id_V_1_state = ap_const_lv2_1) and (out_strm_V_id_V_1_ack_out = ap_const_logic_1)) or ((out_strm_V_id_V_1_state = ap_const_lv2_2) and (out_strm_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    out_strm_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_strm_V_keep_V_1_ack_out = ap_const_logic_1) and (out_strm_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        out_strm_V_keep_V_1_sel_rd <= not(out_strm_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_strm_V_keep_V_1_state = ap_const_lv2_2) and (out_strm_V_keep_V_1_vld_in = ap_const_logic_0)) or ((out_strm_V_keep_V_1_state = ap_const_lv2_3) and (out_strm_V_keep_V_1_vld_in = ap_const_logic_0) and (out_strm_V_keep_V_1_ack_out = ap_const_logic_1)))) then 
                    out_strm_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((out_strm_V_keep_V_1_state = ap_const_lv2_1) and (out_strm_V_keep_V_1_ack_out = ap_const_logic_0)) or ((out_strm_V_keep_V_1_state = ap_const_lv2_3) and (out_strm_V_keep_V_1_ack_out = ap_const_logic_0) and (out_strm_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_strm_V_keep_V_1_vld_in = ap_const_logic_0) and (out_strm_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((out_strm_V_keep_V_1_ack_out = ap_const_logic_0) and (out_strm_V_keep_V_1_vld_in = ap_const_logic_1))) and (out_strm_V_keep_V_1_state = ap_const_lv2_3)) or ((out_strm_V_keep_V_1_state = ap_const_lv2_1) and (out_strm_V_keep_V_1_ack_out = ap_const_logic_1)) or ((out_strm_V_keep_V_1_state = ap_const_lv2_2) and (out_strm_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    out_strm_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_strm_V_last_V_1_ack_out = ap_const_logic_1) and (out_strm_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        out_strm_V_last_V_1_sel_rd <= not(out_strm_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_strm_V_last_V_1_ack_in = ap_const_logic_1) and (out_strm_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        out_strm_V_last_V_1_sel_wr <= not(out_strm_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_strm_V_last_V_1_state = ap_const_lv2_2) and (out_strm_V_last_V_1_vld_in = ap_const_logic_0)) or ((out_strm_V_last_V_1_state = ap_const_lv2_3) and (out_strm_V_last_V_1_vld_in = ap_const_logic_0) and (out_strm_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    out_strm_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((out_strm_V_last_V_1_state = ap_const_lv2_1) and (out_strm_V_last_V_1_ack_out = ap_const_logic_0)) or ((out_strm_V_last_V_1_state = ap_const_lv2_3) and (out_strm_V_last_V_1_ack_out = ap_const_logic_0) and (out_strm_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_strm_V_last_V_1_vld_in = ap_const_logic_0) and (out_strm_V_last_V_1_ack_out = ap_const_logic_1))) and not(((out_strm_V_last_V_1_ack_out = ap_const_logic_0) and (out_strm_V_last_V_1_vld_in = ap_const_logic_1))) and (out_strm_V_last_V_1_state = ap_const_lv2_3)) or ((out_strm_V_last_V_1_state = ap_const_lv2_1) and (out_strm_V_last_V_1_ack_out = ap_const_logic_1)) or ((out_strm_V_last_V_1_state = ap_const_lv2_2) and (out_strm_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    out_strm_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_strm_V_strb_V_1_ack_out = ap_const_logic_1) and (out_strm_V_strb_V_1_vld_out = ap_const_logic_1))) then 
                                        out_strm_V_strb_V_1_sel_rd <= not(out_strm_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_strm_V_strb_V_1_state = ap_const_lv2_2) and (out_strm_V_strb_V_1_vld_in = ap_const_logic_0)) or ((out_strm_V_strb_V_1_state = ap_const_lv2_3) and (out_strm_V_strb_V_1_vld_in = ap_const_logic_0) and (out_strm_V_strb_V_1_ack_out = ap_const_logic_1)))) then 
                    out_strm_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((out_strm_V_strb_V_1_state = ap_const_lv2_1) and (out_strm_V_strb_V_1_ack_out = ap_const_logic_0)) or ((out_strm_V_strb_V_1_state = ap_const_lv2_3) and (out_strm_V_strb_V_1_ack_out = ap_const_logic_0) and (out_strm_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_strm_V_strb_V_1_vld_in = ap_const_logic_0) and (out_strm_V_strb_V_1_ack_out = ap_const_logic_1))) and not(((out_strm_V_strb_V_1_ack_out = ap_const_logic_0) and (out_strm_V_strb_V_1_vld_in = ap_const_logic_1))) and (out_strm_V_strb_V_1_state = ap_const_lv2_3)) or ((out_strm_V_strb_V_1_state = ap_const_lv2_1) and (out_strm_V_strb_V_1_ack_out = ap_const_logic_1)) or ((out_strm_V_strb_V_1_state = ap_const_lv2_2) and (out_strm_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    out_strm_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_strm_V_user_V_1_ack_out = ap_const_logic_1) and (out_strm_V_user_V_1_vld_out = ap_const_logic_1))) then 
                                        out_strm_V_user_V_1_sel_rd <= not(out_strm_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_strm_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_strm_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_strm_V_user_V_1_state = ap_const_lv2_2) and (out_strm_V_user_V_1_vld_in = ap_const_logic_0)) or ((out_strm_V_user_V_1_state = ap_const_lv2_3) and (out_strm_V_user_V_1_vld_in = ap_const_logic_0) and (out_strm_V_user_V_1_ack_out = ap_const_logic_1)))) then 
                    out_strm_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((out_strm_V_user_V_1_state = ap_const_lv2_1) and (out_strm_V_user_V_1_ack_out = ap_const_logic_0)) or ((out_strm_V_user_V_1_state = ap_const_lv2_3) and (out_strm_V_user_V_1_ack_out = ap_const_logic_0) and (out_strm_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_strm_V_user_V_1_vld_in = ap_const_logic_0) and (out_strm_V_user_V_1_ack_out = ap_const_logic_1))) and not(((out_strm_V_user_V_1_ack_out = ap_const_logic_0) and (out_strm_V_user_V_1_vld_in = ap_const_logic_1))) and (out_strm_V_user_V_1_state = ap_const_lv2_3)) or ((out_strm_V_user_V_1_state = ap_const_lv2_1) and (out_strm_V_user_V_1_ack_out = ap_const_logic_1)) or ((out_strm_V_user_V_1_state = ap_const_lv2_2) and (out_strm_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    out_strm_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    out_strm_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i_reg_141_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_163_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_141 <= i_mid2_fu_201_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_141 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_163_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_130 <= indvar_flatten_next_fu_169_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_130 <= ap_const_lv20_0;
            end if; 
        end if;
    end process;

    j_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_163_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_reg_152 <= j_2_fu_209_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_152 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_163_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond7_reg_279 <= exitcond7_fu_175_p2;
                i_s_reg_289 <= i_s_fu_189_p2;
                j_mid2_reg_284 <= j_mid2_fu_181_p3;
                tmp4_reg_294 <= tmp4_fu_195_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_270 <= exitcond_flatten_fu_163_p2;
                exitcond_flatten_reg_270_pp0_iter1_reg <= exitcond_flatten_reg_270;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_flatten_reg_270_pp0_iter2_reg <= exitcond_flatten_reg_270_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_strm_V_data_V_1_load_A = ap_const_logic_1)) then
                out_strm_V_data_V_1_payload_A <= out_data_V_fu_261_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_strm_V_data_V_1_load_B = ap_const_logic_1)) then
                out_strm_V_data_V_1_payload_B <= out_data_V_fu_261_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_strm_V_last_V_1_load_A = ap_const_logic_1)) then
                out_strm_V_last_V_1_payload_A <= tmp_last_V_reg_315;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_strm_V_last_V_1_load_B = ap_const_logic_1)) then
                out_strm_V_last_V_1_payload_B <= tmp_last_V_reg_315;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_270 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_V_reg_309 <= in_strm_V_V_dout;
                tmp_last_V_reg_315 <= tmp_last_V_fu_231_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, out_strm_V_data_V_1_ack_in, out_strm_V_keep_V_1_ack_in, out_strm_V_strb_V_1_ack_in, out_strm_V_user_V_1_ack_in, out_strm_V_last_V_1_ack_in, out_strm_V_id_V_1_ack_in, out_strm_V_dest_V_1_ack_in, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, exitcond_flatten_fu_163_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_163_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_163_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((out_strm_V_dest_V_1_ack_in = ap_const_logic_0) or (out_strm_V_data_V_1_ack_in = ap_const_logic_0) or (out_strm_V_id_V_1_ack_in = ap_const_logic_0) or (out_strm_V_last_V_1_ack_in = ap_const_logic_0) or (out_strm_V_user_V_1_ack_in = ap_const_logic_0) or (out_strm_V_strb_V_1_ack_in = ap_const_logic_0) or (out_strm_V_keep_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_strm_V_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_270)
    begin
                ap_block_pp0_stage0_01001 <= ((exitcond_flatten_reg_270 = ap_const_lv1_0) and (in_strm_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_strm_V_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_270, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state4_io, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((exitcond_flatten_reg_270 = ap_const_lv1_0) and (in_strm_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_strm_V_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_270, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state4_io, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((exitcond_flatten_reg_270 = ap_const_lv1_0) and (in_strm_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(in_strm_V_V_empty_n, exitcond_flatten_reg_270)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((exitcond_flatten_reg_270 = ap_const_lv1_0) and (in_strm_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_io_assign_proc : process(out_strm_V_data_V_1_ack_in, exitcond_flatten_reg_270_pp0_iter1_reg)
    begin
                ap_block_state4_io <= ((exitcond_flatten_reg_270_pp0_iter1_reg = ap_const_lv1_0) and (out_strm_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(out_strm_V_data_V_1_ack_in, exitcond_flatten_reg_270_pp0_iter2_reg)
    begin
                ap_block_state5_io <= ((exitcond_flatten_reg_270_pp0_iter2_reg = ap_const_lv1_0) and (out_strm_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_assign_proc : process(out_strm_V_data_V_1_ack_in, out_strm_V_keep_V_1_ack_in, out_strm_V_strb_V_1_ack_in, out_strm_V_user_V_1_ack_in, out_strm_V_last_V_1_ack_in, out_strm_V_id_V_1_ack_in, out_strm_V_dest_V_1_ack_in)
    begin
                ap_block_state6 <= ((out_strm_V_dest_V_1_ack_in = ap_const_logic_0) or (out_strm_V_data_V_1_ack_in = ap_const_logic_0) or (out_strm_V_id_V_1_ack_in = ap_const_logic_0) or (out_strm_V_last_V_1_ack_in = ap_const_logic_0) or (out_strm_V_user_V_1_ack_in = ap_const_logic_0) or (out_strm_V_strb_V_1_ack_in = ap_const_logic_0) or (out_strm_V_keep_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_163_p2)
    begin
        if ((exitcond_flatten_fu_163_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, out_strm_V_data_V_1_ack_in, out_strm_V_keep_V_1_ack_in, out_strm_V_strb_V_1_ack_in, out_strm_V_user_V_1_ack_in, out_strm_V_last_V_1_ack_in, out_strm_V_id_V_1_ack_in, out_strm_V_dest_V_1_ack_in, ap_CS_fsm_state6)
    begin
        if ((not(((out_strm_V_dest_V_1_ack_in = ap_const_logic_0) or (out_strm_V_data_V_1_ack_in = ap_const_logic_0) or (out_strm_V_id_V_1_ack_in = ap_const_logic_0) or (out_strm_V_last_V_1_ack_in = ap_const_logic_0) or (out_strm_V_user_V_1_ack_in = ap_const_logic_0) or (out_strm_V_strb_V_1_ack_in = ap_const_logic_0) or (out_strm_V_keep_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(out_strm_V_data_V_1_ack_in, out_strm_V_keep_V_1_ack_in, out_strm_V_strb_V_1_ack_in, out_strm_V_user_V_1_ack_in, out_strm_V_last_V_1_ack_in, out_strm_V_id_V_1_ack_in, out_strm_V_dest_V_1_ack_in, ap_CS_fsm_state6)
    begin
        if ((not(((out_strm_V_dest_V_1_ack_in = ap_const_logic_0) or (out_strm_V_data_V_1_ack_in = ap_const_logic_0) or (out_strm_V_id_V_1_ack_in = ap_const_logic_0) or (out_strm_V_last_V_1_ack_in = ap_const_logic_0) or (out_strm_V_user_V_1_ack_in = ap_const_logic_0) or (out_strm_V_strb_V_1_ack_in = ap_const_logic_0) or (out_strm_V_keep_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond7_fu_175_p2 <= "1" when (j_reg_152 = ap_const_lv11_500) else "0";
    exitcond_flatten_fu_163_p2 <= "1" when (indvar_flatten_reg_130 = ap_const_lv20_E1000) else "0";
    i_mid2_fu_201_p3 <= 
        i_s_fu_189_p2 when (exitcond7_fu_175_p2(0) = '1') else 
        i_reg_141;
    i_s_fu_189_p2 <= std_logic_vector(unsigned(i_reg_141) + unsigned(ap_const_lv10_1));

    in_strm_V_V_blk_n_assign_proc : process(in_strm_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_270)
    begin
        if (((exitcond_flatten_reg_270 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_strm_V_V_blk_n <= in_strm_V_V_empty_n;
        else 
            in_strm_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_strm_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_270, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_270 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_strm_V_V_read <= ap_const_logic_1;
        else 
            in_strm_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_169_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_130) + unsigned(ap_const_lv20_1));
    j_2_fu_209_p2 <= std_logic_vector(unsigned(j_mid2_fu_181_p3) + unsigned(ap_const_lv11_1));
    j_mid2_fu_181_p3 <= 
        ap_const_lv11_0 when (exitcond7_fu_175_p2(0) = '1') else 
        j_reg_152;
    out_data_V_fu_261_p3 <= 
        storemerge_cast_fu_247_p3 when (tmp_31_fu_255_p2(0) = '1') else 
        ap_const_lv8_FF;
    out_strm_TDATA <= out_strm_V_data_V_1_data_out;

    out_strm_TDATA_blk_n_assign_proc : process(out_strm_V_data_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_270_pp0_iter1_reg, ap_enable_reg_pp0_iter3, exitcond_flatten_reg_270_pp0_iter2_reg)
    begin
        if ((((exitcond_flatten_reg_270_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((exitcond_flatten_reg_270_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            out_strm_TDATA_blk_n <= out_strm_V_data_V_1_state(1);
        else 
            out_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_strm_TDEST <= out_strm_V_dest_V_1_data_out;
    out_strm_TID <= out_strm_V_id_V_1_data_out;
    out_strm_TKEEP <= out_strm_V_keep_V_1_data_out;
    out_strm_TLAST <= out_strm_V_last_V_1_data_out;
    out_strm_TSTRB <= out_strm_V_strb_V_1_data_out;
    out_strm_TUSER <= out_strm_V_user_V_1_data_out;
    out_strm_TVALID <= out_strm_V_dest_V_1_state(0);
    out_strm_V_data_V_1_ack_in <= out_strm_V_data_V_1_state(1);
    out_strm_V_data_V_1_ack_out <= out_strm_TREADY;

    out_strm_V_data_V_1_data_out_assign_proc : process(out_strm_V_data_V_1_payload_A, out_strm_V_data_V_1_payload_B, out_strm_V_data_V_1_sel)
    begin
        if ((out_strm_V_data_V_1_sel = ap_const_logic_1)) then 
            out_strm_V_data_V_1_data_out <= out_strm_V_data_V_1_payload_B;
        else 
            out_strm_V_data_V_1_data_out <= out_strm_V_data_V_1_payload_A;
        end if; 
    end process;

    out_strm_V_data_V_1_load_A <= (out_strm_V_data_V_1_state_cmp_full and not(out_strm_V_data_V_1_sel_wr));
    out_strm_V_data_V_1_load_B <= (out_strm_V_data_V_1_state_cmp_full and out_strm_V_data_V_1_sel_wr);
    out_strm_V_data_V_1_sel <= out_strm_V_data_V_1_sel_rd;
    out_strm_V_data_V_1_state_cmp_full <= '0' when (out_strm_V_data_V_1_state = ap_const_lv2_1) else '1';

    out_strm_V_data_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_270_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_270_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            out_strm_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            out_strm_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_strm_V_data_V_1_vld_out <= out_strm_V_data_V_1_state(0);
    out_strm_V_dest_V_1_ack_in <= out_strm_V_dest_V_1_state(1);
    out_strm_V_dest_V_1_ack_out <= out_strm_TREADY;
    out_strm_V_dest_V_1_data_out <= ap_const_lv1_0;
    out_strm_V_dest_V_1_sel <= out_strm_V_dest_V_1_sel_rd;

    out_strm_V_dest_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_270_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_270_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            out_strm_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            out_strm_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_strm_V_dest_V_1_vld_out <= out_strm_V_dest_V_1_state(0);
    out_strm_V_id_V_1_ack_in <= out_strm_V_id_V_1_state(1);
    out_strm_V_id_V_1_ack_out <= out_strm_TREADY;
    out_strm_V_id_V_1_data_out <= ap_const_lv1_0;
    out_strm_V_id_V_1_sel <= out_strm_V_id_V_1_sel_rd;

    out_strm_V_id_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_270_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_270_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            out_strm_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            out_strm_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_strm_V_id_V_1_vld_out <= out_strm_V_id_V_1_state(0);
    out_strm_V_keep_V_1_ack_in <= out_strm_V_keep_V_1_state(1);
    out_strm_V_keep_V_1_ack_out <= out_strm_TREADY;
    out_strm_V_keep_V_1_data_out <= ap_const_lv1_1;
    out_strm_V_keep_V_1_sel <= out_strm_V_keep_V_1_sel_rd;

    out_strm_V_keep_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_270_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_270_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            out_strm_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            out_strm_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_strm_V_keep_V_1_vld_out <= out_strm_V_keep_V_1_state(0);
    out_strm_V_last_V_1_ack_in <= out_strm_V_last_V_1_state(1);
    out_strm_V_last_V_1_ack_out <= out_strm_TREADY;

    out_strm_V_last_V_1_data_out_assign_proc : process(out_strm_V_last_V_1_payload_A, out_strm_V_last_V_1_payload_B, out_strm_V_last_V_1_sel)
    begin
        if ((out_strm_V_last_V_1_sel = ap_const_logic_1)) then 
            out_strm_V_last_V_1_data_out <= out_strm_V_last_V_1_payload_B;
        else 
            out_strm_V_last_V_1_data_out <= out_strm_V_last_V_1_payload_A;
        end if; 
    end process;

    out_strm_V_last_V_1_load_A <= (out_strm_V_last_V_1_state_cmp_full and not(out_strm_V_last_V_1_sel_wr));
    out_strm_V_last_V_1_load_B <= (out_strm_V_last_V_1_state_cmp_full and out_strm_V_last_V_1_sel_wr);
    out_strm_V_last_V_1_sel <= out_strm_V_last_V_1_sel_rd;
    out_strm_V_last_V_1_state_cmp_full <= '0' when (out_strm_V_last_V_1_state = ap_const_lv2_1) else '1';

    out_strm_V_last_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_270_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_270_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            out_strm_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            out_strm_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_strm_V_last_V_1_vld_out <= out_strm_V_last_V_1_state(0);
    out_strm_V_strb_V_1_ack_in <= out_strm_V_strb_V_1_state(1);
    out_strm_V_strb_V_1_ack_out <= out_strm_TREADY;
    out_strm_V_strb_V_1_data_out <= ap_const_lv1_0;
    out_strm_V_strb_V_1_sel <= out_strm_V_strb_V_1_sel_rd;

    out_strm_V_strb_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_270_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_270_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            out_strm_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            out_strm_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_strm_V_strb_V_1_vld_out <= out_strm_V_strb_V_1_state(0);
    out_strm_V_user_V_1_ack_in <= out_strm_V_user_V_1_state(1);
    out_strm_V_user_V_1_ack_out <= out_strm_TREADY;
    out_strm_V_user_V_1_data_out <= ap_const_lv1_0;
    out_strm_V_user_V_1_sel <= out_strm_V_user_V_1_sel_rd;

    out_strm_V_user_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_270_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_270_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            out_strm_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            out_strm_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_strm_V_user_V_1_vld_out <= out_strm_V_user_V_1_state(0);
    storemerge_cast_fu_247_p3 <= 
        ap_const_lv8_0 when (tmp_s_fu_237_p2(0) = '1') else 
        ap_const_lv8_7F;
    tmp4_fu_195_p2 <= "1" when (i_reg_141 = ap_const_lv10_2CF) else "0";
    tmp_31_fu_255_p2 <= (tmp_s_fu_237_p2 or tmp_34_fu_242_p2);
    tmp_34_fu_242_p2 <= "1" when (tmp_V_reg_309 = ap_const_lv2_1) else "0";
    tmp_35_fu_226_p2 <= "1" when (j_mid2_reg_284 = ap_const_lv11_4FF) else "0";
    tmp_last_V_fu_231_p2 <= (tmp_mid2_fu_220_p3 and tmp_35_fu_226_p2);
    tmp_mid1_fu_215_p2 <= "1" when (i_s_reg_289 = ap_const_lv10_2CF) else "0";
    tmp_mid2_fu_220_p3 <= 
        tmp_mid1_fu_215_p2 when (exitcond7_reg_279(0) = '1') else 
        tmp4_reg_294;
    tmp_s_fu_237_p2 <= "1" when (tmp_V_reg_309 = ap_const_lv2_0) else "0";
end behav;
