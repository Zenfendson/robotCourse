-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_2D2 : STD_LOGIC_VECTOR (9 downto 0) := "1011010010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2D0 : STD_LOGIC_VECTOR (10 downto 0) := "01011010000";
    constant ap_const_lv11_7FE : STD_LOGIC_VECTOR (10 downto 0) := "11111111110";
    constant ap_const_lv11_7FD : STD_LOGIC_VECTOR (10 downto 0) := "11111111101";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_502 : STD_LOGIC_VECTOR (10 downto 0) := "10100000010";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_500 : STD_LOGIC_VECTOR (11 downto 0) := "010100000000";
    constant ap_const_lv12_9FE : STD_LOGIC_VECTOR (11 downto 0) := "100111111110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond460_i_reg_1352 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond460_i_reg_1352_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1384 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1285 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal or_cond_i_reg_1380 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1380_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_3_reg_322 : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_333 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op146_read_state6 : BOOLEAN;
    signal ap_predicate_op147_read_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_333_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_244_0_1_cast_fu_340_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_244_0_1_cast_reg_1247 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_244_0_2_cast_fu_344_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_244_0_2_cast_reg_1252 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_244_1_cast_fu_348_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_244_1_cast_reg_1257 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_244_1_2_cast_fu_352_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_244_1_2_cast_reg_1262 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_244_2_cast_fu_356_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_244_2_cast_reg_1267 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_244_2_1_cast_fu_360_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_244_2_1_cast_reg_1272 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_fu_374_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_V_reg_1280 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_s_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond461_i_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1295 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_203_1_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_203_1_reg_1299 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_1303 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_420_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_56_reg_1310 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_fu_424_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_26_reg_1315 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_60_fu_452_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_60_reg_1321 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_1327 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_assign_10_1_t_fu_546_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_reg_1332 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_fu_584_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_reg_1337 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_159_0_not_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_159_0_not_reg_1342 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal row_assign_10_0_t_fu_643_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_0_t_reg_1347 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond460_i_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal exitcond460_i_reg_1352_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond460_i_reg_1352_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond460_i_reg_1352_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond460_i_reg_1352_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond460_i_reg_1352_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_659_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ImagLoc_x_fu_681_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_reg_1361 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_73_reg_1367 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_fu_709_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_reg_1373 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_cond_i_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1380_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1380_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1380_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1380_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1380_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1380_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1380_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1380_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1380_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1380_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1384_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1384_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_779_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_reg_1388 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_75_fu_787_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_75_reg_1393 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_75_reg_1393_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_75_reg_1393_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1398 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1398_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1398_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1405 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_addr_reg_1411 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_addr_reg_1411_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1417 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1417_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_load_reg_1423 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_load_reg_1429 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_load_reg_1435 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_841_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_reg_1440 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_859_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_reg_1448 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_877_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_reg_1456 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_fu_927_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1464 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1464_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1464_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1464_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_941_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1470 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1470_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1470_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_955_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_1476 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_16_reg_1486 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_s_fu_983_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_s_reg_1491 : STD_LOGIC_VECTOR (8 downto 0);
    signal src_kernel_win_0_va_9_reg_1501 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1131_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_V_0_1_reg_1506 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal grp_fu_1138_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_V_0_2_reg_1521 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal grp_fu_1144_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sum_V_1_1_reg_1536 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal grp_fu_1151_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp5_reg_1541 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1158_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp3_reg_1546 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal grp_fu_1164_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp4_reg_1551 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_fu_1058_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of p_Val2_s_fu_1058_p2 : signal is "no";
    signal p_Val2_s_reg_1556 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_s_reg_1561 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_reg_1568 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter4_state8 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_311 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal tmp_41_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_198 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_fu_386_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_V_cast_fu_364_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_59_fu_430_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_438_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_p2_i497_i_fu_444_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_assign_6_1_fu_462_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_assign_6_2_fu_488_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_64_fu_484_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_63_fu_476_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_520_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_69_fu_526_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_62_fu_468_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_530_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_45_fu_514_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_48_fu_538_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_67_fu_510_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_66_fu_502_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_558_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_fu_564_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_65_fu_494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_568_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_49_fu_552_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_52_fu_576_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_57_fu_600_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_fu_624_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i496_i_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_cast_fu_595_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_p2_i497_i_p_assign_8_fu_629_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_fu_635_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_72_fu_665_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_3_cast_fu_649_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_74_fu_695_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_703_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp3_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev11_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_2_fu_746_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_3_fu_751_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_37_not_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast_fu_738_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sel_tmp_cast_fu_758_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_assign_cast_fu_796_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_3_t_fu_824_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_fu_829_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_fu_847_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_fu_865_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_fu_919_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_933_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_54_fu_947_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_0_cast_fu_979_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp4_cast_fu_1055_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_not1_i_i_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_not_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_i_i_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_1079_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal underflow_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge3_i_i_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_fu_1106_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_i_i_fu_1114_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1131_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1131_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1138_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1138_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1144_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1144_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1151_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1151_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1151_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1158_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1158_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1164_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1164_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1131_ce : STD_LOGIC;
    signal grp_fu_1138_ce : STD_LOGIC;
    signal grp_fu_1144_ce : STD_LOGIC;
    signal grp_fu_1151_ce : STD_LOGIC;
    signal grp_fu_1158_ce : STD_LOGIC;
    signal grp_fu_1164_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_141 : BOOLEAN;
    signal ap_enable_state6_pp0_iter2_stage0 : BOOLEAN;
    signal ap_enable_operation_148 : BOOLEAN;
    signal ap_enable_state7_pp0_iter3_stage0 : BOOLEAN;
    signal ap_predicate_op151_store_state7 : BOOLEAN;
    signal ap_enable_operation_151 : BOOLEAN;
    signal ap_predicate_op153_store_state7 : BOOLEAN;
    signal ap_enable_operation_153 : BOOLEAN;
    signal ap_enable_operation_143 : BOOLEAN;
    signal ap_enable_operation_149 : BOOLEAN;
    signal ap_predicate_op174_store_state8 : BOOLEAN;
    signal ap_enable_operation_174 : BOOLEAN;
    signal ap_enable_state8_pp0_iter4_stage0 : BOOLEAN;
    signal ap_predicate_op179_store_state8 : BOOLEAN;
    signal ap_enable_operation_179 : BOOLEAN;
    signal ap_predicate_op145_load_state6 : BOOLEAN;
    signal ap_enable_operation_145 : BOOLEAN;
    signal ap_predicate_op150_load_state7 : BOOLEAN;
    signal ap_enable_operation_150 : BOOLEAN;
    signal ap_predicate_op172_store_state8 : BOOLEAN;
    signal ap_enable_operation_172 : BOOLEAN;
    signal ap_predicate_op178_store_state8 : BOOLEAN;
    signal ap_enable_operation_178 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1131_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1138_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1144_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1151_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1151_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1158_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1164_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_condition_1151 : BOOLEAN;

    component Canny_accel_mux_3hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Canny_accel_mac_mibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Canny_accel_mac_mjbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Canny_accel_mac_mkbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component Canny_accel_mac_mlbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component Canny_accel_mac_mmb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component Canny_accel_mac_mncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Filter2D_k_buf_0_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => reg_333);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    Canny_accel_mux_3hbi_U36 : component Canny_accel_mux_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_178,
        din1 => right_border_buf_0_1_fu_182,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_fu_824_p2,
        dout => tmp_42_fu_829_p5);

    Canny_accel_mux_3hbi_U37 : component Canny_accel_mux_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_190,
        din1 => right_border_buf_0_4_fu_194,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_fu_824_p2,
        dout => tmp_43_fu_847_p5);

    Canny_accel_mux_3hbi_U38 : component Canny_accel_mux_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_198,
        din1 => right_border_buf_0_2_fu_186,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_fu_824_p2,
        dout => tmp_44_fu_865_p5);

    Canny_accel_mux_3hbi_U39 : component Canny_accel_mux_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_1440,
        din1 => col_buf_0_val_1_0_reg_1448,
        din2 => col_buf_0_val_2_0_reg_1456,
        din3 => row_assign_10_0_t_reg_1347,
        dout => tmp_47_fu_919_p5);

    Canny_accel_mux_3hbi_U40 : component Canny_accel_mux_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_1440,
        din1 => col_buf_0_val_1_0_reg_1448,
        din2 => col_buf_0_val_2_0_reg_1456,
        din3 => row_assign_10_1_t_reg_1332,
        dout => tmp_51_fu_933_p5);

    Canny_accel_mux_3hbi_U41 : component Canny_accel_mux_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_1440,
        din1 => col_buf_0_val_1_0_reg_1448,
        din2 => col_buf_0_val_2_0_reg_1456,
        din3 => row_assign_10_2_t_reg_1337,
        dout => tmp_54_fu_947_p5);

    Canny_accel_mac_mibs_U42 : component Canny_accel_mac_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1131_p0,
        din1 => grp_fu_1131_p1,
        din2 => r_V_s_reg_1491,
        ce => grp_fu_1131_ce,
        dout => grp_fu_1131_p3);

    Canny_accel_mac_mjbC_U43 : component Canny_accel_mac_mjbC
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1138_p0,
        din1 => grp_fu_1138_p1,
        din2 => sum_V_0_1_reg_1506,
        ce => grp_fu_1138_ce,
        dout => grp_fu_1138_p3);

    Canny_accel_mac_mkbM_U44 : component Canny_accel_mac_mkbM
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1144_p0,
        din1 => grp_fu_1144_p1,
        din2 => sum_V_0_2_reg_1521,
        ce => grp_fu_1144_ce,
        dout => grp_fu_1144_p3);

    Canny_accel_mac_mlbW_U45 : component Canny_accel_mac_mlbW
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1151_p0,
        din1 => grp_fu_1151_p1,
        din2 => grp_fu_1151_p2,
        ce => grp_fu_1151_ce,
        dout => grp_fu_1151_p3);

    Canny_accel_mac_mmb6_U46 : component Canny_accel_mac_mmb6
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 4,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1158_p0,
        din1 => grp_fu_1158_p1,
        din2 => sum_V_1_1_reg_1536,
        ce => grp_fu_1158_ce,
        dout => grp_fu_1158_p3);

    Canny_accel_mac_mncg_U47 : component Canny_accel_mac_mncg
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1164_p0,
        din1 => grp_fu_1164_p1,
        din2 => tmp5_reg_1541,
        ce => grp_fu_1164_ce,
        dout => grp_fu_1164_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond460_i_fu_653_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter4_state8)) then 
                        ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter3;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    t_V_3_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_653_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_3_reg_322 <= j_V_fu_659_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                t_V_3_reg_322 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_311_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                t_V_reg_311 <= i_V_reg_1280;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                t_V_reg_311 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_653_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ImagLoc_x_reg_1361 <= ImagLoc_x_fu_681_p2;
                or_cond_i_reg_1380 <= or_cond_i_fu_717_p2;
                p_p2_i_i_reg_1373 <= p_p2_i_i_fu_709_p3;
                tmp_73_reg_1367 <= ImagLoc_x_fu_681_p2(11 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1352 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1398 <= brmerge_fu_791_p2;
                or_cond_i_i_reg_1384 <= or_cond_i_i_fu_732_p2;
                tmp_75_reg_1393 <= tmp_75_fu_787_p1;
                x_reg_1388 <= x_fu_779_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                brmerge_reg_1398_pp0_iter2_reg <= brmerge_reg_1398;
                brmerge_reg_1398_pp0_iter3_reg <= brmerge_reg_1398_pp0_iter2_reg;
                exitcond460_i_reg_1352_pp0_iter2_reg <= exitcond460_i_reg_1352_pp0_iter1_reg;
                exitcond460_i_reg_1352_pp0_iter3_reg <= exitcond460_i_reg_1352_pp0_iter2_reg;
                exitcond460_i_reg_1352_pp0_iter4_reg <= exitcond460_i_reg_1352_pp0_iter3_reg;
                exitcond460_i_reg_1352_pp0_iter5_reg <= exitcond460_i_reg_1352_pp0_iter4_reg;
                exitcond460_i_reg_1352_pp0_iter6_reg <= exitcond460_i_reg_1352_pp0_iter5_reg;
                k_buf_0_val_4_addr_reg_1411_pp0_iter3_reg <= k_buf_0_val_4_addr_reg_1411;
                k_buf_0_val_5_addr_reg_1417_pp0_iter3_reg <= k_buf_0_val_5_addr_reg_1417;
                or_cond_i_i_reg_1384_pp0_iter2_reg <= or_cond_i_i_reg_1384;
                or_cond_i_i_reg_1384_pp0_iter3_reg <= or_cond_i_i_reg_1384_pp0_iter2_reg;
                or_cond_i_reg_1380_pp0_iter10_reg <= or_cond_i_reg_1380_pp0_iter9_reg;
                or_cond_i_reg_1380_pp0_iter11_reg <= or_cond_i_reg_1380_pp0_iter10_reg;
                or_cond_i_reg_1380_pp0_iter2_reg <= or_cond_i_reg_1380_pp0_iter1_reg;
                or_cond_i_reg_1380_pp0_iter3_reg <= or_cond_i_reg_1380_pp0_iter2_reg;
                or_cond_i_reg_1380_pp0_iter4_reg <= or_cond_i_reg_1380_pp0_iter3_reg;
                or_cond_i_reg_1380_pp0_iter5_reg <= or_cond_i_reg_1380_pp0_iter4_reg;
                or_cond_i_reg_1380_pp0_iter6_reg <= or_cond_i_reg_1380_pp0_iter5_reg;
                or_cond_i_reg_1380_pp0_iter7_reg <= or_cond_i_reg_1380_pp0_iter6_reg;
                or_cond_i_reg_1380_pp0_iter8_reg <= or_cond_i_reg_1380_pp0_iter7_reg;
                or_cond_i_reg_1380_pp0_iter9_reg <= or_cond_i_reg_1380_pp0_iter8_reg;
                reg_333_pp0_iter3_reg <= reg_333;
                src_kernel_win_0_va_6_reg_1464 <= src_kernel_win_0_va_6_fu_927_p3;
                src_kernel_win_0_va_6_reg_1464_pp0_iter6_reg <= src_kernel_win_0_va_6_reg_1464;
                src_kernel_win_0_va_6_reg_1464_pp0_iter7_reg <= src_kernel_win_0_va_6_reg_1464_pp0_iter6_reg;
                src_kernel_win_0_va_6_reg_1464_pp0_iter8_reg <= src_kernel_win_0_va_6_reg_1464_pp0_iter7_reg;
                src_kernel_win_0_va_7_reg_1470 <= src_kernel_win_0_va_7_fu_941_p3;
                src_kernel_win_0_va_7_reg_1470_pp0_iter6_reg <= src_kernel_win_0_va_7_reg_1470;
                src_kernel_win_0_va_7_reg_1470_pp0_iter7_reg <= src_kernel_win_0_va_7_reg_1470_pp0_iter6_reg;
                src_kernel_win_0_va_8_reg_1476 <= src_kernel_win_0_va_8_fu_955_p3;
                tmp_75_reg_1393_pp0_iter2_reg <= tmp_75_reg_1393;
                tmp_75_reg_1393_pp0_iter3_reg <= tmp_75_reg_1393_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_buf_0_val_0_0_reg_1440 <= col_buf_0_val_0_0_fu_841_p3;
                col_buf_0_val_1_0_reg_1448 <= col_buf_0_val_1_0_fu_859_p3;
                col_buf_0_val_2_0_reg_1456 <= col_buf_0_val_2_0_fu_877_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond460_i_reg_1352 <= exitcond460_i_fu_653_p2;
                exitcond460_i_reg_1352_pp0_iter1_reg <= exitcond460_i_reg_1352;
                or_cond_i_reg_1380_pp0_iter1_reg <= or_cond_i_reg_1380;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1280 <= i_V_fu_374_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond461_i_fu_368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1290 <= icmp_fu_396_p2;
                row_assign_10_1_t_reg_1332 <= row_assign_10_1_t_fu_546_p2;
                row_assign_10_2_t_reg_1337 <= row_assign_10_2_t_fu_584_p2;
                tmp_203_1_reg_1299 <= tmp_203_1_fu_408_p2;
                tmp_24_reg_1295 <= tmp_24_fu_402_p2;
                tmp_25_reg_1303 <= tmp_25_fu_414_p2;
                tmp_26_reg_1315 <= tmp_26_fu_424_p2;
                tmp_30_reg_1327 <= tmp_30_fu_456_p2;
                tmp_56_reg_1310 <= tmp_56_fu_420_p1;
                tmp_60_reg_1321 <= tmp_60_fu_452_p1;
                tmp_s_reg_1285 <= tmp_s_fu_380_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_addr_reg_1405 <= tmp_41_fu_799_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1411 <= tmp_41_fu_799_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1417 <= tmp_41_fu_799_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1352_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_load_reg_1423 <= k_buf_0_val_3_q0;
                k_buf_0_val_4_load_reg_1429 <= k_buf_0_val_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((brmerge_reg_1398_pp0_iter2_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_5_load_reg_1435 <= k_buf_0_val_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1380_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_s_reg_1561 <= p_Val2_s_fu_1058_p2(11 downto 11);
                p_Val2_s_reg_1556 <= p_Val2_s_fu_1058_p2;
                tmp_79_reg_1568 <= p_Val2_s_fu_1058_p2(11 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1380_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_s_reg_1491 <= r_V_s_fu_983_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op147_read_state6 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op146_read_state6 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_333 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1) and (or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_182 <= right_border_buf_0_s_fu_178;
                right_border_buf_0_2_fu_186 <= right_border_buf_0_5_fu_198;
                right_border_buf_0_3_fu_190 <= col_buf_0_val_1_0_fu_859_p3;
                right_border_buf_0_4_fu_194 <= right_border_buf_0_3_fu_190;
                right_border_buf_0_5_fu_198 <= col_buf_0_val_2_0_fu_877_p3;
                right_border_buf_0_s_fu_178 <= col_buf_0_val_0_0_fu_841_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_25_reg_1303 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                row_assign_10_0_t_reg_1347 <= row_assign_10_0_t_fu_643_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1352_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_16_reg_1486 <= src_kernel_win_0_va_4_fu_170;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1352_pp0_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_158 <= src_kernel_win_0_va_fu_154;
                src_kernel_win_0_va_2_fu_162 <= src_kernel_win_0_va_7_reg_1470_pp0_iter6_reg;
                src_kernel_win_0_va_3_fu_166 <= src_kernel_win_0_va_2_fu_162;
                src_kernel_win_0_va_fu_154 <= src_kernel_win_0_va_6_reg_1464_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1352_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_4_fu_170 <= src_kernel_win_0_va_8_fu_955_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1352_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_5_fu_174 <= src_kernel_win_0_va_16_reg_1486;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1380_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_9_reg_1501 <= src_kernel_win_0_va_fu_154;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1380_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_0_1_reg_1506 <= grp_fu_1131_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1380_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_0_2_reg_1521 <= grp_fu_1138_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1380_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_1_1_reg_1536 <= grp_fu_1144_p3;
                tmp5_reg_1541 <= grp_fu_1151_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1380_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp3_reg_1546 <= grp_fu_1158_p3;
                tmp4_reg_1551 <= grp_fu_1164_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                tmp_159_0_not_reg_1342 <= tmp_159_0_not_fu_590_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_244_0_1_cast_reg_1247 <= tmp_244_0_1_cast_fu_340_p1;
                tmp_244_0_2_cast_reg_1252 <= tmp_244_0_2_cast_fu_344_p1;
                    tmp_244_1_2_cast_reg_1262(3 downto 0) <= tmp_244_1_2_cast_fu_352_p1(3 downto 0);
                tmp_244_1_cast_reg_1257 <= tmp_244_1_cast_fu_348_p1;
                    tmp_244_2_1_cast_reg_1272(2 downto 0) <= tmp_244_2_1_cast_fu_360_p1(2 downto 0);
                tmp_244_2_cast_reg_1267 <= tmp_244_2_cast_fu_356_p1;
            end if;
        end if;
    end process;
    tmp_244_1_2_cast_reg_1262(11 downto 4) <= "00000000";
    tmp_244_2_1_cast_reg_1272(10 downto 3) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter12, ap_CS_fsm_state2, exitcond461_i_fu_368_p2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond461_i_fu_368_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ImagLoc_x_fu_681_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(t_V_3_cast_fu_649_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state17 <= ap_CS_fsm(4);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter12, or_cond_i_reg_1380_pp0_iter11_reg, ap_predicate_op146_read_state6, ap_predicate_op147_read_state6)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_reg_1380_pp0_iter11_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op146_read_state6 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter12, or_cond_i_reg_1380_pp0_iter11_reg, ap_predicate_op146_read_state6, ap_predicate_op147_read_state6)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_reg_1380_pp0_iter11_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op146_read_state6 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter12, or_cond_i_reg_1380_pp0_iter11_reg, ap_predicate_op146_read_state6, ap_predicate_op147_read_state6)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_reg_1380_pp0_iter11_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op146_read_state6 = ap_const_boolean_1)))));
    end process;

        ap_block_state10_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp0_stage0_iter12_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_reg_1380_pp0_iter11_reg)
    begin
                ap_block_state16_pp0_stage0_iter12 <= ((or_cond_i_reg_1380_pp0_iter11_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op146_read_state6, ap_predicate_op147_read_state6)
    begin
                ap_block_state6_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op146_read_state6 = ap_const_boolean_1)));
    end process;

        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1151_assign_proc : process(ap_block_pp0_stage0, exitcond460_i_reg_1352_pp0_iter3_reg, or_cond_i_i_reg_1384_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
                ap_condition_1151 <= ((or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter4_state8_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter4_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter4_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond461_i_fu_368_p2)
    begin
        if ((((exitcond461_i_fu_368_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_141_assign_proc : process(exitcond460_i_reg_1352_pp0_iter1_reg)
    begin
                ap_enable_operation_141 <= (exitcond460_i_reg_1352_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_143_assign_proc : process(exitcond460_i_reg_1352_pp0_iter1_reg)
    begin
                ap_enable_operation_143 <= (exitcond460_i_reg_1352_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_145_assign_proc : process(ap_predicate_op145_load_state6)
    begin
                ap_enable_operation_145 <= (ap_predicate_op145_load_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_148_assign_proc : process(exitcond460_i_reg_1352_pp0_iter2_reg)
    begin
                ap_enable_operation_148 <= (exitcond460_i_reg_1352_pp0_iter2_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_149_assign_proc : process(exitcond460_i_reg_1352_pp0_iter2_reg)
    begin
                ap_enable_operation_149 <= (exitcond460_i_reg_1352_pp0_iter2_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_150_assign_proc : process(ap_predicate_op150_load_state7)
    begin
                ap_enable_operation_150 <= (ap_predicate_op150_load_state7 = ap_const_boolean_1);
    end process;


    ap_enable_operation_151_assign_proc : process(ap_predicate_op151_store_state7)
    begin
                ap_enable_operation_151 <= (ap_predicate_op151_store_state7 = ap_const_boolean_1);
    end process;


    ap_enable_operation_153_assign_proc : process(ap_predicate_op153_store_state7)
    begin
                ap_enable_operation_153 <= (ap_predicate_op153_store_state7 = ap_const_boolean_1);
    end process;


    ap_enable_operation_172_assign_proc : process(ap_predicate_op172_store_state8)
    begin
                ap_enable_operation_172 <= (ap_predicate_op172_store_state8 = ap_const_boolean_1);
    end process;


    ap_enable_operation_174_assign_proc : process(ap_predicate_op174_store_state8)
    begin
                ap_enable_operation_174 <= (ap_predicate_op174_store_state8 = ap_const_boolean_1);
    end process;


    ap_enable_operation_178_assign_proc : process(ap_predicate_op178_store_state8)
    begin
                ap_enable_operation_178 <= (ap_predicate_op178_store_state8 = ap_const_boolean_1);
    end process;


    ap_enable_operation_179_assign_proc : process(ap_predicate_op179_store_state8)
    begin
                ap_enable_operation_179 <= (ap_predicate_op179_store_state8 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state6_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage0)
    begin
                ap_enable_state6_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state7_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state7_pp0_iter3_stage0 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state8_pp0_iter4_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4)
    begin
                ap_enable_state8_pp0_iter4_stage0 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op145_load_state6_assign_proc : process(exitcond460_i_reg_1352_pp0_iter1_reg, brmerge_reg_1398)
    begin
                ap_predicate_op145_load_state6 <= ((brmerge_reg_1398 = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op146_read_state6_assign_proc : process(exitcond460_i_reg_1352_pp0_iter1_reg, or_cond_i_i_reg_1384, icmp_reg_1290)
    begin
                ap_predicate_op146_read_state6 <= ((or_cond_i_i_reg_1384 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0) and (exitcond460_i_reg_1352_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op147_read_state6_assign_proc : process(exitcond460_i_reg_1352_pp0_iter1_reg, or_cond_i_i_reg_1384, icmp_reg_1290, tmp_s_reg_1285)
    begin
                ap_predicate_op147_read_state6 <= ((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1) and (or_cond_i_i_reg_1384 = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op150_load_state7_assign_proc : process(exitcond460_i_reg_1352_pp0_iter2_reg, brmerge_reg_1398_pp0_iter2_reg)
    begin
                ap_predicate_op150_load_state7 <= ((brmerge_reg_1398_pp0_iter2_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op151_store_state7_assign_proc : process(icmp_reg_1290, tmp_24_reg_1295, exitcond460_i_reg_1352_pp0_iter2_reg, or_cond_i_i_reg_1384_pp0_iter2_reg)
    begin
                ap_predicate_op151_store_state7 <= ((or_cond_i_i_reg_1384_pp0_iter2_reg = ap_const_lv1_1) and (tmp_24_reg_1295 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0) and (exitcond460_i_reg_1352_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op153_store_state7_assign_proc : process(icmp_reg_1290, tmp_s_reg_1285, exitcond460_i_reg_1352_pp0_iter2_reg, or_cond_i_i_reg_1384_pp0_iter2_reg)
    begin
                ap_predicate_op153_store_state7 <= ((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1) and (or_cond_i_i_reg_1384_pp0_iter2_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op172_store_state8_assign_proc : process(icmp_reg_1290, tmp_24_reg_1295, exitcond460_i_reg_1352_pp0_iter3_reg, or_cond_i_i_reg_1384_pp0_iter3_reg)
    begin
                ap_predicate_op172_store_state8 <= ((or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (tmp_24_reg_1295 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op174_store_state8_assign_proc : process(icmp_reg_1290, tmp_203_1_reg_1299, exitcond460_i_reg_1352_pp0_iter3_reg, or_cond_i_i_reg_1384_pp0_iter3_reg)
    begin
                ap_predicate_op174_store_state8 <= ((or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (tmp_203_1_reg_1299 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op178_store_state8_assign_proc : process(icmp_reg_1290, tmp_s_reg_1285, exitcond460_i_reg_1352_pp0_iter3_reg, or_cond_i_i_reg_1384_pp0_iter3_reg)
    begin
                ap_predicate_op178_store_state8 <= ((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1) and (or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op179_store_state8_assign_proc : process(icmp_reg_1290, tmp_s_reg_1285, exitcond460_i_reg_1352_pp0_iter3_reg, or_cond_i_i_reg_1384_pp0_iter3_reg)
    begin
                ap_predicate_op179_store_state8 <= ((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1) and (or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond461_i_fu_368_p2)
    begin
        if (((exitcond461_i_fu_368_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge2_i_i_fu_1092_p2 <= (tmp_79_reg_1568 xor p_Result_s_reg_1561);
    brmerge3_i_i_fu_1101_p2 <= (tmp_79_reg_1568 or p_Result_not_fu_1096_p2);
    brmerge_fu_791_p2 <= (tmp_37_fu_727_p2 or tmp_159_0_not_reg_1342);
    col_assign_3_t_fu_824_p2 <= (tmp_75_reg_1393_pp0_iter3_reg xor ap_const_lv2_3);
        col_assign_cast_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1388),32));

    col_buf_0_val_0_0_fu_841_p3 <= 
        k_buf_0_val_3_load_reg_1423 when (brmerge_reg_1398_pp0_iter3_reg(0) = '1') else 
        tmp_42_fu_829_p5;
    col_buf_0_val_1_0_fu_859_p3 <= 
        k_buf_0_val_4_load_reg_1429 when (brmerge_reg_1398_pp0_iter3_reg(0) = '1') else 
        tmp_43_fu_847_p5;
    col_buf_0_val_2_0_fu_877_p3 <= 
        k_buf_0_val_5_load_reg_1435 when (brmerge_reg_1398_pp0_iter3_reg(0) = '1') else 
        tmp_44_fu_865_p5;
    exitcond460_i_fu_653_p2 <= "1" when (t_V_3_reg_322 = ap_const_lv11_502) else "0";
    exitcond461_i_fu_368_p2 <= "1" when (t_V_reg_311 = ap_const_lv10_2D2) else "0";

    grp_fu_1131_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1131_ce <= ap_const_logic_1;
        else 
            grp_fu_1131_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1131_p0 <= tmp_244_0_1_cast_reg_1247(2 - 1 downto 0);
    grp_fu_1131_p1 <= grp_fu_1131_p10(8 - 1 downto 0);
    grp_fu_1131_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_fu_170),10));

    grp_fu_1138_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1138_ce <= ap_const_logic_1;
        else 
            grp_fu_1138_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1138_p0 <= tmp_244_0_2_cast_reg_1252(2 - 1 downto 0);
    grp_fu_1138_p1 <= grp_fu_1138_p10(8 - 1 downto 0);
    grp_fu_1138_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_1476),10));

    grp_fu_1144_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1144_ce <= ap_const_logic_1;
        else 
            grp_fu_1144_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1144_p0 <= tmp_244_1_cast_reg_1257(3 - 1 downto 0);
    grp_fu_1144_p1 <= grp_fu_1144_p10(8 - 1 downto 0);
    grp_fu_1144_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_166),11));

    grp_fu_1151_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1151_ce <= ap_const_logic_1;
        else 
            grp_fu_1151_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1151_p0 <= tmp_244_2_cast_reg_1267(2 - 1 downto 0);
    grp_fu_1151_p1 <= grp_fu_1151_p10(8 - 1 downto 0);
    grp_fu_1151_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_158),10));
    grp_fu_1151_p2 <= grp_fu_1151_p20(8 - 1 downto 0);
    grp_fu_1151_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_reg_1464_pp0_iter8_reg),10));

    grp_fu_1158_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1158_ce <= ap_const_logic_1;
        else 
            grp_fu_1158_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1158_p0 <= tmp_244_1_2_cast_reg_1262(4 - 1 downto 0);
    grp_fu_1158_p1 <= grp_fu_1158_p10(8 - 1 downto 0);
    grp_fu_1158_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_7_reg_1470_pp0_iter7_reg),12));

    grp_fu_1164_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1164_ce <= ap_const_logic_1;
        else 
            grp_fu_1164_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1164_p0 <= tmp_244_2_1_cast_reg_1272(3 - 1 downto 0);
    grp_fu_1164_p1 <= grp_fu_1164_p10(8 - 1 downto 0);
    grp_fu_1164_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_9_reg_1501),11));
    i_V_fu_374_p2 <= std_logic_vector(unsigned(t_V_reg_311) + unsigned(ap_const_lv10_1));
    icmp3_fu_675_p2 <= "0" when (tmp_72_fu_665_p4 = ap_const_lv10_0) else "1";
    icmp_fu_396_p2 <= "0" when (tmp_53_fu_386_p4 = ap_const_lv9_0) else "1";
    j_V_fu_659_p2 <= std_logic_vector(unsigned(t_V_3_reg_322) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_41_fu_799_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1405;

    k_buf_0_val_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(icmp_reg_1290, tmp_s_reg_1285, ap_block_pp0_stage0_11001, tmp_24_reg_1295, exitcond460_i_reg_1352_pp0_iter2_reg, or_cond_i_i_reg_1384_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1) and (or_cond_i_i_reg_1384_pp0_iter2_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_cond_i_i_reg_1384_pp0_iter2_reg = ap_const_lv1_1) and (tmp_24_reg_1295 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0) and (exitcond460_i_reg_1352_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(icmp_reg_1290, tmp_s_reg_1285, ap_block_pp0_stage0_11001, tmp_24_reg_1295, exitcond460_i_reg_1352_pp0_iter2_reg, or_cond_i_i_reg_1384_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1) and (or_cond_i_i_reg_1384_pp0_iter2_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_cond_i_i_reg_1384_pp0_iter2_reg = ap_const_lv1_1) and (tmp_24_reg_1295 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0) and (exitcond460_i_reg_1352_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_41_fu_799_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1411_pp0_iter3_reg;

    k_buf_0_val_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(icmp_reg_1290, tmp_s_reg_1285, ap_block_pp0_stage0_11001, tmp_203_1_reg_1299, exitcond460_i_reg_1352_pp0_iter3_reg, or_cond_i_i_reg_1384_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1) and (or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (tmp_203_1_reg_1299 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(icmp_reg_1290, tmp_s_reg_1285, reg_333_pp0_iter3_reg, tmp_203_1_reg_1299, k_buf_0_val_3_load_reg_1423, ap_condition_1151)
    begin
        if ((ap_const_boolean_1 = ap_condition_1151)) then
            if (((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_load_reg_1423;
            elsif (((tmp_203_1_reg_1299 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0))) then 
                k_buf_0_val_4_d1 <= reg_333_pp0_iter3_reg;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(icmp_reg_1290, tmp_s_reg_1285, ap_block_pp0_stage0_11001, tmp_203_1_reg_1299, exitcond460_i_reg_1352_pp0_iter3_reg, or_cond_i_i_reg_1384_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1) and (or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (tmp_203_1_reg_1299 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_41_fu_799_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1417_pp0_iter3_reg;

    k_buf_0_val_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(icmp_reg_1290, tmp_s_reg_1285, ap_block_pp0_stage0_11001, tmp_24_reg_1295, exitcond460_i_reg_1352_pp0_iter3_reg, or_cond_i_i_reg_1384_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1) and (or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (tmp_24_reg_1295 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(icmp_reg_1290, tmp_s_reg_1285, reg_333_pp0_iter3_reg, tmp_24_reg_1295, k_buf_0_val_4_load_reg_1429, ap_condition_1151)
    begin
        if ((ap_const_boolean_1 = ap_condition_1151)) then
            if (((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_load_reg_1429;
            elsif (((tmp_24_reg_1295 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0))) then 
                k_buf_0_val_5_d1 <= reg_333_pp0_iter3_reg;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(icmp_reg_1290, tmp_s_reg_1285, ap_block_pp0_stage0_11001, tmp_24_reg_1295, exitcond460_i_reg_1352_pp0_iter3_reg, or_cond_i_i_reg_1384_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1) and (or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_cond_i_i_reg_1384_pp0_iter3_reg = ap_const_lv1_1) and (tmp_24_reg_1295 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0) and (exitcond460_i_reg_1352_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_i496_i_fu_618_p2 <= (tmp_28_fu_613_p2 and rev_fu_607_p2);
    or_cond_i_fu_717_p2 <= (icmp_reg_1290 and icmp3_fu_675_p2);
    or_cond_i_i_fu_732_p2 <= (tmp_37_fu_727_p2 and rev11_fu_722_p2);
    p_Result_not_fu_1096_p2 <= (p_Result_s_reg_1561 xor ap_const_lv1_1);
        p_Val2_1_fu_1079_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1556),16));

    p_Val2_s_fu_1058_p2 <= std_logic_vector(signed(tmp3_reg_1546) + signed(tmp4_cast_fu_1055_p1));
    p_assign_1_fu_703_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_3_cast_fu_649_p1));
    p_assign_2_fu_746_p2 <= std_logic_vector(signed(ap_const_lv12_9FE) - signed(p_p2_i_i_reg_1373));
    p_assign_3_fu_751_p3 <= 
        ImagLoc_x_reg_1361 when (or_cond_i_i_fu_732_p2(0) = '1') else 
        p_assign_2_fu_746_p2;
    p_assign_6_1_fu_462_p2 <= std_logic_vector(signed(ap_const_lv11_7FE) + signed(t_V_cast_fu_364_p1));
    p_assign_6_2_fu_488_p2 <= std_logic_vector(signed(ap_const_lv11_7FD) + signed(t_V_cast_fu_364_p1));
    p_assign_7_fu_438_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) - unsigned(t_V_cast_fu_364_p1));
    p_assign_8_fu_624_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_60_reg_1321));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, or_cond_i_reg_1380_pp0_iter11_reg)
    begin
        if (((or_cond_i_reg_1380_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_mux_i_i_fu_1106_p3 when (brmerge3_i_i_fu_1101_p2(0) = '1') else 
        p_i_i_fu_1114_p3;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter12, or_cond_i_reg_1380_pp0_iter11_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_reg_1380_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i_i_fu_1114_p3 <= 
        ap_const_lv16_8000 when (underflow_fu_1087_p2(0) = '1') else 
        p_Val2_1_fu_1079_p1;
    p_mux_i_i_fu_1106_p3 <= 
        ap_const_lv16_7FFF when (brmerge2_i_i_fu_1092_p2(0) = '1') else 
        p_Val2_1_fu_1079_p1;
    p_not1_i_i_fu_1082_p2 <= (tmp_79_reg_1568 xor ap_const_lv1_1);
    p_p2_i497_i_fu_444_p3 <= 
        p_assign_7_fu_438_p2 when (tmp_59_fu_430_p3(0) = '1') else 
        tmp_26_fu_424_p2;
    p_p2_i497_i_p_assign_8_fu_629_p3 <= 
        tmp_60_reg_1321 when (tmp_30_reg_1327(0) = '1') else 
        p_assign_8_fu_624_p2;
        p_p2_i_i_cast_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_reg_1373),13));

    p_p2_i_i_fu_709_p3 <= 
        p_assign_1_fu_703_p2 when (tmp_74_fu_695_p3(0) = '1') else 
        ImagLoc_x_fu_681_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, exitcond460_i_reg_1352_pp0_iter1_reg, or_cond_i_i_reg_1384, icmp_reg_1290, tmp_s_reg_1285)
    begin
        if ((((tmp_s_reg_1285 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_1) and (or_cond_i_i_reg_1384 = ap_const_lv1_1) and (exitcond460_i_reg_1352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((or_cond_i_i_reg_1384 = ap_const_lv1_1) and (icmp_reg_1290 = ap_const_lv1_0) and (exitcond460_i_reg_1352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op146_read_state6, ap_predicate_op147_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op147_read_state6 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op146_read_state6 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_0_cast_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_174),9));
    r_V_s_fu_983_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(r_V_0_cast_fu_979_p1));
    rev11_fu_722_p2 <= (tmp_73_reg_1367 xor ap_const_lv1_1);
    rev_fu_607_p2 <= (tmp_57_fu_600_p3 xor ap_const_lv1_1);
    row_assign_10_0_t_fu_643_p2 <= (y_fu_635_p3 xor ap_const_lv2_3);
    row_assign_10_1_t_fu_546_p2 <= (tmp_48_fu_538_p3 xor ap_const_lv2_3);
    row_assign_10_2_t_fu_584_p2 <= (tmp_52_fu_576_p3 xor ap_const_lv2_3);
    sel_tmp7_fu_768_p2 <= (tmp_73_reg_1367 or tmp_37_not_fu_762_p2);
    sel_tmp8_fu_773_p2 <= (tmp_39_fu_741_p2 and sel_tmp7_fu_768_p2);
    sel_tmp_cast_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_assign_3_fu_751_p3),13));
    src_kernel_win_0_va_6_fu_927_p3 <= 
        tmp_47_fu_919_p5 when (tmp_25_reg_1303(0) = '1') else 
        col_buf_0_val_0_0_reg_1440;
    src_kernel_win_0_va_7_fu_941_p3 <= 
        tmp_51_fu_933_p5 when (tmp_25_reg_1303(0) = '1') else 
        col_buf_0_val_1_0_reg_1448;
    src_kernel_win_0_va_8_fu_955_p3 <= 
        tmp_54_fu_947_p5 when (tmp_25_reg_1303(0) = '1') else 
        col_buf_0_val_2_0_reg_1456;
    t_V_3_cast_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_3_reg_322),12));
    t_V_cast_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_311),11));
        tmp4_cast_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp4_reg_1551),12));

    tmp_159_0_not_fu_590_p2 <= (tmp_s_reg_1285 xor ap_const_lv1_1);
    tmp_203_1_fu_408_p2 <= "1" when (t_V_reg_311 = ap_const_lv10_0) else "0";
        tmp_244_0_1_cast_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),10));

        tmp_244_0_2_cast_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),10));

    tmp_244_1_2_cast_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_1_V_2_read),12));
        tmp_244_1_cast_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),11));

    tmp_244_2_1_cast_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_1_read),11));
        tmp_244_2_cast_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),10));

    tmp_24_fu_402_p2 <= "1" when (t_V_reg_311 = ap_const_lv10_1) else "0";
    tmp_25_fu_414_p2 <= "1" when (unsigned(t_V_reg_311) > unsigned(ap_const_lv10_2D0)) else "0";
    tmp_26_fu_424_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(t_V_cast_fu_364_p1));
    tmp_28_fu_613_p2 <= "1" when (signed(tmp_26_reg_1315) < signed(ap_const_lv11_2D0)) else "0";
    tmp_30_fu_456_p2 <= "1" when (signed(p_p2_i497_i_fu_444_p3) < signed(ap_const_lv11_2D0)) else "0";
    tmp_34_cast_fu_595_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_56_reg_1310));
    tmp_37_fu_727_p2 <= "1" when (signed(ImagLoc_x_reg_1361) < signed(ap_const_lv12_500)) else "0";
    tmp_37_not_fu_762_p2 <= (tmp_37_fu_727_p2 xor ap_const_lv1_1);
    tmp_39_fu_741_p2 <= "1" when (signed(p_p2_i_i_reg_1373) < signed(ap_const_lv12_500)) else "0";
    tmp_41_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_fu_796_p1),64));
    tmp_45_fu_514_p2 <= (tmp_56_fu_420_p1 xor ap_const_lv2_2);
    tmp_46_fu_530_p3 <= 
        tmp_68_fu_520_p2 when (tmp_63_fu_476_p3(0) = '1') else 
        tmp_69_fu_526_p1;
    tmp_48_fu_538_p3 <= 
        tmp_46_fu_530_p3 when (tmp_62_fu_468_p3(0) = '1') else 
        tmp_45_fu_514_p2;
    tmp_49_fu_552_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(tmp_56_fu_420_p1));
    tmp_50_fu_568_p3 <= 
        tmp_70_fu_558_p2 when (tmp_66_fu_502_p3(0) = '1') else 
        tmp_71_fu_564_p1;
    tmp_52_fu_576_p3 <= 
        tmp_50_fu_568_p3 when (tmp_65_fu_494_p3(0) = '1') else 
        tmp_49_fu_552_p2;
    tmp_53_fu_386_p4 <= t_V_reg_311(9 downto 1);
    tmp_56_fu_420_p1 <= t_V_reg_311(2 - 1 downto 0);
    tmp_57_fu_600_p3 <= tmp_26_reg_1315(10 downto 10);
    tmp_59_fu_430_p3 <= tmp_26_fu_424_p2(10 downto 10);
    tmp_60_fu_452_p1 <= p_p2_i497_i_fu_444_p3(2 - 1 downto 0);
    tmp_62_fu_468_p3 <= p_assign_6_1_fu_462_p2(10 downto 10);
    tmp_63_fu_476_p3 <= p_assign_6_1_fu_462_p2(10 downto 10);
    tmp_64_fu_484_p1 <= t_V_reg_311(2 - 1 downto 0);
    tmp_65_fu_494_p3 <= p_assign_6_2_fu_488_p2(10 downto 10);
    tmp_66_fu_502_p3 <= p_assign_6_2_fu_488_p2(10 downto 10);
    tmp_67_fu_510_p1 <= t_V_reg_311(2 - 1 downto 0);
    tmp_68_fu_520_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_64_fu_484_p1));
    tmp_69_fu_526_p1 <= p_assign_6_1_fu_462_p2(2 - 1 downto 0);
    tmp_70_fu_558_p2 <= (tmp_67_fu_510_p1 xor ap_const_lv2_3);
    tmp_71_fu_564_p1 <= p_assign_6_2_fu_488_p2(2 - 1 downto 0);
    tmp_72_fu_665_p4 <= t_V_3_reg_322(10 downto 1);
    tmp_74_fu_695_p3 <= ImagLoc_x_fu_681_p2(11 downto 11);
    tmp_75_fu_787_p1 <= x_fu_779_p3(2 - 1 downto 0);
    tmp_s_fu_380_p2 <= "1" when (unsigned(t_V_reg_311) < unsigned(ap_const_lv10_2D0)) else "0";
    underflow_fu_1087_p2 <= (p_not1_i_i_fu_1082_p2 and p_Result_s_reg_1561);
    x_fu_779_p3 <= 
        p_p2_i_i_cast_fu_738_p1 when (sel_tmp8_fu_773_p2(0) = '1') else 
        sel_tmp_cast_fu_758_p1;
    y_fu_635_p3 <= 
        tmp_34_cast_fu_595_p2 when (or_cond_i496_i_fu_618_p2(0) = '1') else 
        p_p2_i497_i_p_assign_8_fu_629_p3;
end behav;
