-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity findMaxRegion is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    count_strm_V_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    count_strm_V_V_empty_n : IN STD_LOGIC;
    count_strm_V_V_read : OUT STD_LOGIC;
    res_strm_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_strm_V_full_n : IN STD_LOGIC;
    res_strm_V_write : OUT STD_LOGIC );
end;


architecture behav of findMaxRegion is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv11_7D0 : STD_LOGIC_VECTOR (10 downto 0) := "11111010000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_500 : STD_LOGIC_VECTOR (10 downto 0) := "10100000000";
    constant ap_const_lv11_7CF : STD_LOGIC_VECTOR (10 downto 0) := "11111001111";
    constant ap_const_lv11_4FF : STD_LOGIC_VECTOR (10 downto 0) := "10011111111";
    constant ap_const_lv12_B00 : STD_LOGIC_VECTOR (11 downto 0) := "101100000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal count_strm_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal res_strm_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal i_i_reg_151 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_i_reg_151_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_i_reg_151_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal i_i_reg_151_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_768 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_251_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_772 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_37_i_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_i_reg_777 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_i_reg_777_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_i_reg_777_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_reg_781 : STD_LOGIC_VECTOR (11 downto 0);
    signal isInValidRegionX_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isInValidRegionX_reg_787 : STD_LOGIC_VECTOR (0 downto 0);
    signal isInValidRegionX_reg_787_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal isInValidRegionX_reg_787_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_i_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_i_reg_799 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_i_reg_799_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_i_reg_799_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_i_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_i_reg_805 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_i_reg_805_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_i_reg_805_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal meetHighBoarderY_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal meetHighBoarderY_reg_811 : STD_LOGIC_VECTOR (0 downto 0);
    signal meetHighBoarderY_reg_811_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal maxValSumY_fu_341_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxValSumY_reg_817 : STD_LOGIC_VECTOR (31 downto 0);
    signal meetHighBoarderX_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal meetHighBoarderX_reg_823 : STD_LOGIC_VECTOR (0 downto 0);
    signal meetHighBoarderX_reg_823_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal maxValSumX_fu_398_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxValSumX_reg_829 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_i_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_i_reg_835 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_i_fu_424_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_50_i_reg_840 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_cond5_i_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_i_reg_845 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_i_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_i_reg_851 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_i_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_i_reg_856 : STD_LOGIC_VECTOR (0 downto 0);
    signal widthX_fu_618_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal widthX_reg_862 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal centerX_reg_867 : STD_LOGIC_VECTOR (30 downto 0);
    signal widthY_fu_644_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal widthY_reg_872 : STD_LOGIC_VECTOR (31 downto 0);
    signal centerY_reg_877 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_phi_mux_i_i_phi_fu_155_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal centerX_2_fu_640_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal centerY_2_fu_666_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxValSumY_2_fu_82 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxValSumY_1_fu_440_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxPosHighY_fu_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxPosHighY_1_fu_527_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxPosLowY_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxPosLowY_1_fu_520_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxPosHighY_2_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal curPosHighY_fu_513_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxPosLowY_2_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal curPosLowY_fu_505_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxValSumX_2_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxValSumX_1_fu_471_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxPosHighX_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxPosHighX_1_fu_591_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxPosLowX_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxPosLowX_1_fu_584_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxPosHighX_2_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal curPosHighX_fu_577_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal maxPosLowX_2_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal curPosLowX_fu_569_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_curY_V_fu_130 : STD_LOGIC_VECTOR (11 downto 0);
    signal val_curY_V_1_fu_134 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_49_i_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_i_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_3_i_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_or_cond3_i_fu_315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_i_fu_332_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_i_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal curValSumY_fu_335_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_i_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_i_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_i_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_or_cond2_i_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_i_fu_389_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_i_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal curValSumX_fu_392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_cast_i_fu_411_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_55_i_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_i_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_1_i2_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal meetLowBoarderY_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_cast_i_fu_502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i3_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal meetLowBoarderX_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_cast7_i_fu_483_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_20_fu_624_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_i_fu_650_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((res_strm_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_151_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_reg_768 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_i_reg_151 <= i_reg_772;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_i_reg_151 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    i_op_assign_1_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_37_i_reg_777 = ap_const_lv1_0))) then 
                i_op_assign_1_fu_94 <= maxValSumY_fu_341_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_op_assign_1_fu_94 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_op_assign_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_37_i_reg_777 = ap_const_lv1_1))) then 
                i_op_assign_fu_118 <= maxValSumX_fu_398_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_op_assign_fu_118 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    maxPosHighX_2_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_37_i_reg_777_pp0_iter3_reg = ap_const_lv1_1))) then 
                maxPosHighX_2_fu_122 <= curPosHighX_fu_577_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                maxPosHighX_2_fu_122 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    maxPosHighX_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_37_i_reg_777_pp0_iter3_reg = ap_const_lv1_1))) then 
                maxPosHighX_fu_110 <= maxPosHighX_1_fu_591_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                maxPosHighX_fu_110 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    maxPosHighY_2_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_37_i_reg_777_pp0_iter3_reg = ap_const_lv1_0))) then 
                maxPosHighY_2_fu_98 <= curPosHighY_fu_513_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                maxPosHighY_2_fu_98 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    maxPosHighY_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_37_i_reg_777_pp0_iter3_reg = ap_const_lv1_0))) then 
                maxPosHighY_fu_86 <= maxPosHighY_1_fu_527_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                maxPosHighY_fu_86 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    maxPosLowX_2_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_37_i_reg_777_pp0_iter3_reg = ap_const_lv1_1))) then 
                maxPosLowX_2_fu_126 <= curPosLowX_fu_569_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                maxPosLowX_2_fu_126 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    maxPosLowX_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_37_i_reg_777_pp0_iter3_reg = ap_const_lv1_1))) then 
                maxPosLowX_fu_114 <= maxPosLowX_1_fu_584_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                maxPosLowX_fu_114 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    maxPosLowY_2_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_37_i_reg_777_pp0_iter3_reg = ap_const_lv1_0))) then 
                maxPosLowY_2_fu_102 <= curPosLowY_fu_505_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                maxPosLowY_2_fu_102 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    maxPosLowY_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_37_i_reg_777_pp0_iter3_reg = ap_const_lv1_0))) then 
                maxPosLowY_fu_90 <= maxPosLowY_1_fu_520_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                maxPosLowY_fu_90 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    maxValSumX_2_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_37_i_reg_777_pp0_iter2_reg = ap_const_lv1_1))) then 
                maxValSumX_2_fu_106 <= maxValSumX_1_fu_471_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                maxValSumX_2_fu_106 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    maxValSumY_2_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_37_i_reg_777_pp0_iter2_reg = ap_const_lv1_0))) then 
                maxValSumY_2_fu_82 <= maxValSumY_1_fu_440_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                maxValSumY_2_fu_82 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    val_curY_V_1_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_37_i_fu_257_p2 = ap_const_lv1_1))) then 
                val_curY_V_1_fu_134 <= count_strm_V_V_dout;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                val_curY_V_1_fu_134 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    val_curY_V_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_37_i_fu_257_p2 = ap_const_lv1_0))) then 
                val_curY_V_fu_130 <= count_strm_V_V_dout;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                val_curY_V_fu_130 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                centerX_reg_867 <= tmp_i_20_fu_624_p2(31 downto 1);
                widthX_reg_862 <= widthX_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((res_strm_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                centerY_reg_877 <= tmp_36_i_fu_650_p2(31 downto 1);
                widthY_reg_872 <= widthY_fu_644_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_i_reg_151_pp0_iter1_reg <= i_i_reg_151;
                isInValidRegionX_reg_787 <= isInValidRegionX_fu_263_p2;
                tmp_37_i_reg_777 <= tmp_37_i_fu_257_p2;
                tmp_V_reg_781 <= count_strm_V_V_dout;
                tmp_i_reg_768 <= tmp_i_fu_245_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                i_i_reg_151_pp0_iter2_reg <= i_i_reg_151_pp0_iter1_reg;
                i_i_reg_151_pp0_iter3_reg <= i_i_reg_151_pp0_iter2_reg;
                isInValidRegionX_reg_787_pp0_iter2_reg <= isInValidRegionX_reg_787;
                isInValidRegionX_reg_787_pp0_iter3_reg <= isInValidRegionX_reg_787_pp0_iter2_reg;
                meetHighBoarderX_reg_823_pp0_iter3_reg <= meetHighBoarderX_reg_823;
                meetHighBoarderY_reg_811_pp0_iter3_reg <= meetHighBoarderY_reg_811;
                tmp_37_i_reg_777_pp0_iter2_reg <= tmp_37_i_reg_777;
                tmp_37_i_reg_777_pp0_iter3_reg <= tmp_37_i_reg_777_pp0_iter2_reg;
                tmp_38_i_reg_805_pp0_iter2_reg <= tmp_38_i_reg_805;
                tmp_38_i_reg_805_pp0_iter3_reg <= tmp_38_i_reg_805_pp0_iter2_reg;
                tmp_44_i_reg_799_pp0_iter2_reg <= tmp_44_i_reg_799;
                tmp_44_i_reg_799_pp0_iter3_reg <= tmp_44_i_reg_799_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_772 <= i_fu_251_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_37_i_reg_777 = ap_const_lv1_1))) then
                maxValSumX_reg_829 <= maxValSumX_fu_398_p3;
                meetHighBoarderX_reg_823 <= meetHighBoarderX_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_37_i_reg_777 = ap_const_lv1_0))) then
                maxValSumY_reg_817 <= maxValSumY_fu_341_p3;
                meetHighBoarderY_reg_811 <= meetHighBoarderY_fu_321_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_37_i_reg_777_pp0_iter2_reg = ap_const_lv1_1))) then
                or_cond4_i_reg_856 <= or_cond4_i_fu_466_p2;
                tmp_45_i_reg_851 <= tmp_45_i_fu_455_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_37_i_reg_777_pp0_iter2_reg = ap_const_lv1_0))) then
                or_cond5_i_reg_845 <= or_cond5_i_fu_435_p2;
                tmp_46_i_reg_835 <= tmp_46_i_fu_418_p2;
                tmp_50_i_reg_840 <= tmp_50_i_fu_424_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_37_i_fu_257_p2 = ap_const_lv1_1))) then
                tmp_38_i_reg_805 <= tmp_38_i_fu_286_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_37_i_fu_257_p2 = ap_const_lv1_0))) then
                tmp_44_i_reg_799 <= tmp_44_i_fu_272_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, res_strm_V_full_n, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, tmp_i_fu_245_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((tmp_i_fu_245_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((tmp_i_fu_245_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((res_strm_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((res_strm_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((res_strm_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((res_strm_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(5);
    ap_CS_fsm_state11 <= ap_CS_fsm(6);
    ap_CS_fsm_state7 <= ap_CS_fsm(2);
    ap_CS_fsm_state8 <= ap_CS_fsm(3);
    ap_CS_fsm_state9 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(count_strm_V_V_empty_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((count_strm_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(count_strm_V_V_empty_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((count_strm_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(count_strm_V_V_empty_n)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (count_strm_V_V_empty_n = ap_const_logic_0);
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_i_fu_245_p2)
    begin
        if ((tmp_i_fu_245_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, res_strm_V_full_n, ap_CS_fsm_state11)
    begin
        if (((res_strm_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_i_phi_fu_155_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_i_reg_151, tmp_i_reg_768, i_reg_772)
    begin
        if (((tmp_i_reg_768 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_i_phi_fu_155_p4 <= i_reg_772;
        else 
            ap_phi_mux_i_i_phi_fu_155_p4 <= i_i_reg_151;
        end if; 
    end process;


    ap_ready_assign_proc : process(res_strm_V_full_n, ap_CS_fsm_state11)
    begin
        if (((res_strm_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    centerX_2_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(centerX_reg_867),32));
    centerY_2_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(centerY_reg_877),32));

    count_strm_V_V_blk_n_assign_proc : process(count_strm_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            count_strm_V_V_blk_n <= count_strm_V_V_empty_n;
        else 
            count_strm_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    count_strm_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            count_strm_V_V_read <= ap_const_logic_1;
        else 
            count_strm_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    curPosHighX_fu_577_p3 <= 
        i_cast7_i_fu_483_p1 when (meetHighBoarderX_reg_823_pp0_iter3_reg(0) = '1') else 
        maxPosHighX_2_fu_122;
    curPosHighY_fu_513_p3 <= 
        tmp_50_cast_i_fu_502_p1 when (meetHighBoarderY_reg_811_pp0_iter3_reg(0) = '1') else 
        maxPosHighY_2_fu_98;
    curPosLowX_fu_569_p3 <= 
        i_cast7_i_fu_483_p1 when (meetLowBoarderX_fu_564_p2(0) = '1') else 
        maxPosLowX_2_fu_126;
    curPosLowY_fu_505_p3 <= 
        tmp_50_cast_i_fu_502_p1 when (meetLowBoarderY_fu_497_p2(0) = '1') else 
        maxPosLowY_2_fu_102;
    curValSumX_fu_392_p2 <= std_logic_vector(unsigned(i_op_assign_fu_118) + unsigned(tmp_52_i_fu_389_p1));
    curValSumY_fu_335_p2 <= std_logic_vector(unsigned(i_op_assign_1_fu_94) + unsigned(tmp_54_i_fu_332_p1));
    i_cast7_i_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_151_pp0_iter3_reg),32));
    i_cast_i_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_151_pp0_iter2_reg),12));
    i_fu_251_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_i_phi_fu_155_p4) + unsigned(ap_const_lv11_1));
    isInValidRegionX_fu_263_p2 <= "0" when (count_strm_V_V_dout = ap_const_lv12_0) else "1";
    maxPosHighX_1_fu_591_p3 <= 
        curPosHighX_fu_577_p3 when (or_cond4_i_reg_856(0) = '1') else 
        maxPosHighX_fu_110;
    maxPosHighY_1_fu_527_p3 <= 
        curPosHighY_fu_513_p3 when (or_cond5_i_reg_845(0) = '1') else 
        maxPosHighY_fu_86;
    maxPosLowX_1_fu_584_p3 <= 
        curPosLowX_fu_569_p3 when (or_cond4_i_reg_856(0) = '1') else 
        maxPosLowX_fu_114;
    maxPosLowY_1_fu_520_p3 <= 
        curPosLowY_fu_505_p3 when (or_cond5_i_reg_845(0) = '1') else 
        maxPosLowY_fu_90;
    maxValSumX_1_fu_471_p3 <= 
        maxValSumX_reg_829 when (or_cond4_i_fu_466_p2(0) = '1') else 
        maxValSumX_2_fu_106;
    maxValSumX_fu_398_p3 <= 
        curValSumX_fu_392_p2 when (tmp_48_i_fu_384_p2(0) = '1') else 
        ap_const_lv32_0;
    maxValSumY_1_fu_440_p3 <= 
        maxValSumY_reg_817 when (or_cond5_i_fu_435_p2(0) = '1') else 
        maxValSumY_2_fu_82;
    maxValSumY_fu_341_p3 <= 
        curValSumY_fu_335_p2 when (tmp_51_i_fu_327_p2(0) = '1') else 
        ap_const_lv32_0;
    meetHighBoarderX_fu_378_p2 <= (p_2_i_fu_367_p2 or not_or_cond2_i_fu_372_p2);
    meetHighBoarderY_fu_321_p2 <= (p_3_i_fu_310_p2 or not_or_cond3_i_fu_315_p2);
    meetLowBoarderX_fu_564_p2 <= (p_i3_fu_560_p2 and isInValidRegionX_reg_787_pp0_iter3_reg);
    meetLowBoarderY_fu_497_p2 <= (p_1_i2_fu_493_p2 and isInValidRegionX_reg_787_pp0_iter3_reg);
    not_or_cond2_i_fu_372_p2 <= (or_cond2_i_fu_357_p2 xor ap_const_lv1_1);
    not_or_cond3_i_fu_315_p2 <= (or_cond3_i_fu_300_p2 xor ap_const_lv1_1);
    or_cond2_i_fu_357_p2 <= (tmp_38_i_reg_805 or isInValidRegionX_reg_787);
    or_cond3_i_fu_300_p2 <= (tmp_44_i_reg_799 or isInValidRegionX_reg_787);
    or_cond4_i_fu_466_p2 <= (tmp_53_i_fu_461_p2 and meetHighBoarderX_reg_823);
    or_cond5_i_fu_435_p2 <= (tmp_55_i_fu_430_p2 and meetHighBoarderY_reg_811);
    p_1_i2_fu_493_p2 <= (tmp_46_i_reg_835 or tmp_44_i_reg_799_pp0_iter3_reg);
    p_2_i_fu_367_p2 <= (tmp_47_i_fu_361_p2 and isInValidRegionX_reg_787);
    p_3_i_fu_310_p2 <= (tmp_49_i_fu_304_p2 and isInValidRegionX_reg_787);
    p_i3_fu_560_p2 <= (tmp_45_i_reg_851 or tmp_38_i_reg_805_pp0_iter3_reg);

    res_strm_V_blk_n_assign_proc : process(res_strm_V_full_n, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            res_strm_V_blk_n <= res_strm_V_full_n;
        else 
            res_strm_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_strm_V_din_assign_proc : process(res_strm_V_full_n, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, widthX_reg_862, widthY_reg_872, centerX_2_fu_640_p1, centerY_2_fu_666_p1)
    begin
        if ((res_strm_V_full_n = ap_const_logic_1)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                res_strm_V_din <= centerY_2_fu_666_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                res_strm_V_din <= widthY_reg_872;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                res_strm_V_din <= centerX_2_fu_640_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                res_strm_V_din <= widthX_reg_862;
            else 
                res_strm_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            res_strm_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_strm_V_write_assign_proc : process(res_strm_V_full_n, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((((res_strm_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((res_strm_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((res_strm_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((res_strm_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            res_strm_V_write <= ap_const_logic_1;
        else 
            res_strm_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_36_i_fu_650_p2 <= std_logic_vector(unsigned(maxPosLowY_fu_90) + unsigned(maxPosHighY_fu_86));
    tmp_37_i_fu_257_p2 <= "1" when (unsigned(i_i_reg_151) < unsigned(ap_const_lv11_500)) else "0";
    tmp_38_i_fu_286_p2 <= "1" when (val_curY_V_1_fu_134 = ap_const_lv12_0) else "0";
    tmp_44_i_fu_272_p2 <= "1" when (val_curY_V_fu_130 = ap_const_lv12_0) else "0";
    tmp_45_i_fu_455_p2 <= "1" when (i_i_reg_151_pp0_iter2_reg = ap_const_lv11_0) else "0";
    tmp_46_i_fu_418_p2 <= "1" when (i_i_reg_151_pp0_iter2_reg = ap_const_lv11_500) else "0";
    tmp_47_i_fu_361_p2 <= "1" when (i_i_reg_151_pp0_iter1_reg = ap_const_lv11_4FF) else "0";
    tmp_48_i_fu_384_p2 <= (not_or_cond2_i_fu_372_p2 or isInValidRegionX_reg_787);
    tmp_49_i_fu_304_p2 <= "1" when (i_i_reg_151_pp0_iter1_reg = ap_const_lv11_7CF) else "0";
    tmp_50_cast_i_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_i_reg_840),32));
    tmp_50_i_fu_424_p2 <= std_logic_vector(unsigned(i_cast_i_fu_411_p1) + unsigned(ap_const_lv12_B00));
    tmp_51_i_fu_327_p2 <= (not_or_cond3_i_fu_315_p2 or isInValidRegionX_reg_787);
    tmp_52_i_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_reg_781),32));
    tmp_53_i_fu_461_p2 <= "1" when (unsigned(maxValSumX_reg_829) > unsigned(maxValSumX_2_fu_106)) else "0";
    tmp_54_i_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_reg_781),32));
    tmp_55_i_fu_430_p2 <= "1" when (unsigned(maxValSumY_reg_817) > unsigned(maxValSumY_2_fu_82)) else "0";
    tmp_i_20_fu_624_p2 <= std_logic_vector(unsigned(maxPosLowX_fu_114) + unsigned(maxPosHighX_fu_110));
    tmp_i_fu_245_p2 <= "1" when (ap_phi_mux_i_i_phi_fu_155_p4 = ap_const_lv11_7D0) else "0";
    widthX_fu_618_p2 <= std_logic_vector(unsigned(maxPosHighX_fu_110) - unsigned(maxPosLowX_fu_114));
    widthY_fu_644_p2 <= std_logic_vector(unsigned(maxPosHighY_fu_86) - unsigned(maxPosLowY_fu_90));
end behav;
