-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity doublethres is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    H_thres_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    H_thres_empty_n : IN STD_LOGIC;
    H_thres_read : OUT STD_LOGIC;
    S_thres_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    S_thres_empty_n : IN STD_LOGIC;
    S_thres_read : OUT STD_LOGIC;
    V_thres_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    V_thres_empty_n : IN STD_LOGIC;
    V_thres_read : OUT STD_LOGIC;
    img_doublethres_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_doublethres_data_full_n : IN STD_LOGIC;
    img_doublethres_data_write : OUT STD_LOGIC;
    img_hsv_data_stream_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_hsv_data_stream_2_empty_n : IN STD_LOGIC;
    img_hsv_data_stream_2_read : OUT STD_LOGIC;
    img_hsv_data_stream_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_hsv_data_stream_1_empty_n : IN STD_LOGIC;
    img_hsv_data_stream_1_read : OUT STD_LOGIC;
    img_hsv_data_stream_s_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_hsv_data_stream_s_empty_n : IN STD_LOGIC;
    img_hsv_data_stream_s_read : OUT STD_LOGIC );
end;


architecture behav of doublethres is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv20_E1000 : STD_LOGIC_VECTOR (19 downto 0) := "11100001000000000000";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal H_thres_blk_n : STD_LOGIC;
    signal S_thres_blk_n : STD_LOGIC;
    signal V_thres_blk_n : STD_LOGIC;
    signal img_doublethres_data_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_cond_reg_347 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_351 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_355 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_hsv_data_stream_2_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal img_hsv_data_stream_1_blk_n : STD_LOGIC;
    signal img_hsv_data_stream_s_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_191 : STD_LOGIC_VECTOR (19 downto 0);
    signal H_thres_read_reg_298 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal S_thres_read_reg_304 : STD_LOGIC_VECTOR (15 downto 0);
    signal V_thres_read_reg_310 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond_flatten_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_predicate_op54_write_state5 : BOOLEAN;
    signal ap_predicate_op59_write_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_208_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal scl_val_1_reg_325 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_331 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_24_fu_223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_24_reg_337 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_i_i_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_i_i_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal H_thres_low_V_load_n_fu_214_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_229_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_thres_low_V_load_n_fu_242_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_256_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_i_i_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_i_i_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal V_thres_low_V_load_n_fu_270_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_284_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_i_i_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_i_i_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = V_thres_empty_n) or (ap_const_logic_0 = S_thres_empty_n) or (ap_const_logic_0 = H_thres_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = V_thres_empty_n) or (ap_const_logic_0 = S_thres_empty_n) or (ap_const_logic_0 = H_thres_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_191_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_202_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_191 <= indvar_flatten_next_fu_208_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = V_thres_empty_n) or (ap_const_logic_0 = S_thres_empty_n) or (ap_const_logic_0 = H_thres_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_191 <= ap_const_lv20_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = V_thres_empty_n) or (ap_const_logic_0 = S_thres_empty_n) or (ap_const_logic_0 = H_thres_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                H_thres_read_reg_298 <= H_thres_dout;
                S_thres_read_reg_304 <= S_thres_dout;
                V_thres_read_reg_310 <= V_thres_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_fu_238_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_cond2_reg_351 <= or_cond2_fu_264_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond2_fu_264_p2 = ap_const_lv1_0) and (or_cond_fu_238_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_cond3_reg_355 <= or_cond3_fu_292_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                or_cond_reg_347 <= or_cond_fu_238_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                scl_val_1_reg_325 <= img_hsv_data_stream_1_dout;
                tmp_56_i_i_reg_342 <= tmp_56_i_i_fu_232_p2;
                tmp_i_i_24_reg_337 <= tmp_i_i_24_fu_223_p2;
                tmp_reg_331 <= img_hsv_data_stream_s_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, H_thres_empty_n, S_thres_empty_n, V_thres_empty_n, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, exitcond_flatten_fu_202_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = V_thres_empty_n) or (ap_const_logic_0 = S_thres_empty_n) or (ap_const_logic_0 = H_thres_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_fu_202_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_fu_202_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    H_thres_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, H_thres_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            H_thres_blk_n <= H_thres_empty_n;
        else 
            H_thres_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    H_thres_low_V_load_n_fu_214_p4 <= H_thres_read_reg_298(15 downto 8);

    H_thres_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, H_thres_empty_n, S_thres_empty_n, V_thres_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = V_thres_empty_n) or (ap_const_logic_0 = S_thres_empty_n) or (ap_const_logic_0 = H_thres_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            H_thres_read <= ap_const_logic_1;
        else 
            H_thres_read <= ap_const_logic_0;
        end if; 
    end process;


    S_thres_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, S_thres_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            S_thres_blk_n <= S_thres_empty_n;
        else 
            S_thres_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    S_thres_low_V_load_n_fu_242_p4 <= S_thres_read_reg_304(15 downto 8);

    S_thres_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, H_thres_empty_n, S_thres_empty_n, V_thres_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = V_thres_empty_n) or (ap_const_logic_0 = S_thres_empty_n) or (ap_const_logic_0 = H_thres_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            S_thres_read <= ap_const_logic_1;
        else 
            S_thres_read <= ap_const_logic_0;
        end if; 
    end process;


    V_thres_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, V_thres_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            V_thres_blk_n <= V_thres_empty_n;
        else 
            V_thres_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    V_thres_low_V_load_n_fu_270_p4 <= V_thres_read_reg_310(15 downto 8);

    V_thres_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, H_thres_empty_n, S_thres_empty_n, V_thres_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = V_thres_empty_n) or (ap_const_logic_0 = S_thres_empty_n) or (ap_const_logic_0 = H_thres_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            V_thres_read <= ap_const_logic_1;
        else 
            V_thres_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(img_doublethres_data_full_n, img_hsv_data_stream_2_empty_n, img_hsv_data_stream_1_empty_n, img_hsv_data_stream_s_empty_n, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_predicate_op54_write_state5, ap_predicate_op59_write_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((img_hsv_data_stream_s_empty_n = ap_const_logic_0) or (img_hsv_data_stream_1_empty_n = ap_const_logic_0) or (img_hsv_data_stream_2_empty_n = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((img_doublethres_data_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state5 = ap_const_boolean_1)) or ((img_doublethres_data_full_n = ap_const_logic_0) and (ap_predicate_op54_write_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(img_doublethres_data_full_n, img_hsv_data_stream_2_empty_n, img_hsv_data_stream_1_empty_n, img_hsv_data_stream_s_empty_n, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_predicate_op54_write_state5, ap_predicate_op59_write_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((img_hsv_data_stream_s_empty_n = ap_const_logic_0) or (img_hsv_data_stream_1_empty_n = ap_const_logic_0) or (img_hsv_data_stream_2_empty_n = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((img_doublethres_data_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state5 = ap_const_boolean_1)) or ((img_doublethres_data_full_n = ap_const_logic_0) and (ap_predicate_op54_write_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(img_doublethres_data_full_n, img_hsv_data_stream_2_empty_n, img_hsv_data_stream_1_empty_n, img_hsv_data_stream_s_empty_n, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_predicate_op54_write_state5, ap_predicate_op59_write_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((img_hsv_data_stream_s_empty_n = ap_const_logic_0) or (img_hsv_data_stream_1_empty_n = ap_const_logic_0) or (img_hsv_data_stream_2_empty_n = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((img_doublethres_data_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state5 = ap_const_boolean_1)) or ((img_doublethres_data_full_n = ap_const_logic_0) and (ap_predicate_op54_write_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, H_thres_empty_n, S_thres_empty_n, V_thres_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_const_logic_0 = V_thres_empty_n) or (ap_const_logic_0 = S_thres_empty_n) or (ap_const_logic_0 = H_thres_empty_n) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(img_hsv_data_stream_2_empty_n, img_hsv_data_stream_1_empty_n, img_hsv_data_stream_s_empty_n)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((img_hsv_data_stream_s_empty_n = ap_const_logic_0) or (img_hsv_data_stream_1_empty_n = ap_const_logic_0) or (img_hsv_data_stream_2_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter3_assign_proc : process(img_doublethres_data_full_n, ap_predicate_op54_write_state5, ap_predicate_op59_write_state5)
    begin
                ap_block_state5_pp0_stage0_iter3 <= (((img_doublethres_data_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state5 = ap_const_boolean_1)) or ((img_doublethres_data_full_n = ap_const_logic_0) and (ap_predicate_op54_write_state5 = ap_const_boolean_1)));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_202_p2)
    begin
        if ((exitcond_flatten_fu_202_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op54_write_state5_assign_proc : process(or_cond_reg_347, or_cond2_reg_351, or_cond3_reg_355)
    begin
                ap_predicate_op54_write_state5 <= ((or_cond3_reg_355 = ap_const_lv1_0) and (or_cond2_reg_351 = ap_const_lv1_0) and (or_cond_reg_347 = ap_const_lv1_0));
    end process;


    ap_predicate_op59_write_state5_assign_proc : process(or_cond_reg_347, or_cond2_reg_351, or_cond3_reg_355)
    begin
                ap_predicate_op59_write_state5 <= ((or_cond_reg_347 = ap_const_lv1_1) or ((or_cond3_reg_355 = ap_const_lv1_1) or (or_cond2_reg_351 = ap_const_lv1_1)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_202_p2 <= "1" when (indvar_flatten_reg_191 = ap_const_lv20_E1000) else "0";

    img_doublethres_data_blk_n_assign_proc : process(img_doublethres_data_full_n, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, or_cond_reg_347, or_cond2_reg_351, or_cond3_reg_355)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((or_cond_reg_347 = ap_const_lv1_1) or ((or_cond3_reg_355 = ap_const_lv1_1) or (or_cond2_reg_351 = ap_const_lv1_1)))) or ((or_cond3_reg_355 = ap_const_lv1_0) and (or_cond2_reg_351 = ap_const_lv1_0) and (or_cond_reg_347 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            img_doublethres_data_blk_n <= img_doublethres_data_full_n;
        else 
            img_doublethres_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_doublethres_data_din_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op54_write_state5, ap_predicate_op59_write_state5, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_predicate_op59_write_state5 = ap_const_boolean_1)) then 
                img_doublethres_data_din <= ap_const_lv8_0;
            elsif ((ap_predicate_op54_write_state5 = ap_const_boolean_1)) then 
                img_doublethres_data_din <= ap_const_lv8_FF;
            else 
                img_doublethres_data_din <= "XXXXXXXX";
            end if;
        else 
            img_doublethres_data_din <= "XXXXXXXX";
        end if; 
    end process;


    img_doublethres_data_write_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op54_write_state5, ap_predicate_op59_write_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op59_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op54_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_doublethres_data_write <= ap_const_logic_1;
        else 
            img_doublethres_data_write <= ap_const_logic_0;
        end if; 
    end process;


    img_hsv_data_stream_1_blk_n_assign_proc : process(img_hsv_data_stream_1_empty_n, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            img_hsv_data_stream_1_blk_n <= img_hsv_data_stream_1_empty_n;
        else 
            img_hsv_data_stream_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_hsv_data_stream_1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img_hsv_data_stream_1_read <= ap_const_logic_1;
        else 
            img_hsv_data_stream_1_read <= ap_const_logic_0;
        end if; 
    end process;


    img_hsv_data_stream_2_blk_n_assign_proc : process(img_hsv_data_stream_2_empty_n, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            img_hsv_data_stream_2_blk_n <= img_hsv_data_stream_2_empty_n;
        else 
            img_hsv_data_stream_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_hsv_data_stream_2_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img_hsv_data_stream_2_read <= ap_const_logic_1;
        else 
            img_hsv_data_stream_2_read <= ap_const_logic_0;
        end if; 
    end process;


    img_hsv_data_stream_s_blk_n_assign_proc : process(img_hsv_data_stream_s_empty_n, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            img_hsv_data_stream_s_blk_n <= img_hsv_data_stream_s_empty_n;
        else 
            img_hsv_data_stream_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_hsv_data_stream_s_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img_hsv_data_stream_s_read <= ap_const_logic_1;
        else 
            img_hsv_data_stream_s_read <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_208_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_191) + unsigned(ap_const_lv20_1));
    or_cond2_fu_264_p2 <= (tmp_58_i_i_fu_259_p2 or tmp_57_i_i_fu_251_p2);
    or_cond3_fu_292_p2 <= (tmp_60_i_i_fu_287_p2 or tmp_59_i_i_fu_279_p2);
    or_cond_fu_238_p2 <= (tmp_i_i_24_reg_337 or tmp_56_i_i_reg_342);
    tmp_56_i_i_fu_232_p2 <= "1" when (unsigned(img_hsv_data_stream_2_dout) > unsigned(tmp_6_fu_229_p1)) else "0";
    tmp_57_i_i_fu_251_p2 <= "1" when (unsigned(scl_val_1_reg_325) < unsigned(S_thres_low_V_load_n_fu_242_p4)) else "0";
    tmp_58_i_i_fu_259_p2 <= "1" when (unsigned(scl_val_1_reg_325) > unsigned(tmp_7_fu_256_p1)) else "0";
    tmp_59_i_i_fu_279_p2 <= "1" when (unsigned(tmp_reg_331) < unsigned(V_thres_low_V_load_n_fu_270_p4)) else "0";
    tmp_60_i_i_fu_287_p2 <= "1" when (unsigned(tmp_reg_331) > unsigned(tmp_8_fu_284_p1)) else "0";
    tmp_6_fu_229_p1 <= H_thres_read_reg_298(8 - 1 downto 0);
    tmp_7_fu_256_p1 <= S_thres_read_reg_304(8 - 1 downto 0);
    tmp_8_fu_284_p1 <= V_thres_read_reg_310(8 - 1 downto 0);
    tmp_i_i_24_fu_223_p2 <= "1" when (unsigned(img_hsv_data_stream_2_dout) < unsigned(H_thres_low_V_load_n_fu_214_p4)) else "0";
end behav;
