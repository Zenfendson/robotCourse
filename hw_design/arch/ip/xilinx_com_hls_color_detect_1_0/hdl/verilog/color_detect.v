// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="color_detect,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.679000,HLS_SYN_LAT=1875041,HLS_SYN_TPT=1850486,HLS_SYN_MEM=3,HLS_SYN_DSP=2,HLS_SYN_FF=8371,HLS_SYN_LUT=12972,HLS_VERSION=2018_3}" *)

module color_detect (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        strm_in_TDATA,
        strm_in_TKEEP,
        strm_in_TSTRB,
        strm_in_TUSER,
        strm_in_TLAST,
        strm_in_TID,
        strm_in_TDEST,
        strm_in_TVALID,
        strm_in_TREADY
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [23:0] strm_in_TDATA;
input  [2:0] strm_in_TKEEP;
input  [2:0] strm_in_TSTRB;
input  [0:0] strm_in_TUSER;
input  [0:0] strm_in_TLAST;
input  [0:0] strm_in_TID;
input  [0:0] strm_in_TDEST;
input   strm_in_TVALID;
output   strm_in_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [15:0] H_thres;
wire   [15:0] S_thres;
wire   [15:0] V_thres;
wire    color_detect_entry3_U0_ap_start;
wire    color_detect_entry3_U0_ap_done;
wire    color_detect_entry3_U0_ap_continue;
wire    color_detect_entry3_U0_ap_idle;
wire    color_detect_entry3_U0_ap_ready;
wire   [15:0] color_detect_entry3_U0_H_thres_out_din;
wire    color_detect_entry3_U0_H_thres_out_write;
wire   [15:0] color_detect_entry3_U0_S_thres_out_din;
wire    color_detect_entry3_U0_S_thres_out_write;
wire   [15:0] color_detect_entry3_U0_V_thres_out_din;
wire    color_detect_entry3_U0_V_thres_out_write;
wire    color_detect_entry13_U0_ap_start;
wire    color_detect_entry13_U0_ap_done;
wire    color_detect_entry13_U0_ap_continue;
wire    color_detect_entry13_U0_ap_idle;
wire    color_detect_entry13_U0_ap_ready;
wire    color_detect_entry13_U0_H_thres_read;
wire    color_detect_entry13_U0_S_thres_read;
wire    color_detect_entry13_U0_V_thres_read;
wire   [15:0] color_detect_entry13_U0_H_thres_out_din;
wire    color_detect_entry13_U0_H_thres_out_write;
wire   [15:0] color_detect_entry13_U0_S_thres_out_din;
wire    color_detect_entry13_U0_S_thres_out_write;
wire   [15:0] color_detect_entry13_U0_V_thres_out_din;
wire    color_detect_entry13_U0_V_thres_out_write;
reg    ap_sync_reg_color_detect_entry13_U0_ap_start;
wire    Block_codeRepl1_proc_U0_ap_start;
wire    Block_codeRepl1_proc_U0_ap_done;
wire    Block_codeRepl1_proc_U0_ap_continue;
wire    Block_codeRepl1_proc_U0_ap_idle;
wire    Block_codeRepl1_proc_U0_ap_ready;
wire    Block_codeRepl1_proc_U0_V_thres_read;
wire    Block_codeRepl1_proc_U0_S_thres_read;
wire    Block_codeRepl1_proc_U0_H_thres_read;
wire   [15:0] Block_codeRepl1_proc_U0_V_thres_byval_out_din;
wire    Block_codeRepl1_proc_U0_V_thres_byval_out_write;
wire   [15:0] Block_codeRepl1_proc_U0_S_thres_byval_out_din;
wire    Block_codeRepl1_proc_U0_S_thres_byval_out_write;
wire   [15:0] Block_codeRepl1_proc_U0_H_thres_byval_out_din;
wire    Block_codeRepl1_proc_U0_H_thres_byval_out_write;
reg    ap_sync_reg_Block_codeRepl1_proc_U0_ap_start;
wire    strm2mat_U0_ap_start;
wire    strm2mat_U0_ap_done;
wire    strm2mat_U0_ap_continue;
wire    strm2mat_U0_ap_idle;
wire    strm2mat_U0_ap_ready;
wire    strm2mat_U0_strm_in_TREADY;
wire   [7:0] strm2mat_U0_img_src_data_stream_2_din;
wire    strm2mat_U0_img_src_data_stream_2_write;
wire   [7:0] strm2mat_U0_img_src_data_stream_1_din;
wire    strm2mat_U0_img_src_data_stream_1_write;
wire   [7:0] strm2mat_U0_img_src_data_stream_s_din;
wire    strm2mat_U0_img_src_data_stream_s_write;
wire    CvtColor_U0_ap_start;
wire    CvtColor_U0_ap_done;
wire    CvtColor_U0_ap_continue;
wire    CvtColor_U0_ap_idle;
wire    CvtColor_U0_ap_ready;
wire    CvtColor_U0_img_src_data_stream_2_read;
wire    CvtColor_U0_img_src_data_stream_1_read;
wire    CvtColor_U0_img_src_data_stream_s_read;
wire   [7:0] CvtColor_U0_img_hsv_data_stream_2_din;
wire    CvtColor_U0_img_hsv_data_stream_2_write;
wire   [7:0] CvtColor_U0_img_hsv_data_stream_1_din;
wire    CvtColor_U0_img_hsv_data_stream_1_write;
wire   [7:0] CvtColor_U0_img_hsv_data_stream_s_din;
wire    CvtColor_U0_img_hsv_data_stream_s_write;
reg    ap_sync_reg_CvtColor_U0_ap_start;
wire    doublethres_U0_ap_start;
wire    doublethres_U0_ap_done;
wire    doublethres_U0_ap_continue;
wire    doublethres_U0_ap_idle;
wire    doublethres_U0_ap_ready;
wire    doublethres_U0_H_thres_read;
wire    doublethres_U0_S_thres_read;
wire    doublethres_U0_V_thres_read;
wire   [7:0] doublethres_U0_img_doublethres_data_din;
wire    doublethres_U0_img_doublethres_data_write;
wire    doublethres_U0_img_hsv_data_stream_2_read;
wire    doublethres_U0_img_hsv_data_stream_1_read;
wire    doublethres_U0_img_hsv_data_stream_s_read;
reg    ap_sync_reg_doublethres_U0_ap_start;
wire    count_720u_1280u_U0_ap_start;
wire    count_720u_1280u_U0_ap_done;
wire    count_720u_1280u_U0_ap_continue;
wire    count_720u_1280u_U0_ap_idle;
wire    count_720u_1280u_U0_ap_ready;
wire    count_720u_1280u_U0_img_doublethres_data_read;
wire   [11:0] count_720u_1280u_U0_count_strm_V_V_din;
wire    count_720u_1280u_U0_count_strm_V_V_write;
reg    ap_sync_reg_count_720u_1280u_U0_ap_start;
wire    findMaxRegion_U0_ap_start;
wire    findMaxRegion_U0_ap_done;
wire    findMaxRegion_U0_ap_continue;
wire    findMaxRegion_U0_ap_idle;
wire    findMaxRegion_U0_ap_ready;
wire    findMaxRegion_U0_count_strm_V_V_read;
wire   [31:0] findMaxRegion_U0_res_strm_V_din;
wire    findMaxRegion_U0_res_strm_V_write;
reg    ap_sync_reg_findMaxRegion_U0_ap_start;
wire    Block_codeRepl17_pro_U0_ap_start;
wire    Block_codeRepl17_pro_U0_ap_done;
wire    Block_codeRepl17_pro_U0_ap_continue;
wire    Block_codeRepl17_pro_U0_ap_idle;
wire    Block_codeRepl17_pro_U0_ap_ready;
wire   [127:0] Block_codeRepl17_pro_U0_res;
wire    Block_codeRepl17_pro_U0_res_ap_vld;
wire    Block_codeRepl17_pro_U0_res_strm_V_read;
reg    ap_sync_reg_Block_codeRepl17_pro_U0_ap_start;
wire    ap_sync_continue;
wire    H_thres_c1_full_n;
wire   [15:0] H_thres_c1_dout;
wire    H_thres_c1_empty_n;
wire    S_thres_c2_full_n;
wire   [15:0] S_thres_c2_dout;
wire    S_thres_c2_empty_n;
wire    V_thres_c3_full_n;
wire   [15:0] V_thres_c3_dout;
wire    V_thres_c3_empty_n;
wire    H_thres_c_full_n;
wire   [15:0] H_thres_c_dout;
wire    H_thres_c_empty_n;
wire    S_thres_c_full_n;
wire   [15:0] S_thres_c_dout;
wire    S_thres_c_empty_n;
wire    V_thres_c_full_n;
wire   [15:0] V_thres_c_dout;
wire    V_thres_c_empty_n;
wire    V_thres_byval_c_full_n;
wire   [15:0] V_thres_byval_c_dout;
wire    V_thres_byval_c_empty_n;
wire    S_thres_byval_c_full_n;
wire   [15:0] S_thres_byval_c_dout;
wire    S_thres_byval_c_empty_n;
wire    H_thres_byval_c_full_n;
wire   [15:0] H_thres_byval_c_dout;
wire    H_thres_byval_c_empty_n;
wire    img_src_data_stream_2_full_n;
wire   [7:0] img_src_data_stream_2_dout;
wire    img_src_data_stream_2_empty_n;
wire    img_src_data_stream_1_full_n;
wire   [7:0] img_src_data_stream_1_dout;
wire    img_src_data_stream_1_empty_n;
wire    img_src_data_stream_s_full_n;
wire   [7:0] img_src_data_stream_s_dout;
wire    img_src_data_stream_s_empty_n;
wire    img_hsv_data_stream_2_full_n;
wire   [7:0] img_hsv_data_stream_2_dout;
wire    img_hsv_data_stream_2_empty_n;
wire    img_hsv_data_stream_1_full_n;
wire   [7:0] img_hsv_data_stream_1_dout;
wire    img_hsv_data_stream_1_empty_n;
wire    img_hsv_data_stream_s_full_n;
wire   [7:0] img_hsv_data_stream_s_dout;
wire    img_hsv_data_stream_s_empty_n;
wire    img_doublethres_data_full_n;
wire   [7:0] img_doublethres_data_dout;
wire    img_doublethres_data_empty_n;
wire    count_strm_V_V_full_n;
wire   [11:0] count_strm_V_V_dout;
wire    count_strm_V_V_empty_n;
wire    res_strm_V_full_n;
wire   [31:0] res_strm_V_dout;
wire    res_strm_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_color_detect_entry3_U0_ap_ready;
wire    ap_sync_color_detect_entry3_U0_ap_ready;
reg   [1:0] color_detect_entry3_U0_ap_ready_count;
reg    ap_sync_reg_strm2mat_U0_ap_ready;
wire    ap_sync_strm2mat_U0_ap_ready;
reg   [1:0] strm2mat_U0_ap_ready_count;

// power-on initialization
initial begin
#0 ap_sync_reg_color_detect_entry13_U0_ap_start = 1'b0;
#0 ap_sync_reg_Block_codeRepl1_proc_U0_ap_start = 1'b0;
#0 ap_sync_reg_CvtColor_U0_ap_start = 1'b0;
#0 ap_sync_reg_doublethres_U0_ap_start = 1'b0;
#0 ap_sync_reg_count_720u_1280u_U0_ap_start = 1'b0;
#0 ap_sync_reg_findMaxRegion_U0_ap_start = 1'b0;
#0 ap_sync_reg_Block_codeRepl17_pro_U0_ap_start = 1'b0;
#0 ap_sync_reg_color_detect_entry3_U0_ap_ready = 1'b0;
#0 color_detect_entry3_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_strm2mat_U0_ap_ready = 1'b0;
#0 strm2mat_U0_ap_ready_count = 2'd0;
end

color_detect_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
color_detect_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .H_thres(H_thres),
    .S_thres(S_thres),
    .V_thres(V_thres),
    .res(Block_codeRepl17_pro_U0_res),
    .res_ap_vld(Block_codeRepl17_pro_U0_res_ap_vld)
);

color_detect_entry3 color_detect_entry3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(color_detect_entry3_U0_ap_start),
    .ap_done(color_detect_entry3_U0_ap_done),
    .ap_continue(color_detect_entry3_U0_ap_continue),
    .ap_idle(color_detect_entry3_U0_ap_idle),
    .ap_ready(color_detect_entry3_U0_ap_ready),
    .H_thres(H_thres),
    .S_thres(S_thres),
    .V_thres(V_thres),
    .H_thres_out_din(color_detect_entry3_U0_H_thres_out_din),
    .H_thres_out_full_n(H_thres_c1_full_n),
    .H_thres_out_write(color_detect_entry3_U0_H_thres_out_write),
    .S_thres_out_din(color_detect_entry3_U0_S_thres_out_din),
    .S_thres_out_full_n(S_thres_c2_full_n),
    .S_thres_out_write(color_detect_entry3_U0_S_thres_out_write),
    .V_thres_out_din(color_detect_entry3_U0_V_thres_out_din),
    .V_thres_out_full_n(V_thres_c3_full_n),
    .V_thres_out_write(color_detect_entry3_U0_V_thres_out_write)
);

color_detect_entry13 color_detect_entry13_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(color_detect_entry13_U0_ap_start),
    .ap_done(color_detect_entry13_U0_ap_done),
    .ap_continue(color_detect_entry13_U0_ap_continue),
    .ap_idle(color_detect_entry13_U0_ap_idle),
    .ap_ready(color_detect_entry13_U0_ap_ready),
    .H_thres_dout(H_thres_c1_dout),
    .H_thres_empty_n(H_thres_c1_empty_n),
    .H_thres_read(color_detect_entry13_U0_H_thres_read),
    .S_thres_dout(S_thres_c2_dout),
    .S_thres_empty_n(S_thres_c2_empty_n),
    .S_thres_read(color_detect_entry13_U0_S_thres_read),
    .V_thres_dout(V_thres_c3_dout),
    .V_thres_empty_n(V_thres_c3_empty_n),
    .V_thres_read(color_detect_entry13_U0_V_thres_read),
    .H_thres_out_din(color_detect_entry13_U0_H_thres_out_din),
    .H_thres_out_full_n(H_thres_c_full_n),
    .H_thres_out_write(color_detect_entry13_U0_H_thres_out_write),
    .S_thres_out_din(color_detect_entry13_U0_S_thres_out_din),
    .S_thres_out_full_n(S_thres_c_full_n),
    .S_thres_out_write(color_detect_entry13_U0_S_thres_out_write),
    .V_thres_out_din(color_detect_entry13_U0_V_thres_out_din),
    .V_thres_out_full_n(V_thres_c_full_n),
    .V_thres_out_write(color_detect_entry13_U0_V_thres_out_write)
);

Block_codeRepl1_proc Block_codeRepl1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_codeRepl1_proc_U0_ap_start),
    .ap_done(Block_codeRepl1_proc_U0_ap_done),
    .ap_continue(Block_codeRepl1_proc_U0_ap_continue),
    .ap_idle(Block_codeRepl1_proc_U0_ap_idle),
    .ap_ready(Block_codeRepl1_proc_U0_ap_ready),
    .V_thres_dout(V_thres_c_dout),
    .V_thres_empty_n(V_thres_c_empty_n),
    .V_thres_read(Block_codeRepl1_proc_U0_V_thres_read),
    .S_thres_dout(S_thres_c_dout),
    .S_thres_empty_n(S_thres_c_empty_n),
    .S_thres_read(Block_codeRepl1_proc_U0_S_thres_read),
    .H_thres_dout(H_thres_c_dout),
    .H_thres_empty_n(H_thres_c_empty_n),
    .H_thres_read(Block_codeRepl1_proc_U0_H_thres_read),
    .V_thres_byval_out_din(Block_codeRepl1_proc_U0_V_thres_byval_out_din),
    .V_thres_byval_out_full_n(V_thres_byval_c_full_n),
    .V_thres_byval_out_write(Block_codeRepl1_proc_U0_V_thres_byval_out_write),
    .S_thres_byval_out_din(Block_codeRepl1_proc_U0_S_thres_byval_out_din),
    .S_thres_byval_out_full_n(S_thres_byval_c_full_n),
    .S_thres_byval_out_write(Block_codeRepl1_proc_U0_S_thres_byval_out_write),
    .H_thres_byval_out_din(Block_codeRepl1_proc_U0_H_thres_byval_out_din),
    .H_thres_byval_out_full_n(H_thres_byval_c_full_n),
    .H_thres_byval_out_write(Block_codeRepl1_proc_U0_H_thres_byval_out_write)
);

strm2mat strm2mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(strm2mat_U0_ap_start),
    .ap_done(strm2mat_U0_ap_done),
    .ap_continue(strm2mat_U0_ap_continue),
    .ap_idle(strm2mat_U0_ap_idle),
    .ap_ready(strm2mat_U0_ap_ready),
    .strm_in_TDATA(strm_in_TDATA),
    .strm_in_TVALID(strm_in_TVALID),
    .strm_in_TREADY(strm2mat_U0_strm_in_TREADY),
    .strm_in_TKEEP(strm_in_TKEEP),
    .strm_in_TSTRB(strm_in_TSTRB),
    .strm_in_TUSER(strm_in_TUSER),
    .strm_in_TLAST(strm_in_TLAST),
    .strm_in_TID(strm_in_TID),
    .strm_in_TDEST(strm_in_TDEST),
    .img_src_data_stream_2_din(strm2mat_U0_img_src_data_stream_2_din),
    .img_src_data_stream_2_full_n(img_src_data_stream_2_full_n),
    .img_src_data_stream_2_write(strm2mat_U0_img_src_data_stream_2_write),
    .img_src_data_stream_1_din(strm2mat_U0_img_src_data_stream_1_din),
    .img_src_data_stream_1_full_n(img_src_data_stream_1_full_n),
    .img_src_data_stream_1_write(strm2mat_U0_img_src_data_stream_1_write),
    .img_src_data_stream_s_din(strm2mat_U0_img_src_data_stream_s_din),
    .img_src_data_stream_s_full_n(img_src_data_stream_s_full_n),
    .img_src_data_stream_s_write(strm2mat_U0_img_src_data_stream_s_write)
);

CvtColor CvtColor_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(CvtColor_U0_ap_start),
    .ap_done(CvtColor_U0_ap_done),
    .ap_continue(CvtColor_U0_ap_continue),
    .ap_idle(CvtColor_U0_ap_idle),
    .ap_ready(CvtColor_U0_ap_ready),
    .img_src_data_stream_2_dout(img_src_data_stream_2_dout),
    .img_src_data_stream_2_empty_n(img_src_data_stream_2_empty_n),
    .img_src_data_stream_2_read(CvtColor_U0_img_src_data_stream_2_read),
    .img_src_data_stream_1_dout(img_src_data_stream_1_dout),
    .img_src_data_stream_1_empty_n(img_src_data_stream_1_empty_n),
    .img_src_data_stream_1_read(CvtColor_U0_img_src_data_stream_1_read),
    .img_src_data_stream_s_dout(img_src_data_stream_s_dout),
    .img_src_data_stream_s_empty_n(img_src_data_stream_s_empty_n),
    .img_src_data_stream_s_read(CvtColor_U0_img_src_data_stream_s_read),
    .img_hsv_data_stream_2_din(CvtColor_U0_img_hsv_data_stream_2_din),
    .img_hsv_data_stream_2_full_n(img_hsv_data_stream_2_full_n),
    .img_hsv_data_stream_2_write(CvtColor_U0_img_hsv_data_stream_2_write),
    .img_hsv_data_stream_1_din(CvtColor_U0_img_hsv_data_stream_1_din),
    .img_hsv_data_stream_1_full_n(img_hsv_data_stream_1_full_n),
    .img_hsv_data_stream_1_write(CvtColor_U0_img_hsv_data_stream_1_write),
    .img_hsv_data_stream_s_din(CvtColor_U0_img_hsv_data_stream_s_din),
    .img_hsv_data_stream_s_full_n(img_hsv_data_stream_s_full_n),
    .img_hsv_data_stream_s_write(CvtColor_U0_img_hsv_data_stream_s_write)
);

doublethres doublethres_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(doublethres_U0_ap_start),
    .ap_done(doublethres_U0_ap_done),
    .ap_continue(doublethres_U0_ap_continue),
    .ap_idle(doublethres_U0_ap_idle),
    .ap_ready(doublethres_U0_ap_ready),
    .H_thres_dout(H_thres_byval_c_dout),
    .H_thres_empty_n(H_thres_byval_c_empty_n),
    .H_thres_read(doublethres_U0_H_thres_read),
    .S_thres_dout(S_thres_byval_c_dout),
    .S_thres_empty_n(S_thres_byval_c_empty_n),
    .S_thres_read(doublethres_U0_S_thres_read),
    .V_thres_dout(V_thres_byval_c_dout),
    .V_thres_empty_n(V_thres_byval_c_empty_n),
    .V_thres_read(doublethres_U0_V_thres_read),
    .img_doublethres_data_din(doublethres_U0_img_doublethres_data_din),
    .img_doublethres_data_full_n(img_doublethres_data_full_n),
    .img_doublethres_data_write(doublethres_U0_img_doublethres_data_write),
    .img_hsv_data_stream_2_dout(img_hsv_data_stream_2_dout),
    .img_hsv_data_stream_2_empty_n(img_hsv_data_stream_2_empty_n),
    .img_hsv_data_stream_2_read(doublethres_U0_img_hsv_data_stream_2_read),
    .img_hsv_data_stream_1_dout(img_hsv_data_stream_1_dout),
    .img_hsv_data_stream_1_empty_n(img_hsv_data_stream_1_empty_n),
    .img_hsv_data_stream_1_read(doublethres_U0_img_hsv_data_stream_1_read),
    .img_hsv_data_stream_s_dout(img_hsv_data_stream_s_dout),
    .img_hsv_data_stream_s_empty_n(img_hsv_data_stream_s_empty_n),
    .img_hsv_data_stream_s_read(doublethres_U0_img_hsv_data_stream_s_read)
);

count_720u_1280u_s count_720u_1280u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(count_720u_1280u_U0_ap_start),
    .ap_done(count_720u_1280u_U0_ap_done),
    .ap_continue(count_720u_1280u_U0_ap_continue),
    .ap_idle(count_720u_1280u_U0_ap_idle),
    .ap_ready(count_720u_1280u_U0_ap_ready),
    .img_doublethres_data_dout(img_doublethres_data_dout),
    .img_doublethres_data_empty_n(img_doublethres_data_empty_n),
    .img_doublethres_data_read(count_720u_1280u_U0_img_doublethres_data_read),
    .count_strm_V_V_din(count_720u_1280u_U0_count_strm_V_V_din),
    .count_strm_V_V_full_n(count_strm_V_V_full_n),
    .count_strm_V_V_write(count_720u_1280u_U0_count_strm_V_V_write)
);

findMaxRegion findMaxRegion_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(findMaxRegion_U0_ap_start),
    .ap_done(findMaxRegion_U0_ap_done),
    .ap_continue(findMaxRegion_U0_ap_continue),
    .ap_idle(findMaxRegion_U0_ap_idle),
    .ap_ready(findMaxRegion_U0_ap_ready),
    .count_strm_V_V_dout(count_strm_V_V_dout),
    .count_strm_V_V_empty_n(count_strm_V_V_empty_n),
    .count_strm_V_V_read(findMaxRegion_U0_count_strm_V_V_read),
    .res_strm_V_din(findMaxRegion_U0_res_strm_V_din),
    .res_strm_V_full_n(res_strm_V_full_n),
    .res_strm_V_write(findMaxRegion_U0_res_strm_V_write)
);

Block_codeRepl17_pro Block_codeRepl17_pro_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_codeRepl17_pro_U0_ap_start),
    .ap_done(Block_codeRepl17_pro_U0_ap_done),
    .ap_continue(Block_codeRepl17_pro_U0_ap_continue),
    .ap_idle(Block_codeRepl17_pro_U0_ap_idle),
    .ap_ready(Block_codeRepl17_pro_U0_ap_ready),
    .res(Block_codeRepl17_pro_U0_res),
    .res_ap_vld(Block_codeRepl17_pro_U0_res_ap_vld),
    .res_strm_V_dout(res_strm_V_dout),
    .res_strm_V_empty_n(res_strm_V_empty_n),
    .res_strm_V_read(Block_codeRepl17_pro_U0_res_strm_V_read)
);

fifo_w16_d2_A H_thres_c1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(color_detect_entry3_U0_H_thres_out_din),
    .if_full_n(H_thres_c1_full_n),
    .if_write(color_detect_entry3_U0_H_thres_out_write),
    .if_dout(H_thres_c1_dout),
    .if_empty_n(H_thres_c1_empty_n),
    .if_read(color_detect_entry13_U0_H_thres_read)
);

fifo_w16_d2_A S_thres_c2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(color_detect_entry3_U0_S_thres_out_din),
    .if_full_n(S_thres_c2_full_n),
    .if_write(color_detect_entry3_U0_S_thres_out_write),
    .if_dout(S_thres_c2_dout),
    .if_empty_n(S_thres_c2_empty_n),
    .if_read(color_detect_entry13_U0_S_thres_read)
);

fifo_w16_d2_A V_thres_c3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(color_detect_entry3_U0_V_thres_out_din),
    .if_full_n(V_thres_c3_full_n),
    .if_write(color_detect_entry3_U0_V_thres_out_write),
    .if_dout(V_thres_c3_dout),
    .if_empty_n(V_thres_c3_empty_n),
    .if_read(color_detect_entry13_U0_V_thres_read)
);

fifo_w16_d2_A H_thres_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(color_detect_entry13_U0_H_thres_out_din),
    .if_full_n(H_thres_c_full_n),
    .if_write(color_detect_entry13_U0_H_thres_out_write),
    .if_dout(H_thres_c_dout),
    .if_empty_n(H_thres_c_empty_n),
    .if_read(Block_codeRepl1_proc_U0_H_thres_read)
);

fifo_w16_d2_A S_thres_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(color_detect_entry13_U0_S_thres_out_din),
    .if_full_n(S_thres_c_full_n),
    .if_write(color_detect_entry13_U0_S_thres_out_write),
    .if_dout(S_thres_c_dout),
    .if_empty_n(S_thres_c_empty_n),
    .if_read(Block_codeRepl1_proc_U0_S_thres_read)
);

fifo_w16_d2_A V_thres_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(color_detect_entry13_U0_V_thres_out_din),
    .if_full_n(V_thres_c_full_n),
    .if_write(color_detect_entry13_U0_V_thres_out_write),
    .if_dout(V_thres_c_dout),
    .if_empty_n(V_thres_c_empty_n),
    .if_read(Block_codeRepl1_proc_U0_V_thres_read)
);

fifo_w16_d3_A V_thres_byval_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl1_proc_U0_V_thres_byval_out_din),
    .if_full_n(V_thres_byval_c_full_n),
    .if_write(Block_codeRepl1_proc_U0_V_thres_byval_out_write),
    .if_dout(V_thres_byval_c_dout),
    .if_empty_n(V_thres_byval_c_empty_n),
    .if_read(doublethres_U0_V_thres_read)
);

fifo_w16_d3_A S_thres_byval_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl1_proc_U0_S_thres_byval_out_din),
    .if_full_n(S_thres_byval_c_full_n),
    .if_write(Block_codeRepl1_proc_U0_S_thres_byval_out_write),
    .if_dout(S_thres_byval_c_dout),
    .if_empty_n(S_thres_byval_c_empty_n),
    .if_read(doublethres_U0_S_thres_read)
);

fifo_w16_d3_A H_thres_byval_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl1_proc_U0_H_thres_byval_out_din),
    .if_full_n(H_thres_byval_c_full_n),
    .if_write(Block_codeRepl1_proc_U0_H_thres_byval_out_write),
    .if_dout(H_thres_byval_c_dout),
    .if_empty_n(H_thres_byval_c_empty_n),
    .if_read(doublethres_U0_H_thres_read)
);

fifo_w8_d2_A img_src_data_stream_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(strm2mat_U0_img_src_data_stream_2_din),
    .if_full_n(img_src_data_stream_2_full_n),
    .if_write(strm2mat_U0_img_src_data_stream_2_write),
    .if_dout(img_src_data_stream_2_dout),
    .if_empty_n(img_src_data_stream_2_empty_n),
    .if_read(CvtColor_U0_img_src_data_stream_2_read)
);

fifo_w8_d2_A img_src_data_stream_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(strm2mat_U0_img_src_data_stream_1_din),
    .if_full_n(img_src_data_stream_1_full_n),
    .if_write(strm2mat_U0_img_src_data_stream_1_write),
    .if_dout(img_src_data_stream_1_dout),
    .if_empty_n(img_src_data_stream_1_empty_n),
    .if_read(CvtColor_U0_img_src_data_stream_1_read)
);

fifo_w8_d2_A img_src_data_stream_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(strm2mat_U0_img_src_data_stream_s_din),
    .if_full_n(img_src_data_stream_s_full_n),
    .if_write(strm2mat_U0_img_src_data_stream_s_write),
    .if_dout(img_src_data_stream_s_dout),
    .if_empty_n(img_src_data_stream_s_empty_n),
    .if_read(CvtColor_U0_img_src_data_stream_s_read)
);

fifo_w8_d2_A img_hsv_data_stream_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_U0_img_hsv_data_stream_2_din),
    .if_full_n(img_hsv_data_stream_2_full_n),
    .if_write(CvtColor_U0_img_hsv_data_stream_2_write),
    .if_dout(img_hsv_data_stream_2_dout),
    .if_empty_n(img_hsv_data_stream_2_empty_n),
    .if_read(doublethres_U0_img_hsv_data_stream_2_read)
);

fifo_w8_d2_A img_hsv_data_stream_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_U0_img_hsv_data_stream_1_din),
    .if_full_n(img_hsv_data_stream_1_full_n),
    .if_write(CvtColor_U0_img_hsv_data_stream_1_write),
    .if_dout(img_hsv_data_stream_1_dout),
    .if_empty_n(img_hsv_data_stream_1_empty_n),
    .if_read(doublethres_U0_img_hsv_data_stream_1_read)
);

fifo_w8_d2_A img_hsv_data_stream_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_U0_img_hsv_data_stream_s_din),
    .if_full_n(img_hsv_data_stream_s_full_n),
    .if_write(CvtColor_U0_img_hsv_data_stream_s_write),
    .if_dout(img_hsv_data_stream_s_dout),
    .if_empty_n(img_hsv_data_stream_s_empty_n),
    .if_read(doublethres_U0_img_hsv_data_stream_s_read)
);

fifo_w8_d2_A img_doublethres_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(doublethres_U0_img_doublethres_data_din),
    .if_full_n(img_doublethres_data_full_n),
    .if_write(doublethres_U0_img_doublethres_data_write),
    .if_dout(img_doublethres_data_dout),
    .if_empty_n(img_doublethres_data_empty_n),
    .if_read(count_720u_1280u_U0_img_doublethres_data_read)
);

fifo_w12_d2_A count_strm_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(count_720u_1280u_U0_count_strm_V_V_din),
    .if_full_n(count_strm_V_V_full_n),
    .if_write(count_720u_1280u_U0_count_strm_V_V_write),
    .if_dout(count_strm_V_V_dout),
    .if_empty_n(count_strm_V_V_empty_n),
    .if_read(findMaxRegion_U0_count_strm_V_V_read)
);

fifo_w32_d2_A res_strm_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(findMaxRegion_U0_res_strm_V_din),
    .if_full_n(res_strm_V_full_n),
    .if_write(findMaxRegion_U0_res_strm_V_write),
    .if_dout(res_strm_V_dout),
    .if_empty_n(res_strm_V_empty_n),
    .if_read(Block_codeRepl17_pro_U0_res_strm_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_codeRepl17_pro_U0_ap_start <= 1'b0;
    end else begin
        if ((ap_start == 1'b1)) begin
            ap_sync_reg_Block_codeRepl17_pro_U0_ap_start <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_codeRepl1_proc_U0_ap_start <= 1'b0;
    end else begin
        if ((ap_start == 1'b1)) begin
            ap_sync_reg_Block_codeRepl1_proc_U0_ap_start <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_CvtColor_U0_ap_start <= 1'b0;
    end else begin
        if ((ap_start == 1'b1)) begin
            ap_sync_reg_CvtColor_U0_ap_start <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_color_detect_entry13_U0_ap_start <= 1'b0;
    end else begin
        if ((ap_start == 1'b1)) begin
            ap_sync_reg_color_detect_entry13_U0_ap_start <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_color_detect_entry3_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_color_detect_entry3_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_color_detect_entry3_U0_ap_ready <= ap_sync_color_detect_entry3_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_count_720u_1280u_U0_ap_start <= 1'b0;
    end else begin
        if ((ap_start == 1'b1)) begin
            ap_sync_reg_count_720u_1280u_U0_ap_start <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_doublethres_U0_ap_start <= 1'b0;
    end else begin
        if ((ap_start == 1'b1)) begin
            ap_sync_reg_doublethres_U0_ap_start <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_findMaxRegion_U0_ap_start <= 1'b0;
    end else begin
        if ((ap_start == 1'b1)) begin
            ap_sync_reg_findMaxRegion_U0_ap_start <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_strm2mat_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_strm2mat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_strm2mat_U0_ap_ready <= ap_sync_strm2mat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((color_detect_entry3_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        color_detect_entry3_U0_ap_ready_count <= (color_detect_entry3_U0_ap_ready_count - 2'd1);
    end else if (((color_detect_entry3_U0_ap_ready == 1'b1) & (ap_sync_ready == 1'b0))) begin
        color_detect_entry3_U0_ap_ready_count <= (color_detect_entry3_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (strm2mat_U0_ap_ready == 1'b0))) begin
        strm2mat_U0_ap_ready_count <= (strm2mat_U0_ap_ready_count - 2'd1);
    end else if (((strm2mat_U0_ap_ready == 1'b1) & (ap_sync_ready == 1'b0))) begin
        strm2mat_U0_ap_ready_count <= (strm2mat_U0_ap_ready_count + 2'd1);
    end
end

assign Block_codeRepl17_pro_U0_ap_continue = 1'b1;

assign Block_codeRepl17_pro_U0_ap_start = (ap_sync_reg_Block_codeRepl17_pro_U0_ap_start | ap_start);

assign Block_codeRepl1_proc_U0_ap_continue = 1'b1;

assign Block_codeRepl1_proc_U0_ap_start = (ap_sync_reg_Block_codeRepl1_proc_U0_ap_start | ap_start);

assign CvtColor_U0_ap_continue = 1'b1;

assign CvtColor_U0_ap_start = (ap_sync_reg_CvtColor_U0_ap_start | ap_start);

assign ap_done = Block_codeRepl17_pro_U0_ap_done;

assign ap_idle = (strm2mat_U0_ap_idle & findMaxRegion_U0_ap_idle & doublethres_U0_ap_idle & count_720u_1280u_U0_ap_idle & color_detect_entry3_U0_ap_idle & color_detect_entry13_U0_ap_idle & CvtColor_U0_ap_idle & Block_codeRepl1_proc_U0_ap_idle & Block_codeRepl17_pro_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_color_detect_entry3_U0_ap_ready = (color_detect_entry3_U0_ap_ready | ap_sync_reg_color_detect_entry3_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Block_codeRepl17_pro_U0_ap_done;

assign ap_sync_ready = (ap_sync_strm2mat_U0_ap_ready & ap_sync_color_detect_entry3_U0_ap_ready);

assign ap_sync_strm2mat_U0_ap_ready = (strm2mat_U0_ap_ready | ap_sync_reg_strm2mat_U0_ap_ready);

assign color_detect_entry13_U0_ap_continue = 1'b1;

assign color_detect_entry13_U0_ap_start = (ap_sync_reg_color_detect_entry13_U0_ap_start | ap_start);

assign color_detect_entry3_U0_ap_continue = 1'b1;

assign color_detect_entry3_U0_ap_start = ((ap_sync_reg_color_detect_entry3_U0_ap_ready ^ 1'b1) & ap_start);

assign count_720u_1280u_U0_ap_continue = 1'b1;

assign count_720u_1280u_U0_ap_start = (ap_sync_reg_count_720u_1280u_U0_ap_start | ap_start);

assign doublethres_U0_ap_continue = 1'b1;

assign doublethres_U0_ap_start = (ap_sync_reg_doublethres_U0_ap_start | ap_start);

assign findMaxRegion_U0_ap_continue = 1'b1;

assign findMaxRegion_U0_ap_start = (ap_sync_reg_findMaxRegion_U0_ap_start | ap_start);

assign strm2mat_U0_ap_continue = 1'b1;

assign strm2mat_U0_ap_start = ((ap_sync_reg_strm2mat_U0_ap_ready ^ 1'b1) & ap_start);

assign strm_in_TREADY = strm2mat_U0_strm_in_TREADY;

endmodule //color_detect
